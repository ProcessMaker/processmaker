{"version":3,"file":"static/chunks/5367-196d610b8d75e939.js","mappings":"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","sources":["webpack://_N_E/./src/constants/data.ts","webpack://_N_E/./src/layout/EditorWrapper/index.tsx","webpack://_N_E/./src/lib/utils/graph/calculateNodeSize.ts","webpack://_N_E/./src/lib/utils/widget.ts","webpack://_N_E/./src/services/json.ts","webpack://_N_E/./src/lib/utils/json/jsonAdapter.ts","webpack://_N_E/./src/store/useFile.ts","webpack://_N_E/./src/lib/utils/graph/getChildrenEdges.ts","webpack://_N_E/./src/lib/utils/graph/getOutgoers.ts","webpack://_N_E/./src/lib/utils/core/addEdgeToGraph.ts","webpack://_N_E/./src/lib/utils/core/addNodeToGraph.ts","webpack://_N_E/./src/lib/utils/core/traverse.ts","webpack://_N_E/./src/lib/utils/json/getNodePath.ts","webpack://_N_E/./src/lib/utils/json/jsonParser.ts","webpack://_N_E/./src/store/useGraph.ts","webpack://_N_E/./src/store/useJson.ts","webpack://_N_E/./src/store/useModal.ts","webpack://_N_E/./src/store/useStored.ts","webpack://_N_E/./src/types/models.ts","webpack://_N_E/<anon>"],"sourcesContent":["import useUser from \"src/store/useUser\";\n\nexport const baseURL = process.env.NEXT_PUBLIC_BASE_URL as string;\n\nexport const paymentURL = () => {\n  const email = useUser.getState().user?.email;\n  let url = process.env.NEXT_PUBLIC_PAYMENT_URL as string;\n\n  if (email) url += `?checkout[email]=${email}`;\n  return url;\n};\n\n// Example taken from https://mdn.github.io/learning-area/javascript/oojs/json/superheroes.json\nconst sampleJson = Object.freeze({\n  squadName: \"Super hero squad\",\n  homeTown: \"Metro City\",\n  formed: 2016,\n  secretBase: \"Super tower\",\n  active: true,\n  members: [\n    {\n      name: \"Molecule Man\",\n      age: 29,\n      secretIdentity: \"Dan Jukes\",\n      powers: [\"Radiation resistance\", \"Turning tiny\", \"Radiation blast\"],\n    },\n    {\n      name: \"Madame Uppercut\",\n      age: 39,\n      secretIdentity: \"Jane Wilson\",\n      powers: [\"Million tonne punch\", \"Damage resistance\", \"Superhuman reflexes\"],\n    },\n    {\n      name: \"Eternal Flame\",\n      age: 1000000,\n      secretIdentity: \"Unknown\",\n      powers: [\n        \"Immortality\",\n        \"Heat Immunity\",\n        \"Inferno\",\n        \"Teleportation\",\n        \"Interdimensional travel\",\n      ],\n    },\n  ],\n});\n\nexport const defaultJson = JSON.stringify(sampleJson, null, 2);\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { MantineProvider, MantineThemeOverride } from \"@mantine/core\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { monaSans } from \"src/constants/fonts\";\nimport { lightTheme, darkTheme } from \"src/constants/theme\";\nimport useStored from \"src/store/useStored\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nconst mantineTheme: MantineThemeOverride = {\n  fontFamily: monaSans.style.fontFamily,\n  headings: {\n    fontFamily: monaSans.style.fontFamily,\n  },\n  components: {\n    Divider: {\n      styles: () => ({\n        root: {\n          borderTopColor: \"#4D4D4D !important\",\n        },\n      }),\n    },\n    Modal: {\n      styles: theme => ({\n        title: {\n          fontWeight: 700,\n        },\n        header: {\n          backgroundColor: theme.colorScheme === \"dark\" ? \"#36393E\" : \"#F3F3F3\",\n        },\n        body: {\n          backgroundColor: theme.colorScheme === \"dark\" ? \"#36393E\" : \"#F3F3F3\",\n        },\n      }),\n    },\n    Button: {\n      styles: () => ({\n        inner: {\n          fontWeight: 700,\n        },\n      }),\n    },\n  },\n};\n\nexport const EditorWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const lightmode = useStored(state => state.lightmode);\n\n  return (\n    <ThemeProvider theme={lightmode ? lightTheme : darkTheme}>\n      <MantineProvider\n        theme={{\n          colorScheme: lightmode ? \"light\" : \"dark\",\n          ...mantineTheme,\n        }}\n        withCSSVariables\n        withGlobalStyles\n        withNormalizeCSS\n      >\n        <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n      </MantineProvider>\n    </ThemeProvider>\n  );\n};\n","import { firaMono } from \"src/constants/fonts\";\nimport useGraph from \"src/store/useGraph\";\nimport useStored from \"src/store/useStored\";\n\ntype Text = string | [string, string][];\ntype Size = { width: number; height: number };\n\nexport const isContentImage = (value: Text) => {\n  if (typeof value !== \"string\") return false;\n\n  const isImageURL = /(https?:\\/\\/.*\\.(?:png|jpg|gif))/i.test(value);\n  const isBase64 = value.startsWith(\"data:image/\") && value.includes(\"base64\");\n\n  return isImageURL || isBase64;\n};\n\nconst calculateLines = (text: Text): string => {\n  if (typeof text === \"string\") {\n    return text;\n  } else {\n    return text.map(([k, v]) => `${k}: ${JSON.stringify(v).slice(0, 80)}`).join(\"\\n\");\n  }\n};\n\nconst calculateWidthAndHeight = (str: string, single = false) => {\n  if (!str) return { width: 45, height: 45 };\n\n  const dummyElement = document.createElement(\"div\");\n\n  dummyElement.style.whiteSpace = single ? \"nowrap\" : \"pre-wrap\";\n  dummyElement.innerHTML = str;\n  dummyElement.style.fontSize = \"12px\";\n  dummyElement.style.width = \"fit-content\";\n  dummyElement.style.height = \"fit-content\";\n  dummyElement.style.padding = \"10px\";\n  dummyElement.style.fontWeight = \"500\";\n  dummyElement.style.overflowWrap = \"break-word\";\n  dummyElement.style.fontFamily = firaMono.style.fontFamily;\n  document.body.appendChild(dummyElement);\n\n  const clientRect = dummyElement.getBoundingClientRect();\n  const width = clientRect.width + 4;\n  const height = clientRect.height;\n\n  document.body.removeChild(dummyElement);\n\n  return { width, height };\n};\n\nconst sizeCache = new Map<Text, Size>();\n\n// clear cache every 2 mins\nsetInterval(() => sizeCache.clear(), 120_000);\n\nexport const calculateNodeSize = (text: Text, isParent = false) => {\n  const { foldNodes } = useGraph.getState();\n  const { imagePreview } = useStored.getState();\n  const isImage = isContentImage(text) && imagePreview;\n\n  const cacheKey = [text, isParent, foldNodes].toString();\n\n  // check cache if data already exists\n  if (sizeCache.has(cacheKey)) {\n    const size = sizeCache.get(cacheKey);\n\n    if (size) return size;\n  }\n\n  const lines = calculateLines(text);\n  const sizes = calculateWidthAndHeight(lines, typeof text === \"string\");\n\n  if (isImage) {\n    sizes.width = 80;\n    sizes.height = 80;\n  }\n\n  if (foldNodes) sizes.width = 300;\n  if (isParent && foldNodes) sizes.width = 170;\n  if (isParent) sizes.width += 100;\n  if (sizes.width > 700) sizes.width = 700;\n\n  sizeCache.set(cacheKey, sizes);\n  return sizes;\n};\n","export function isIframe() {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n}\n","import { PostgrestSingleResponse } from \"@supabase/supabase-js\";\nimport toast from \"react-hot-toast\";\nimport { supabase } from \"src/lib/api/supabase\";\nimport { File } from \"src/store/useFile\";\nimport useUser from \"src/store/useUser\";\nimport { FileFormat } from \"src/types/models\";\n\ntype CloudSave = {\n  id?: string;\n  contents: string;\n  format: FileFormat;\n};\n\nconst saveToCloud = async ({\n  id: p_id = \"\",\n  contents: p_content,\n  format: p_format = FileFormat.JSON,\n}: CloudSave): Promise<PostgrestSingleResponse<string>> => {\n  return await supabase.rpc(\"upsert_document\", {\n    p_content,\n    p_format,\n    p_id,\n  });\n};\n\nconst getFromCloud = async (doc_id: string): Promise<PostgrestSingleResponse<File[]>> => {\n  return await supabase.rpc(\"get_document_by_id\", { doc_id });\n};\n\nconst getAllJson = async (): Promise<File[]> => {\n  const userEmail = useUser.getState().user?.email;\n  if (!userEmail) return [];\n\n  const { data, error } = await supabase\n    .from(\"document\")\n    .select()\n    .eq(\"owner_email\", userEmail)\n    .order(\"created_at\", { ascending: false });\n\n  if (error) {\n    toast.error(error.message);\n    return [];\n  }\n\n  return data;\n};\n\nconst updateJson = async (id: string, data: object) => {\n  return await supabase.from(\"document\").update(data).eq(\"id\", id).select(\"private\");\n};\n\nconst deleteJson = async (id: string) => await supabase.from(\"document\").delete().eq(\"id\", id);\n\nexport { saveToCloud, getFromCloud, getAllJson, updateJson, deleteJson };\n","import { load, dump } from \"js-yaml\";\nimport { csv2json, json2csv } from \"json-2-csv\";\nimport jxon from \"jxon\";\nimport toml from \"toml\";\nimport { FileFormat } from \"src/types/models\";\n\nconst keyExists = (obj: object, key: string) => {\n  if (!obj || (typeof obj !== \"object\" && !Array.isArray(obj))) {\n    return false;\n  } else if (obj.hasOwnProperty(key)) {\n    return obj[key];\n  } else if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      const result = keyExists(obj[i], key);\n\n      if (result) {\n        return result;\n      }\n    }\n  } else {\n    for (const k in obj) {\n      const result = keyExists(obj[k], key);\n\n      if (result) {\n        return result;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst contentToJson = async (value: string, format = FileFormat.JSON): Promise<object> => {\n  try {\n    let json: object = {};\n\n    if (format === FileFormat.JSON) json = JSON.parse(value);\n    if (format === FileFormat.YAML) json = load(value) as object;\n    if (format === FileFormat.XML) json = jxon.stringToJs(value);\n    if (format === FileFormat.TOML) json = toml.parse(value);\n    if (format === FileFormat.CSV) json = await csv2json(value);\n    if (format === FileFormat.XML && keyExists(json, \"parsererror\")) throw Error(\"Unknown error!\");\n\n    return Promise.resolve(json);\n  } catch (error: any) {\n    throw error;\n  }\n};\n\nconst jsonToContent = async (json: string, format: FileFormat): Promise<string> => {\n  try {\n    let contents = json;\n\n    if (!json) return json;\n    if (format === FileFormat.JSON) contents = json;\n    if (format === FileFormat.YAML) contents = dump(JSON.parse(json));\n    if (format === FileFormat.XML) contents = dump(JSON.parse(json));\n    if (format === FileFormat.TOML) contents = dump(JSON.parse(json));\n    if (format === FileFormat.CSV) contents = await json2csv(JSON.parse(json));\n\n    return Promise.resolve(contents);\n  } catch (error: any) {\n    throw error;\n  }\n};\n\nexport { contentToJson, jsonToContent };\n","import debounce from \"lodash.debounce\";\nimport _get from \"lodash.get\";\nimport _set from \"lodash.set\";\nimport ReactGA from \"react-ga4\";\nimport { toast } from \"react-hot-toast\";\nimport { create } from \"zustand\";\nimport { defaultJson } from \"src/constants/data\";\nimport { contentToJson, jsonToContent } from \"src/lib/utils/json/jsonAdapter\";\nimport { isIframe } from \"src/lib/utils/widget\";\nimport { getFromCloud } from \"src/services/json\";\nimport { FileFormat } from \"src/types/models\";\nimport useGraph from \"./useGraph\";\nimport useJson from \"./useJson\";\nimport useStored from \"./useStored\";\nimport useUser from \"./useUser\";\n\ntype SetContents = {\n  contents?: string;\n  hasChanges?: boolean;\n  skipUpdate?: boolean;\n};\n\ntype Query = string | string[] | undefined;\n\ninterface JsonActions {\n  getContents: () => string;\n  getFormat: () => FileFormat;\n  getHasChanges: () => boolean;\n  setError: (error: object | null) => void;\n  setHasChanges: (hasChanges: boolean) => void;\n  setContents: (data: SetContents) => void;\n  fetchFile: (fileId: string) => void;\n  fetchUrl: (url: string) => void;\n  editContents: (path: string, value: string, callback?: () => void) => void;\n  setFormat: (format: FileFormat) => void;\n  clear: () => void;\n  setFile: (fileData: File) => void;\n  setJsonSchema: (jsonSchema: object | null) => void;\n  checkEditorSession: (url: Query, widget?: boolean) => void;\n}\n\nexport type File = {\n  id: string;\n  views: number;\n  owner_email: string;\n  name: string;\n  content: string;\n  private: boolean;\n  format: FileFormat;\n  created_at: string;\n  updated_at: string;\n};\n\nconst initialStates = {\n  fileData: null as File | null,\n  format: FileFormat.JSON,\n  contents: defaultJson,\n  error: null as any,\n  hasChanges: false,\n  jsonSchema: null as object | null,\n};\n\nexport type FileStates = typeof initialStates;\n\nconst isURL = (value: string) => {\n  return /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi.test(\n    value\n  );\n};\n\nconst debouncedUpdateJson = debounce(\n  (value: unknown) => useJson.getState().setJson(JSON.stringify(value, null, 2)),\n  800\n);\n\nconst filterArrayAndObjectFields = (obj: object) => {\n  const result = {};\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (Array.isArray(obj[key]) || typeof obj[key] === \"object\") {\n        result[key] = obj[key];\n      }\n    }\n  }\n\n  return result;\n};\nconst useFile = create<FileStates & JsonActions>()((set, get) => ({\n  ...initialStates,\n  clear: () => {\n    set({ contents: \"\" });\n    useJson.getState().clear();\n  },\n  setJsonSchema: jsonSchema => {\n    if (useUser.getState().premium) set({ jsonSchema });\n  },\n  setFile: fileData => {\n    set({ fileData, format: fileData.format || FileFormat.JSON });\n    get().setContents({ contents: fileData.content, hasChanges: false });\n  },\n  getContents: () => get().contents,\n  getFormat: () => get().format,\n  getHasChanges: () => get().hasChanges,\n  setFormat: async format => {\n    try {\n      const prevFormat = get().format;\n\n      set({ format });\n      const contentJson = await contentToJson(get().contents, prevFormat);\n      const jsonContent = await jsonToContent(JSON.stringify(contentJson, null, 2), format);\n\n      get().setContents({ contents: jsonContent });\n\n      ReactGA.event({ action: \"change_data_format\", category: \"User\" });\n    } catch (error) {\n      get().clear();\n      console.warn(\"The content was unable to be converted, so it was cleared instead.\");\n    }\n  },\n  setContents: async ({ contents, hasChanges = true, skipUpdate = false }) => {\n    try {\n      set({ ...(contents && { contents }), error: null, hasChanges });\n\n      const isFetchURL = window.location.href.includes(\"?\");\n      const json = await contentToJson(get().contents, get().format);\n\n      if (!useStored.getState().liveTransform && skipUpdate) return;\n\n      if (contents && contents.length < 80_000 && !isIframe() && !isFetchURL) {\n        sessionStorage.setItem(\"content\", contents);\n        sessionStorage.setItem(\"format\", get().format);\n        set({ hasChanges: true });\n      }\n\n      debouncedUpdateJson(json);\n    } catch (error: any) {\n      if (error?.mark?.snippet) return set({ error: error.mark.snippet });\n      if (error?.message) set({ error: error.message });\n      useJson.setState({ loading: false });\n      useGraph.setState({ loading: false });\n    }\n  },\n  setError: error => set({ error }),\n  setHasChanges: hasChanges => set({ hasChanges }),\n  fetchUrl: async url => {\n    try {\n      const res = await fetch(url);\n      const json = await res.json();\n      const jsonStr = JSON.stringify(json, null, 2);\n\n      get().setContents({ contents: jsonStr });\n      return useJson.setState({ json: jsonStr, loading: false });\n    } catch (error) {\n      get().clear();\n      toast.error(\"Failed to fetch document from URL!\");\n    }\n  },\n  checkEditorSession: (url, widget) => {\n    if (url && typeof url === \"string\") {\n      if (isURL(url)) return get().fetchUrl(url);\n      return get().fetchFile(url);\n    }\n\n    let contents = defaultJson;\n    const sessionContent = sessionStorage.getItem(\"content\") as string | null;\n    const format = sessionStorage.getItem(\"format\") as FileFormat | null;\n    if (sessionContent && !widget) contents = sessionContent;\n\n    if (format) set({ format });\n    get().setContents({ contents, hasChanges: false });\n  },\n  fetchFile: async id => {\n    try {\n      const { data, error } = await getFromCloud(id);\n      if (error) throw error;\n\n      if (data?.length) get().setFile(data[0]);\n      if (data?.length === 0) throw new Error(\"Document not found\");\n    } catch (error: any) {\n      if (error?.message) toast.error(error?.message);\n      get().setContents({ contents: defaultJson, hasChanges: false });\n    }\n  },\n  editContents: async (path, value, callback) => {\n    try {\n      if (!value) return;\n\n      let tempValue = value;\n      const pathJson = _get(JSON.parse(useJson.getState().json), path.replace(\"{Root}.\", \"\"));\n      const changedValue = JSON.parse(value);\n\n      if (typeof changedValue !== \"string\") {\n        tempValue = {\n          ...filterArrayAndObjectFields(pathJson),\n          ...changedValue,\n        };\n      } else {\n        tempValue = tempValue.replaceAll('\"', \"\");\n      }\n\n      const newJson = _set(\n        JSON.parse(useJson.getState().json),\n        path.replace(\"{Root}.\", \"\"),\n        tempValue\n      );\n\n      const contents = await jsonToContent(JSON.stringify(newJson, null, 2), get().format);\n\n      get().setContents({ contents });\n      if (callback) callback();\n    } catch (error) {\n      toast.error(\"Invalid Property!\");\n    }\n  },\n}));\n\nexport default useFile;\n","import { NodeData, EdgeData } from \"src/types/models\";\n\nexport const getChildrenEdges = (nodes: NodeData[], edges: EdgeData[]): EdgeData[] => {\n  const nodeIds = nodes.map(node => node.id);\n\n  return edges.filter(\n    edge => nodeIds.includes(edge.from as string) || nodeIds.includes(edge.to as string)\n  );\n};\n","import { NodeData, EdgeData } from \"src/types/models\";\n\nexport const getOutgoers = (\n  nodeId: string,\n  nodes: NodeData[],\n  edges: EdgeData[],\n  parent: string[] = []\n): [NodeData[], string[]] => {\n  const outgoerNodes: NodeData[] = [];\n  const matchingNodes: string[] = [];\n\n  if (parent.includes(nodeId)) {\n    const initialParentNode = nodes.find(n => n.id === nodeId);\n\n    if (initialParentNode) outgoerNodes.push(initialParentNode);\n  }\n\n  const findOutgoers = (currentNodeId: string) => {\n    const outgoerIds = edges.filter(e => e.from === currentNodeId).map(e => e.to);\n    const nodeList = nodes.filter(n => {\n      if (parent.includes(n.id) && !matchingNodes.includes(n.id)) matchingNodes.push(n.id);\n      return outgoerIds.includes(n.id) && !parent.includes(n.id);\n    });\n\n    outgoerNodes.push(...nodeList);\n    nodeList.forEach(node => findOutgoers(node.id));\n  };\n\n  findOutgoers(nodeId);\n  return [outgoerNodes, matchingNodes];\n};\n","import { Graph } from \"../json/jsonParser\";\n\nexport const addEdgeToGraph = (graph: Graph, from: string, to: string) => {\n  const newEdge = {\n    id: `e${from}-${to}`,\n    from: from,\n    to: to,\n  };\n\n  graph.edges.push(newEdge);\n};\n","import { NodeType } from \"jsonc-parser\";\nimport { calculateNodeSize } from \"src/lib/utils/graph/calculateNodeSize\";\nimport { Graph } from \"src/lib/utils/json/jsonParser\";\n\ntype Props = {\n  graph: Graph;\n  text: string | [string, string][];\n  isEmpty?: boolean;\n  type?: NodeType;\n};\n\nexport const addNodeToGraph = ({ graph, text, type = \"null\", isEmpty = false }: Props) => {\n  const id = String(graph.nodes.length + 1);\n  const isParent = type === \"array\" || type === \"object\";\n  const { width, height } = calculateNodeSize(text, isParent);\n\n  const node = {\n    id,\n    text,\n    width,\n    height,\n    data: {\n      type,\n      isParent,\n      isEmpty,\n      childrenCount: isParent ? 1 : 0,\n    },\n  };\n\n  graph.nodes.push(node);\n\n  return id;\n};\n","import { Node, NodeType } from \"jsonc-parser\";\nimport { calculateNodeSize } from \"src/lib/utils/graph/calculateNodeSize\";\nimport { Graph, States } from \"src/lib/utils/json/jsonParser\";\nimport { addEdgeToGraph } from \"./addEdgeToGraph\";\nimport { addNodeToGraph } from \"./addNodeToGraph\";\n\ntype PrimitiveOrNullType = \"boolean\" | \"string\" | \"number\" | \"null\";\n\nconst isPrimitiveOrNullType = (type: unknown): type is PrimitiveOrNullType => {\n  return [\"boolean\", \"string\", \"number\", \"null\"].includes(type as string);\n};\n\nconst alignChildren = (nodeA: Node, nodeB: Node): number => {\n  const aChildType = nodeA?.children?.[1]?.type;\n  const bChildType = nodeB?.children?.[1]?.type;\n\n  if (isPrimitiveOrNullType(aChildType) && !isPrimitiveOrNullType(bChildType)) {\n    return -1;\n  }\n\n  return 0;\n};\n\nfunction handleNoChildren(\n  value: string | undefined,\n  states: States,\n  graph: Graph,\n  myParentId?: string,\n  parentType?: string,\n  nextType?: string\n) {\n  if (value === undefined) return;\n\n  if (parentType === \"property\" && nextType !== \"object\" && nextType !== \"array\") {\n    states.brothersParentId = myParentId;\n    if (nextType === undefined && Array.isArray(states.brothersNode)) {\n      states.brothersNode.push([states.brotherKey, value]);\n    } else {\n      states.brotherKey = value;\n    }\n  } else if (parentType === \"array\") {\n    const nodeFromArrayId = addNodeToGraph({ graph, text: String(value) });\n\n    if (myParentId) {\n      addEdgeToGraph(graph, myParentId, nodeFromArrayId);\n    }\n  }\n\n  if (nextType && parentType !== \"array\" && (nextType === \"object\" || nextType === \"array\")) {\n    states.parentName = value;\n  }\n}\n\nfunction handleHasChildren(\n  type: NodeType,\n  states: States,\n  graph: Graph,\n  children: Node[],\n  myParentId?: string,\n  parentType?: string\n) {\n  let parentId: string | undefined;\n\n  if (type !== \"property\" && states.parentName !== \"\") {\n    // add last brothers node and add parent node\n\n    if (states.brothersNode.length > 0) {\n      const findBrothersNode = states.brothersNodeProps.find(\n        e =>\n          e.parentId === states.brothersParentId &&\n          e.objectsFromArrayId === states.objectsFromArray[states.objectsFromArray.length - 1]\n      );\n\n      if (findBrothersNode) {\n        const findNodeIndex = graph.nodes.findIndex(e => e.id === findBrothersNode?.id);\n\n        if (findNodeIndex !== -1) {\n          const modifyNodes = [...graph.nodes];\n          const foundNode = modifyNodes[findNodeIndex];\n\n          foundNode.text = foundNode.text.concat(states.brothersNode as any);\n          const { width, height } = calculateNodeSize(foundNode.text, false);\n\n          foundNode.width = width;\n          foundNode.height = height;\n\n          graph.nodes = modifyNodes;\n          states.brothersNode = [];\n        }\n      } else {\n        const brothersNodeId = addNodeToGraph({ graph, text: states.brothersNode });\n\n        states.brothersNode = [];\n\n        if (states.brothersParentId) {\n          addEdgeToGraph(graph, states.brothersParentId, brothersNodeId);\n        } else {\n          states.notHaveParent.push(brothersNodeId);\n        }\n\n        states.brothersNodeProps.push({\n          id: brothersNodeId,\n          parentId: states.brothersParentId,\n          objectsFromArrayId: states.objectsFromArray[states.objectsFromArray.length - 1],\n        });\n      }\n    }\n\n    // Add parent node\n    parentId = addNodeToGraph({ graph, type, text: states.parentName });\n    states.bracketOpen.push({ id: parentId, type });\n    states.parentName = \"\";\n\n    // Add edges from parent node\n    const brothersProps = states.brothersNodeProps.filter(\n      e =>\n        e.parentId === myParentId &&\n        e.objectsFromArrayId === states.objectsFromArray[states.objectsFromArray.length - 1]\n    );\n\n    if (\n      (brothersProps.length > 0 &&\n        states.bracketOpen[states.bracketOpen.length - 2]?.type !== \"object\") ||\n      (brothersProps.length > 0 && states.bracketOpen.length === 1)\n    ) {\n      addEdgeToGraph(graph, brothersProps[brothersProps.length - 1].id, parentId);\n    } else if (myParentId) {\n      addEdgeToGraph(graph, myParentId, parentId);\n    } else {\n      states.notHaveParent.push(parentId);\n    }\n  } else if (parentType === \"array\") {\n    states.objectsFromArray = [...states.objectsFromArray, states.objectsFromArrayId++];\n  }\n  const traverseObject = (objectToTraverse: Node, nextType: string) => {\n    traverse({\n      states,\n      objectToTraverse,\n      parentType: type,\n      myParentId: states.bracketOpen[states.bracketOpen.length - 1]?.id,\n      nextType,\n    });\n  };\n\n  const traverseArray = () => {\n    children.forEach((objectToTraverse, index, array) => {\n      const nextType = array[index + 1]?.type;\n\n      traverseObject(objectToTraverse, nextType);\n    });\n  };\n\n  if (type === \"object\") {\n    children.sort(alignChildren);\n    traverseArray();\n  } else {\n    traverseArray();\n  }\n\n  if (type !== \"property\") {\n    // Add or concatenate brothers node when it is the last parent node\n    if (states.brothersNode.length > 0) {\n      const findBrothersNode = states.brothersNodeProps.find(\n        e =>\n          e.parentId === states.brothersParentId &&\n          e.objectsFromArrayId === states.objectsFromArray[states.objectsFromArray.length - 1]\n      );\n\n      if (findBrothersNode) {\n        const modifyNodes = [...graph.nodes];\n        const findNodeIndex = modifyNodes.findIndex(e => e.id === findBrothersNode?.id);\n\n        if (modifyNodes[findNodeIndex] && typeof states.brothersNode === \"string\") {\n          modifyNodes[findNodeIndex].text += states.brothersNode;\n\n          const { width, height } = calculateNodeSize(modifyNodes[findNodeIndex].text, false);\n\n          modifyNodes[findNodeIndex].width = width;\n          modifyNodes[findNodeIndex].height = height;\n\n          graph.nodes = modifyNodes;\n          states.brothersNode = [];\n        }\n      } else {\n        const brothersNodeId = addNodeToGraph({ graph, text: states.brothersNode });\n\n        states.brothersNode = [];\n\n        if (states.brothersParentId) {\n          addEdgeToGraph(graph, states.brothersParentId, brothersNodeId);\n        } else {\n          states.notHaveParent = [...states.notHaveParent, brothersNodeId];\n        }\n\n        const brothersNodeProps = {\n          id: brothersNodeId,\n          parentId: states.brothersParentId,\n          objectsFromArrayId: states.objectsFromArray[states.objectsFromArray.length - 1],\n        };\n\n        states.brothersNodeProps = [...states.brothersNodeProps, brothersNodeProps];\n      }\n    }\n\n    // Close brackets\n    if (parentType === \"array\") {\n      if (states.objectsFromArray.length > 0) {\n        states.objectsFromArray.pop();\n      }\n    } else {\n      if (states.bracketOpen.length > 0) {\n        states.bracketOpen.pop();\n      }\n    }\n\n    if (parentId) {\n      const myChildren = graph.edges.filter(edge => edge.from === parentId);\n      const parentIndex = graph.nodes.findIndex(node => node.id === parentId);\n\n      graph.nodes = graph.nodes.map((node, index) => {\n        if (index === parentIndex) {\n          const childrenCount = myChildren.length;\n\n          return { ...node, data: { ...node.data, childrenCount } };\n        }\n        return node;\n      });\n    }\n  }\n}\n\ntype Traverse = {\n  states: States;\n  objectToTraverse: Node;\n  parentType?: string;\n  myParentId?: string;\n  nextType?: string;\n};\n\nexport const traverse = ({\n  objectToTraverse,\n  states,\n  myParentId,\n  nextType,\n  parentType,\n}: Traverse) => {\n  const graph = states.graph;\n  const { type, children, value } = objectToTraverse;\n\n  if (!children) {\n    handleNoChildren(value, states, graph, myParentId, parentType, nextType);\n  } else if (children) {\n    handleHasChildren(type, states, graph, children, myParentId, parentType);\n  }\n};\n","import { NodeData, EdgeData } from \"src/types/models\";\n\nexport function getNodePath(nodes: NodeData[], edges: EdgeData[], nodeId: string) {\n  const { getParentsForNodeId } = require(\"reaflow\");\n\n  let resolvedPath = \"\";\n  const parentIds = getParentsForNodeId(nodes, edges, nodeId).map(n => n.id);\n  const path = parentIds.reverse().concat(nodeId);\n  const rootArrayElementIds = [\"1\"];\n  const edgesMap = new Map();\n\n  for (const edge of edges) {\n    if (!edgesMap.has(edge.from!)) {\n      edgesMap.set(edge.from!, []);\n    }\n    edgesMap.get(edge.from!).push(edge.to);\n  }\n\n  for (let i = 1; i < edges.length; i++) {\n    const curNodeId = edges[i].from!;\n\n    if (rootArrayElementIds.includes(curNodeId)) continue;\n    if (!edgesMap.has(curNodeId)) {\n      rootArrayElementIds.push(curNodeId);\n    }\n  }\n\n  if (rootArrayElementIds.length > 1) {\n    resolvedPath += `Root[${rootArrayElementIds.findIndex(id => id === path[0])}]`;\n  } else {\n    resolvedPath += \"{Root}\";\n  }\n\n  for (let i = 1; i < path.length; i++) {\n    const curId = path[i];\n    const curNode = nodes[+curId - 1];\n\n    if (!curNode) break;\n    if (curNode.data?.type === \"array\") {\n      resolvedPath += `.${curNode.text}`;\n\n      if (i !== path.length - 1) {\n        const toNodeId = path[i + 1];\n        const idx = edgesMap.get(curId).indexOf(toNodeId);\n\n        resolvedPath += `[${idx}]`;\n      }\n    }\n\n    if (curNode.data?.type === \"object\") {\n      resolvedPath += `.${curNode.text}`;\n    }\n  }\n\n  return resolvedPath;\n}\n","import { parseTree } from \"jsonc-parser\";\nimport { EdgeData, NodeData } from \"src/types/models\";\nimport { addEdgeToGraph } from \"../core/addEdgeToGraph\";\nimport { addNodeToGraph } from \"../core/addNodeToGraph\";\nimport { traverse } from \"../core/traverse\";\nimport { getNodePath } from \"./getNodePath\";\n\nexport type Graph = {\n  nodes: NodeData[];\n  edges: EdgeData[];\n};\n\nexport type States = {\n  parentName: string;\n  bracketOpen: { id: string; type: string }[];\n  objectsFromArray: number[];\n  objectsFromArrayId: number;\n  notHaveParent: string[];\n  brothersNode: [string, string][] | string;\n  brothersParentId: string | undefined;\n  brotherKey: string;\n  brothersNodeProps: {\n    id: string;\n    parentId: string | undefined;\n    objectsFromArrayId: number | undefined;\n  }[];\n  graph: Graph;\n};\n\nfunction initializeStates(): States {\n  return {\n    parentName: \"\",\n    bracketOpen: [],\n    objectsFromArray: [],\n    objectsFromArrayId: 0,\n    notHaveParent: [],\n    brothersNode: [],\n    brothersParentId: undefined,\n    brotherKey: \"\",\n    brothersNodeProps: [],\n    graph: {\n      nodes: [],\n      edges: [],\n    },\n  };\n}\n\nexport function parser(jsonStr: string): Graph {\n  try {\n    const states = initializeStates();\n    const parsedJsonTree = parseTree(jsonStr);\n\n    if (!parsedJsonTree) {\n      throw new Error(\"Invalid document\");\n    }\n\n    traverse({ states, objectToTraverse: parsedJsonTree });\n\n    const { notHaveParent, graph } = states;\n\n    if (notHaveParent.length > 1 && parsedJsonTree.type !== \"array\") {\n      const emptyNode = { id: null, text: \"\", isEmpty: true, data: {} };\n      const emptyId = addNodeToGraph({ graph, ...emptyNode });\n\n      notHaveParent.forEach(childId => addEdgeToGraph(graph, emptyId, childId));\n    }\n\n    if (states.graph.nodes.length === 0) {\n      if (parsedJsonTree.type === \"array\") {\n        addNodeToGraph({ graph: states.graph, text: \"[]\" });\n      } else {\n        addNodeToGraph({ graph: states.graph, text: \"{}\" });\n      }\n    }\n\n    states.graph.nodes = states.graph.nodes.map(node => ({\n      ...node,\n      path: getNodePath(states.graph.nodes, states.graph.edges, node.id),\n    }));\n\n    return states.graph;\n  } catch (error) {\n    console.error(error);\n    return { nodes: [], edges: [] };\n  }\n}\n","import { ViewPort } from \"react-zoomable-ui/dist/ViewPort\";\nimport { CanvasDirection } from \"reaflow/dist/layout/elkLayout\";\nimport { create } from \"zustand\";\nimport { getChildrenEdges } from \"src/lib/utils/graph/getChildrenEdges\";\nimport { getOutgoers } from \"src/lib/utils/graph/getOutgoers\";\nimport { parser } from \"src/lib/utils/json/jsonParser\";\nimport { NodeData, EdgeData } from \"src/types/models\";\nimport useJson from \"./useJson\";\n\nexport interface Graph {\n  viewPort: ViewPort | null;\n  direction: CanvasDirection;\n  loading: boolean;\n  graphCollapsed: boolean;\n  foldNodes: boolean;\n  fullscreen: boolean;\n  nodes: NodeData[];\n  edges: EdgeData[];\n  collapsedNodes: string[];\n  collapsedEdges: string[];\n  collapsedParents: string[];\n  selectedNode: NodeData | null;\n  path: string;\n}\n\nconst initialStates: Graph = {\n  viewPort: null,\n  direction: \"RIGHT\",\n  loading: true,\n  graphCollapsed: false,\n  foldNodes: false,\n  fullscreen: false,\n  nodes: [],\n  edges: [],\n  collapsedNodes: [],\n  collapsedEdges: [],\n  collapsedParents: [],\n  selectedNode: null,\n  path: \"\",\n};\n\ninterface GraphActions {\n  setGraph: (json?: string, options?: Partial<Graph>[]) => void;\n  setLoading: (loading: boolean) => void;\n  setDirection: (direction: CanvasDirection) => void;\n  setViewPort: (ref: ViewPort) => void;\n  setSelectedNode: (nodeData: NodeData) => void;\n  focusFirstNode: () => void;\n  expandNodes: (nodeId: string) => void;\n  expandGraph: () => void;\n  collapseNodes: (nodeId: string) => void;\n  collapseGraph: () => void;\n  getCollapsedNodeIds: () => string[];\n  getCollapsedEdgeIds: () => string[];\n  toggleFold: (value: boolean) => void;\n  toggleFullscreen: (value: boolean) => void;\n  zoomIn: () => void;\n  zoomOut: () => void;\n  centerView: () => void;\n  clearGraph: () => void;\n}\n\nconst useGraph = create<Graph & GraphActions>((set, get) => ({\n  ...initialStates,\n  clearGraph: () => set({ nodes: [], edges: [], loading: false }),\n  getCollapsedNodeIds: () => get().collapsedNodes,\n  getCollapsedEdgeIds: () => get().collapsedEdges,\n  setSelectedNode: nodeData => set({ selectedNode: nodeData }),\n  setGraph: (data, options) => {\n    const { nodes, edges } = parser(data ?? useJson.getState().json);\n\n    set({\n      nodes,\n      edges,\n      collapsedParents: [],\n      collapsedNodes: [],\n      collapsedEdges: [],\n      graphCollapsed: false,\n      loading: true,\n      ...options,\n    });\n  },\n  setDirection: (direction = \"RIGHT\") => {\n    set({ direction });\n    setTimeout(() => get().centerView(), 200);\n  },\n  setLoading: loading => set({ loading }),\n  expandNodes: nodeId => {\n    const [childrenNodes, matchingNodes] = getOutgoers(\n      nodeId,\n      get().nodes,\n      get().edges,\n      get().collapsedParents\n    );\n    const childrenEdges = getChildrenEdges(childrenNodes, get().edges);\n\n    const nodesConnectedToParent = childrenEdges.reduce((nodes: string[], edge) => {\n      edge.from && !nodes.includes(edge.from) && nodes.push(edge.from);\n      edge.to && !nodes.includes(edge.to) && nodes.push(edge.to);\n      return nodes;\n    }, []);\n    const matchingNodesConnectedToParent = matchingNodes.filter(node =>\n      nodesConnectedToParent.includes(node)\n    );\n    const nodeIds = childrenNodes.map(node => node.id).concat(matchingNodesConnectedToParent);\n    const edgeIds = childrenEdges.map(edge => edge.id);\n\n    const collapsedParents = get().collapsedParents.filter(cp => cp !== nodeId);\n    const collapsedNodes = get().collapsedNodes.filter(nodeId => !nodeIds.includes(nodeId));\n    const collapsedEdges = get().collapsedEdges.filter(edgeId => !edgeIds.includes(edgeId));\n\n    set({\n      collapsedParents,\n      collapsedNodes,\n      collapsedEdges,\n      graphCollapsed: !!collapsedNodes.length,\n    });\n  },\n  collapseNodes: nodeId => {\n    const [childrenNodes] = getOutgoers(nodeId, get().nodes, get().edges);\n    const childrenEdges = getChildrenEdges(childrenNodes, get().edges);\n\n    const nodeIds = childrenNodes.map(node => node.id);\n    const edgeIds = childrenEdges.map(edge => edge.id);\n\n    set({\n      collapsedParents: get().collapsedParents.concat(nodeId),\n      collapsedNodes: get().collapsedNodes.concat(nodeIds),\n      collapsedEdges: get().collapsedEdges.concat(edgeIds),\n      graphCollapsed: !!get().collapsedNodes.concat(nodeIds).length,\n    });\n  },\n  collapseGraph: () => {\n    const edges = get().edges;\n    const tos = edges.map(edge => edge.to);\n    const froms = edges.map(edge => edge.from);\n    const parentNodesIds = froms.filter(id => !tos.includes(id));\n    const secondDegreeNodesIds = edges\n      .filter(edge => parentNodesIds.includes(edge.from))\n      .map(edge => edge.to);\n\n    const collapsedParents = get()\n      .nodes.filter(node => !parentNodesIds.includes(node.id) && node.data?.isParent)\n      .map(node => node.id);\n\n    const collapsedNodes = get()\n      .nodes.filter(\n        node => !parentNodesIds.includes(node.id) && !secondDegreeNodesIds.includes(node.id)\n      )\n      .map(node => node.id);\n\n    const closestParentToRoot = Math.min(...collapsedParents.map(n => +n));\n    const focusNodeId = `g[id*='node-${closestParentToRoot}']`;\n    const rootNode = document.querySelector(focusNodeId);\n\n    set({\n      collapsedParents,\n      collapsedNodes,\n      collapsedEdges: get()\n        .edges.filter(edge => !parentNodesIds.includes(edge.from))\n        .map(edge => edge.id),\n      graphCollapsed: true,\n    });\n\n    if (rootNode) {\n      get().viewPort?.camera?.centerFitElementIntoView(rootNode as HTMLElement, {\n        elementExtraMarginForZoom: 300,\n      });\n    }\n  },\n  expandGraph: () => {\n    set({\n      collapsedNodes: [],\n      collapsedEdges: [],\n      collapsedParents: [],\n      graphCollapsed: false,\n    });\n  },\n  focusFirstNode: () => {\n    const rootNode = document.querySelector(\"g[id*='node-1']\");\n    get().viewPort?.camera?.centerFitElementIntoView(rootNode as HTMLElement, {\n      elementExtraMarginForZoom: 100,\n    });\n  },\n  zoomIn: () => {\n    const viewPort = get().viewPort;\n    viewPort?.camera.recenter(viewPort.centerX, viewPort.centerY, viewPort.zoomFactor + 0.1);\n  },\n  zoomOut: () => {\n    const viewPort = get().viewPort;\n    viewPort?.camera.recenter(viewPort.centerX, viewPort.centerY, viewPort.zoomFactor - 0.1);\n  },\n  centerView: () => {\n    const viewPort = get().viewPort;\n    const canvas = document.querySelector(\".jsoncrack-canvas\") as HTMLElement;\n    viewPort?.camera.centerFitElementIntoView(canvas);\n  },\n  toggleFold: foldNodes => {\n    set({ foldNodes });\n    get().setGraph();\n  },\n  toggleFullscreen: fullscreen => set({ fullscreen }),\n  setViewPort: viewPort => set({ viewPort }),\n}));\n\nexport default useGraph;\n","import { create } from \"zustand\";\nimport useGraph from \"src/store/useGraph\";\n\ninterface JsonActions {\n  setJson: (json: string) => void;\n  getJson: () => string;\n  clear: () => void;\n}\n\nconst initialStates = {\n  json: \"\",\n  loading: true,\n};\n\nexport type JsonStates = typeof initialStates;\n\nconst useJson = create<JsonStates & JsonActions>()((set, get) => ({\n  ...initialStates,\n  getJson: () => get().json,\n  setJson: json => {\n    set({ json, loading: false });\n    useGraph.getState().setGraph(json);\n  },\n  clear: () => {\n    set({ json: \"\", loading: false });\n    useGraph.getState().clearGraph();\n  },\n}));\n\nexport default useJson;\n","import ReactGA from \"react-ga4\";\nimport { create } from \"zustand\";\nimport { Modal } from \"src/containers/Modals\";\nimport useUser from \"./useUser\";\n\ntype ModalState = {\n  [key in Modal]: boolean;\n};\n\ninterface ModalActions {\n  setVisible: (modal: Modal) => (visible: boolean) => void;\n}\n\nconst initialStates: ModalState = {\n  clear: false,\n  cloud: false,\n  download: false,\n  import: false,\n  account: false,\n  node: false,\n  settings: false,\n  share: false,\n  login: false,\n  premium: false,\n  jwt: false,\n  schema: false,\n  cancelPremium: false,\n};\n\nconst authModals: Modal[] = [\"cloud\", \"account\", \"schema\"];\nconst premiumModals: Modal[] = [\"schema\"];\n\nconst useModal = create<ModalState & ModalActions>()(set => ({\n  ...initialStates,\n  setVisible: modal => visible => {\n    const user = useUser.getState();\n\n    if (authModals.includes(modal) && !user.isAuthenticated) {\n      return set({ login: true });\n    } else if (premiumModals.includes(modal) && !user.premium) {\n      return set({ premium: true });\n    }\n\n    if (visible) ReactGA.event({ category: \"Modal View\", action: `modal_view_${modal}` });\n    set({ [modal]: visible });\n  },\n}));\n\nexport default useModal;\n","import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport useGraph from \"./useGraph\";\n\nconst initialStates = {\n  lightmode: false,\n  hideCollapse: true,\n  childrenCount: true,\n  imagePreview: true,\n  liveTransform: true,\n};\n\nexport interface ConfigActions {\n  setLightTheme: (theme: boolean) => void;\n  toggleHideCollapse: (value: boolean) => void;\n  toggleChildrenCount: (value: boolean) => void;\n  toggleImagePreview: (value: boolean) => void;\n  toggleLiveTransform: (value: boolean) => void;\n}\n\nconst useStored = create(\n  persist<typeof initialStates & ConfigActions>(\n    set => ({\n      ...initialStates,\n      toggleLiveTransform: liveTransform => set({ liveTransform }),\n      setLightTheme: (value: boolean) =>\n        set({\n          lightmode: value,\n        }),\n      toggleHideCollapse: (value: boolean) => set({ hideCollapse: value }),\n      toggleChildrenCount: (value: boolean) => set({ childrenCount: value }),\n      toggleImagePreview: (value: boolean) => {\n        set({ imagePreview: value });\n        useGraph.getState().setGraph();\n      },\n    }),\n    {\n      name: \"config\",\n    }\n  )\n);\n\nexport default useStored;\n","/* eslint unused-imports/no-unused-imports: 0 */\nimport { NodeType } from \"jsonc-parser\";\n\nexport interface NodeData {\n  id: string;\n  text: string | [string, string][];\n  width: number;\n  height: number;\n  path?: string;\n  data: {\n    type: NodeType;\n    isParent: boolean;\n    isEmpty: boolean;\n    childrenCount: number;\n  };\n}\n\nexport interface EdgeData {\n  id: string;\n  from: string;\n  to: string;\n}\n\nexport enum FileFormat {\n  \"JSON\" = \"json\",\n  \"YAML\" = \"yaml\",\n  \"XML\" = \"xml\",\n  \"TOML\" = \"toml\",\n  \"CSV\" = \"csv\",\n}\n"],"names":["paymentURL","useUser","email","getState","user","url","process","concat","sampleJson","Object","freeze","squadName","homeTown","formed","secretBase","active","members","name","age","secretIdentity","powers","defaultJson","JSON","stringify","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retry","mantineTheme","fontFamily","monaSans","headings","components","Divider","styles","root","borderTopColor","Modal","theme","title","fontWeight","header","backgroundColor","colorScheme","body","Button","inner","EditorWrapper","children","param","lightmode","useStored","state","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","ThemeProvider","lightTheme","darkTheme","MantineProvider","withCSSVariables","withGlobalStyles","withNormalizeCSS","QueryClientProvider","client","isContentImage","value","isImageURL","test","isBase64","startsWith","includes","calculateLines","text","map","k","v","slice","join","calculateWidthAndHeight","str","single","width","height","dummyElement","document","createElement","style","whiteSpace","innerHTML","fontSize","padding","overflowWrap","firaMono","appendChild","clientRect","getBoundingClientRect","removeChild","sizeCache","Map","setInterval","clear","calculateNodeSize","isParent","foldNodes","useGraph","imagePreview","isImage","cacheKey","toString","has","size","get","lines","sizes","set","isIframe","window","self","top","e","saveToCloud","id","p_id","contents","p_content","format","p_format","FileFormat","supabase","rpc","getFromCloud","doc_id","getAllJson","userEmail","data","error","from","select","eq","order","ascending","toast","message","updateJson","update","deleteJson","delete","keyExists","obj","key","Array","isArray","hasOwnProperty","i","length","result","contentToJson","json","parse","YAML","load","XML","jxon","TOML","toml","CSV","csv2json","Error","Promise","resolve","jsonToContent","dump","json2csv","initialStates","fileData","hasChanges","jsonSchema","isURL","debouncedUpdateJson","debounce","useJson","setJson","filterArrayAndObjectFields","useFile","create","setJsonSchema","premium","setFile","setContents","content","getContents","getFormat","getHasChanges","setFormat","prevFormat","contentJson","jsonContent","ReactGA","event","action","category","console","warn","skipUpdate","isFetchURL","location","href","liveTransform","sessionStorage","setItem","mark","snippet","setState","loading","setError","setHasChanges","fetchUrl","res","fetch","jsonStr","checkEditorSession","widget","fetchFile","sessionContent","getItem","editContents","path","callback","tempValue","pathJson","_get","replace","changedValue","replaceAll","newJson","_set","store_useFile","getChildrenEdges","nodes","edges","nodeIds","node","filter","edge","to","getOutgoers","nodeId","parent","outgoerNodes","matchingNodes","initialParentNode","find","n","push","findOutgoers","outgoerIds","currentNodeId","nodeList","forEach","addEdgeToGraph","graph","newEdge","addNodeToGraph","type","isEmpty","String","childrenCount","isPrimitiveOrNullType","alignChildren","nodeA","nodeB","aChildType","bChildType","traverse","objectToTraverse","states","myParentId","nextType","parentType","handleHasChildren","parentId","parentName","brothersNode","findBrothersNode","brothersNodeProps","brothersParentId","objectsFromArrayId","objectsFromArray","findNodeIndex","findIndex","modifyNodes","foundNode","brothersNodeId","notHaveParent","bracketOpen","brothersProps","traverseObject","sort","index","array","pop","myChildren","parentIndex","handleNoChildren","undefined","brotherKey","nodeFromArrayId","viewPort","direction","graphCollapsed","fullscreen","collapsedNodes","collapsedEdges","collapsedParents","selectedNode","clearGraph","getCollapsedNodeIds","getCollapsedEdgeIds","setSelectedNode","nodeData","setGraph","options","parser","parsedJsonTree","parseTree","emptyId","childId","getNodePath","getParentsForNodeId","require","resolvedPath","parentIds","reverse","rootArrayElementIds","edgesMap","curNodeId","curNode","curId","toNodeId","idx","indexOf","setDirection","setTimeout","centerView","setLoading","expandNodes","childrenNodes","childrenEdges","nodesConnectedToParent","reduce","matchingNodesConnectedToParent","edgeIds","cp","edgeId","collapseNodes","collapseGraph","tos","froms","parentNodesIds","secondDegreeNodesIds","closestParentToRoot","Math","min","rootNode","querySelector","camera","centerFitElementIntoView","elementExtraMarginForZoom","expandGraph","focusFirstNode","zoomIn","recenter","centerX","centerY","zoomFactor","zoomOut","canvas","toggleFold","toggleFullscreen","setViewPort","store_useGraph","getJson","__webpack_exports__","Z","cloud","download","import","account","settings","share","login","jwt","schema","cancelPremium","authModals","premiumModals","useModal","setVisible","modal","visible","isAuthenticated","hideCollapse","persist","toggleLiveTransform","setLightTheme","toggleHideCollapse","toggleChildrenCount","toggleImagePreview"],"sourceRoot":""}