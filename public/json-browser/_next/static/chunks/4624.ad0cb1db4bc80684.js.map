{"version":3,"file":"static/chunks/4624.ad0cb1db4bc80684.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mantine/core/esm/ColorSwatch/ColorSwatch.styles.js","webpack://_N_E/./node_modules/@mantine/core/esm/ColorSwatch/ColorSwatch.js","webpack://_N_E/./node_modules/@mantine/core/esm/Title/Title.styles.js","webpack://_N_E/./node_modules/@mantine/core/esm/Title/Title.js","webpack://_N_E/./node_modules/hammerjs/hammer.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/ElementSizeChangePoller.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/Interactable.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/NoPanArea.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/PressInterpreter.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/Pressable.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/Space.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/SpaceContext.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/ViewPort.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/ViewPortCamera.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/ViewPortMath.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/index.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/suppressBrowserZooming.js","webpack://_N_E/./node_modules/react-zoomable-ui/dist/utils.js","webpack://_N_E/./node_modules/react-linkify-it/dist/react-linkify-it.esm.js","webpack://_N_E/./node_modules/ts-invariant/lib/invariant.js","webpack://_N_E/./node_modules/use-long-press/index.mjs","webpack://_N_E/<anon>"],"sourcesContent":["import { createStyles, rem } from '@mantine/styles';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar useStyles = createStyles((theme, { radius }, { size }) => {\n  const overlayColor = theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[3];\n  return {\n    root: __spreadProps(__spreadValues({}, theme.fn.focusStyles()), {\n      width: rem(size),\n      height: rem(size),\n      WebkitTapHighlightColor: \"transparent\",\n      border: 0,\n      borderRadius: theme.fn.radius(radius),\n      appearance: \"none\",\n      WebkitAppearance: \"none\",\n      padding: 0,\n      position: \"relative\",\n      overflow: \"hidden\"\n    }),\n    overlay: __spreadProps(__spreadValues({}, theme.fn.cover()), {\n      position: \"absolute\",\n      borderRadius: theme.fn.radius(radius)\n    }),\n    children: {\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    shadowOverlay: {\n      boxShadow: `rgba(0, 0, 0, .1) 0 0 0 ${rem(1)} inset, rgb(0, 0, 0, .15) 0 0 ${rem(4)} inset`,\n      zIndex: 1\n    },\n    alphaOverlay: {\n      backgroundImage: `linear-gradient(45deg, ${overlayColor} 25%, transparent 25%), linear-gradient(-45deg, ${overlayColor} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${overlayColor} 75%), linear-gradient(-45deg, ${theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white} 75%, ${overlayColor} 75%)`,\n      backgroundSize: `${rem(8)} ${rem(8)}`,\n      backgroundPosition: `0 0, 0 ${rem(4)}, ${rem(4)} -${rem(4)}, -${rem(4)} 0`\n    }\n  };\n});\n\nexport default useStyles;\n//# sourceMappingURL=ColorSwatch.styles.js.map\n","import React, { forwardRef } from 'react';\nimport { rem, useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport useStyles from './ColorSwatch.styles.js';\nimport { Box } from '../Box/Box.js';\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nconst defaultProps = {\n  size: rem(25),\n  radius: rem(25),\n  withShadow: true\n};\nconst _ColorSwatch = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"ColorSwatch\", defaultProps, props), {\n    color,\n    size,\n    radius,\n    className,\n    children,\n    classNames,\n    styles,\n    unstyled,\n    withShadow,\n    variant\n  } = _a, others = __objRest(_a, [\n    \"color\",\n    \"size\",\n    \"radius\",\n    \"className\",\n    \"children\",\n    \"classNames\",\n    \"styles\",\n    \"unstyled\",\n    \"withShadow\",\n    \"variant\"\n  ]);\n  const { classes, cx } = useStyles({ radius }, { classNames, styles, unstyled, name: \"ColorSwatch\", size, variant });\n  return /* @__PURE__ */ React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref\n  }, others), /* @__PURE__ */ React.createElement(\"div\", {\n    className: cx(classes.alphaOverlay, classes.overlay)\n  }), withShadow && /* @__PURE__ */ React.createElement(\"div\", {\n    className: cx(classes.shadowOverlay, classes.overlay)\n  }), /* @__PURE__ */ React.createElement(\"div\", {\n    className: classes.overlay,\n    style: { backgroundColor: color }\n  }), /* @__PURE__ */ React.createElement(\"div\", {\n    className: cx(classes.children, classes.overlay)\n  }, children));\n});\n_ColorSwatch.displayName = \"@mantine/core/ColorSwatch\";\nconst ColorSwatch = createPolymorphicComponent(_ColorSwatch);\n\nexport { ColorSwatch, _ColorSwatch };\n//# sourceMappingURL=ColorSwatch.js.map\n","import { createStyles, rem } from '@mantine/styles';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction getFontSize(size, element, theme) {\n  if (typeof size !== \"undefined\") {\n    return size in theme.headings.sizes ? theme.headings.sizes[size].fontSize : rem(size);\n  }\n  return theme.headings.sizes[element].fontSize;\n}\nfunction getLineHeight(size, element, theme) {\n  if (typeof size !== \"undefined\" && size in theme.headings.sizes) {\n    return theme.headings.sizes[size].lineHeight;\n  }\n  return theme.headings.sizes[element].lineHeight;\n}\nvar useStyles = createStyles((theme, { element, weight, inline }, { size }) => ({\n  root: __spreadProps(__spreadValues({}, theme.fn.fontStyles()), {\n    fontFamily: theme.headings.fontFamily,\n    fontWeight: weight || theme.headings.sizes[element].fontWeight || theme.headings.fontWeight,\n    fontSize: getFontSize(size, element, theme),\n    lineHeight: inline ? 1 : getLineHeight(size, element, theme),\n    margin: 0\n  })\n}));\n\nexport default useStyles;\n//# sourceMappingURL=Title.styles.js.map\n","import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Title.styles.js';\nimport { Text } from '../Text/Text.js';\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nconst defaultProps = {\n  order: 1\n};\nconst Title = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Title\", defaultProps, props), { className, order, children, unstyled, size, weight, inline, variant } = _a, others = __objRest(_a, [\"className\", \"order\", \"children\", \"unstyled\", \"size\", \"weight\", \"inline\", \"variant\"]);\n  const { classes, cx } = useStyles({ element: `h${order}`, weight, inline }, { name: \"Title\", unstyled, variant, size });\n  if (![1, 2, 3, 4, 5, 6].includes(order)) {\n    return null;\n  }\n  return /* @__PURE__ */ React.createElement(Text, __spreadValues({\n    variant,\n    component: `h${order}`,\n    ref,\n    className: cx(classes.root, className)\n  }, others), children);\n});\nTitle.displayName = \"@mantine/core/Title\";\n\nexport { Title };\n//# sourceMappingURL=Title.js.map\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementSizeChangePoller = void 0;\n/**\n * This class simply takes an element, records its size, and then polls it for\n * size changes every 500 ms. If a size change is detected the onSizeChanged\n * callback is called.\n */\nclass ElementSizeChangePoller {\n    /**\n     * Constructs a new instance, but initially it won't know which element to\n     * watch. You have to call `update` to pass it the element.\n     *\n     * @param onSizeChanged Callback to call when a watched element's size changes.\n     */\n    constructor(onSizeChanged) {\n        this.onSizeChanged = onSizeChanged;\n        this.start = () => {\n            var _a;\n            // Just in case...\n            if (this.timerId) {\n                this.stop();\n            }\n            this.oldSize = (_a = this.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n            this.timerId = setInterval(() => {\n                if (!this.element || !this.oldSize) {\n                    return;\n                }\n                const { width, height } = this.element.getBoundingClientRect();\n                if (width !== this.oldSize.width || height !== this.oldSize.height) {\n                    this.onSizeChanged();\n                }\n            }, 500);\n        };\n        this.stop = () => {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n            }\n            this.timerId = undefined;\n        };\n        this.polling = false;\n    }\n    /**\n     * Stops polling and clears the element that was being watched.\n     */\n    reset() {\n        this.update(undefined, false);\n    }\n    /**\n     * Changes the element being watched and starts or stops polling for size\n     * changes.\n     */\n    update(element, polling) {\n        this.element = element;\n        this.polling = polling;\n        this.stop();\n        if (this.element && this.polling) {\n            this.start();\n        }\n    }\n}\nexports.ElementSizeChangePoller = ElementSizeChangePoller;\n//# sourceMappingURL=ElementSizeChangePoller.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInteractableIdMostApplicableToElement = exports.InteractableIdAttributeName = void 0;\nconst utils_1 = require(\"./utils\");\nexports.InteractableIdAttributeName = 'x-react-zoomable-ui-interactable-id';\n/**\n * Helper function that returns the nearest ancestor element to the passed\n * element that is an interactable (either `Pressable` or `NoPanArea`), or\n * the element itself if it is interactable.\n */\nfunction getInteractableIdMostApplicableToElement(element, outerContainerClassName) {\n    for (const e of (0, utils_1.walkElementHierarchyUp)(element)) {\n        if (outerContainerClassName && e.classList.contains(outerContainerClassName)) {\n            return undefined;\n        }\n        const a = e.getAttribute(exports.InteractableIdAttributeName);\n        if (a) {\n            return a;\n        }\n    }\n    return undefined;\n}\nexports.getInteractableIdMostApplicableToElement = getInteractableIdMostApplicableToElement;\n//# sourceMappingURL=Interactable.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoPanArea = void 0;\nconst React = __importStar(require(\"react\"));\nconst Interactable_1 = require(\"./Interactable\");\nconst SpaceContext_1 = require(\"./SpaceContext\");\nconst utils_1 = require(\"./utils\");\n/**\n * If you have a part of your `Space` that you do not want to be pan-able for\n * some reason you can wrap it with `NoPanArea`. This has limited utility, but\n * might be useful in some cases.\n *\n * This doesn't affect zooming though.\n *\n * Must only be used inside a `Space`.\n *\n * ## Props\n *\n * See `NoPanAreaProps`.\n */\nclass NoPanArea extends React.PureComponent {\n    constructor(props, context) {\n        super(props);\n        this.id = (0, utils_1.generateRandomId)();\n        this.divRef = React.createRef();\n        this.uniqueClassName = `react-zoomable-ui-no-pan-area-${this.id}`;\n        this.determineClassName = () => {\n            const { className } = this.props;\n            if (className) {\n                return `${className} ${this.uniqueClassName}`;\n            }\n            else {\n                return this.uniqueClassName;\n            }\n        };\n        this.constantStyles = `\ndiv.${context.rootDivUniqueClassName} div.${this.uniqueClassName} {\n  -ms-touch-action: default;\n  -webkit-user-select: text;\n  -webkit-touch-callout: default;\n  user-select: text;\n  cursor: auto;\n} \n`;\n    }\n    componentDidMount() {\n        this.context.registerInteractable(this);\n    }\n    componentWillUnmount() {\n        this.context.unregisterInteractable(this);\n    }\n    render() {\n        const { style } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"style\", null, this.constantStyles),\n            React.createElement(\"div\", Object.assign({ id: this.props.id }, { [Interactable_1.InteractableIdAttributeName]: this.id }, { className: this.determineClassName(), style: style, ref: this.divRef }), this.props.children)));\n    }\n}\nexports.NoPanArea = NoPanArea;\nNoPanArea.contextType = SpaceContext_1.SpaceContext;\n//# sourceMappingURL=NoPanArea.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PressInterpreter = void 0;\nconst ts_invariant_1 = __importDefault(require(\"ts-invariant\"));\n/**\n * This is the number of client (screen) pixels that a press can move before it\n * is not considered a tap.\n */\nconst POTENTIAL_TAP_BOUNDS_DEFAULT = 8;\n/**\n * If you are using `Space` then you don't need to use or interact directly with this class.  It is used\n * internally by `Space` along with `Pressable` to interpret and respond to presses.\n *\n * On the other hand if you are using `ViewPort` without `Space` you may want to use this to\n * make handling interactions easier.\n *\n * It works by calling a `DecidePressHandlingCallback` callback whenever a\n * press starts, and the callback decides how the press should be handled.\n *\n * After you construct the `PressInterpreter` pass the `pressHandlers` to\n * the `ViewPort`'s constructors (as part of the `options` parameter).\n */\nclass PressInterpreter {\n    /**\n     * If you are using a `Space` you do not need to create one of these, but\n     * if you aren't using a `Space` this should be done before the\n     * `ViewPort` is created, and then the `pressHandlers` should be passed\n     * to the `ViewPort`'s `ViewPortOptions`.\n     *\n     * @param onDecideHowToHandlePress This callback decides how to handle presses.  See `DecidePressHandlingCallback` for more info.\n     */\n    constructor(onDecideHowToHandlePress) {\n        this.onDecideHowToHandlePress = onDecideHowToHandlePress;\n        this.handleCapturePressThresholdMet = () => {\n            var _a, _b;\n            this.capturePressTimerId = undefined;\n            this.currentPressCapturedForHandler = true;\n            (0, ts_invariant_1.default)(this.currentPressLastCoordinates !== undefined, `When the timer fires we should have press coordinates.`);\n            (_b = (_a = this.currentConfig) === null || _a === void 0 ? void 0 : _a.onCapturePressStart) === null || _b === void 0 ? void 0 : _b.call(_a, this.currentPressLastCoordinates);\n            // Cancel long press\n            this.currentPressLongPressThresholdMet = false;\n            if (this.longPressTimerId) {\n                clearTimeout(this.longPressTimerId);\n                this.longPressTimerId = undefined;\n            }\n        };\n        this.handleLongPressThresholdMet = () => {\n            var _a, _b;\n            this.longPressTimerId = undefined;\n            this.currentPressLongPressThresholdMet = true;\n            (0, ts_invariant_1.default)(this.currentPressLastCoordinates !== undefined, `When the timer fires we should have press coordinates.`);\n            (_b = (_a = this.currentConfig) === null || _a === void 0 ? void 0 : _a.onPotentialLongTap) === null || _b === void 0 ? void 0 : _b.call(_a, this.currentPressLastCoordinates);\n        };\n        this.handlePressStart = (e, coordinates) => {\n            var _a, _b;\n            if (this.currentConfig) {\n                this.reset();\n            }\n            this.currentConfig = this.onDecideHowToHandlePress(e, coordinates);\n            if (this.currentConfig) {\n                this.currentPressStartingCoordinates = coordinates;\n                this.currentPressLastCoordinates = coordinates;\n                this.currentPressLongPressThresholdMet = false;\n                if (this.currentConfig.ignorePressEntirely) {\n                    return 'ignore';\n                }\n                if (this.currentConfig.capturePressThresholdMs === 0) {\n                    (_b = (_a = this.currentConfig).onCapturePressStart) === null || _b === void 0 ? void 0 : _b.call(_a, coordinates);\n                    this.currentPressCapturedForHandler = true;\n                }\n                else {\n                    if (this.currentConfig.onTap && this.currentConfig.onPotentialTap) {\n                        this.currentConfig.onPotentialTap(coordinates);\n                    }\n                    if (this.currentConfig.capturePressThresholdMs !== undefined) {\n                        this.capturePressTimerId = setTimeout(this.handleCapturePressThresholdMet, this.currentConfig.capturePressThresholdMs);\n                    }\n                    if (this.currentConfig.longTapThresholdMs !== undefined) {\n                        this.longPressTimerId = setTimeout(this.handleLongPressThresholdMet, this.currentConfig.longTapThresholdMs);\n                    }\n                }\n                return 'capture';\n            }\n            return undefined;\n        };\n        this.handlePressMove = (e, coordinates) => {\n            var _a, _b, _c, _d, _e;\n            if (!this.currentConfig ||\n                this.currentConfig.ignorePressEntirely ||\n                !this.currentPressStartingCoordinates ||\n                !this.currentPressLastCoordinates) {\n                return undefined;\n            }\n            const oldCoordinates = this.currentPressLastCoordinates;\n            this.currentPressLastCoordinates = coordinates;\n            if (this.currentPressCapturedForHandler) {\n                (_b = (_a = this.currentConfig).onCapturePressMove) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, coordinates), { clientXDelta: coordinates.clientX - oldCoordinates.clientX, clientYDelta: coordinates.clientY - oldCoordinates.clientY, containerXDelta: coordinates.containerX - oldCoordinates.containerX, containerYDelta: coordinates.containerY - oldCoordinates.containerY, xDelta: coordinates.x - oldCoordinates.x, yDelta: coordinates.y - oldCoordinates.y }));\n                return;\n            }\n            const xDelta = Math.abs(coordinates.containerX - this.currentPressStartingCoordinates.containerX);\n            const yDelta = Math.abs(coordinates.containerY - this.currentPressStartingCoordinates.containerY);\n            const maxDeltaAllowed = (_c = this.currentConfig.potentialTapBounds) !== null && _c !== void 0 ? _c : POTENTIAL_TAP_BOUNDS_DEFAULT;\n            if (xDelta > maxDeltaAllowed || yDelta > maxDeltaAllowed) {\n                (_e = (_d = this.currentConfig).onTapAbandoned) === null || _e === void 0 ? void 0 : _e.call(_d);\n                this.reset();\n                return 'release';\n            }\n            return undefined;\n        };\n        this.handlePressEnd = (e, coordinates) => {\n            var _a, _b, _c, _d, _e, _f;\n            if (!this.currentConfig || this.currentConfig.ignorePressEntirely) {\n                this.reset();\n                return;\n            }\n            if (this.currentPressCapturedForHandler) {\n                // It should be impossible for this event to fire without another event\n                // which sets this\n                const oldCoordinates = this.currentPressLastCoordinates;\n                (_b = (_a = this.currentConfig).onCapturePressEnd) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, coordinates), { clientXDelta: coordinates.clientX - oldCoordinates.clientX, clientYDelta: coordinates.clientY - oldCoordinates.clientY, containerXDelta: coordinates.containerX - oldCoordinates.containerX, containerYDelta: coordinates.containerY - oldCoordinates.containerY, xDelta: coordinates.x - oldCoordinates.x, yDelta: coordinates.y - oldCoordinates.y }));\n            }\n            else if (this.currentPressLongPressThresholdMet) {\n                (_d = (_c = this.currentConfig).onLongTap) === null || _d === void 0 ? void 0 : _d.call(_c, coordinates);\n            }\n            else {\n                (_f = (_e = this.currentConfig).onTap) === null || _f === void 0 ? void 0 : _f.call(_e, coordinates);\n            }\n            this.reset();\n        };\n        this.handlePressCancel = (e) => {\n            var _a, _b, _c, _d;\n            if (this.currentPressCapturedForHandler) {\n                (_b = (_a = this.currentConfig) === null || _a === void 0 ? void 0 : _a.onCapturePressCancelled) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n            else {\n                (_d = (_c = this.currentConfig) === null || _c === void 0 ? void 0 : _c.onTapAbandoned) === null || _d === void 0 ? void 0 : _d.call(_c);\n            }\n            this.reset();\n        };\n        this.reset = () => {\n            this.currentConfig = undefined;\n            this.currentPressStartingCoordinates = undefined;\n            this.currentPressLastCoordinates = undefined;\n            this.currentPressLongPressThresholdMet = undefined;\n            this.currentPressCapturedForHandler = undefined;\n            if (this.capturePressTimerId) {\n                clearTimeout(this.capturePressTimerId);\n                this.capturePressTimerId = undefined;\n            }\n            if (this.longPressTimerId) {\n                clearTimeout(this.longPressTimerId);\n                this.longPressTimerId = undefined;\n            }\n        };\n        this.pressHandlers = {\n            onPressStart: this.handlePressStart,\n            onPressMove: this.handlePressMove,\n            onPressEnd: this.handlePressEnd,\n            onPressCancel: this.handlePressCancel,\n        };\n    }\n}\nexports.PressInterpreter = PressInterpreter;\n//# sourceMappingURL=PressInterpreter.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pressable = void 0;\nconst React = __importStar(require(\"react\"));\nconst Interactable_1 = require(\"./Interactable\");\nconst SpaceContext_1 = require(\"./SpaceContext\");\nconst utils_1 = require(\"./utils\");\nconst DEFAULT_LONG_TAP_THRESHOLD_MS = 500;\n/**\n * Works like a button element except tapping does not prevent or conflict with\n * panning. It can also recognize long taps, and can even capture the press\n * entirely if you want to implementing something like dragging.\n *\n * It does not provide any UI.\n *\n * Must only be used inside a `Space`.\n *\n * ## Props\n *\n * See `PressableProps`.\n */\nclass Pressable extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.divRef = React.createRef();\n        this.id = (0, utils_1.generateRandomId)();\n        this.state = { interaction: undefined, hovered: false };\n        this.determineClassName = () => {\n            const { className } = this.props;\n            let result = 'react-zoomable-ui-pressable';\n            if (className) {\n                result += ' ';\n                result += className;\n            }\n            if (this.props.disabled) {\n                if (this.props.disabledClassName) {\n                    result += ' ';\n                    result += this.props.disabledClassName;\n                }\n            }\n            else if (this.state.interaction === 'potential-tap') {\n                if (this.props.potentialTapClassName) {\n                    result += ' ';\n                    result += this.props.potentialTapClassName;\n                }\n            }\n            else if (this.state.interaction === 'potential-long-tap') {\n                if (this.props.potentialLongTapClassName) {\n                    result += ' ';\n                    result += this.props.potentialLongTapClassName;\n                }\n            }\n            else if (this.state.interaction === 'press-captured') {\n                if (this.props.capturePressClassName) {\n                    result += ' ';\n                    result += this.props.capturePressClassName;\n                }\n            }\n            else if (this.state.hovered) {\n                if (this.props.hoverClassName) {\n                    result += ' ';\n                    result += this.props.hoverClassName;\n                }\n            }\n            return result;\n        };\n        this.determineStyle = () => {\n            const { style } = this.props;\n            if (this.props.disabled) {\n                if (this.props.disabledStyle) {\n                    return Object.assign(Object.assign({}, (style || {})), this.props.disabledStyle);\n                }\n            }\n            else if (this.state.interaction === 'potential-tap') {\n                if (this.props.potentialTapStyle) {\n                    return Object.assign(Object.assign({}, (style || {})), this.props.potentialTapStyle);\n                }\n            }\n            else if (this.state.interaction === 'potential-long-tap') {\n                if (this.props.potentialLongTapStyle) {\n                    return Object.assign(Object.assign({}, (style || {})), this.props.potentialLongTapStyle);\n                }\n            }\n            else if (this.state.interaction === 'press-captured') {\n                if (this.props.capturePressStyle) {\n                    return Object.assign(Object.assign({}, (style || {})), this.props.capturePressStyle);\n                }\n            }\n            else if (this.state.hovered) {\n                if (this.props.hoverStyle) {\n                    return Object.assign(Object.assign({}, (style || {})), this.props.hoverStyle);\n                }\n            }\n            return style;\n        };\n        this.handleCapturePressStart = (coordinates) => {\n            var _a, _b;\n            this.setState({ interaction: 'press-captured' });\n            this.panStartingCoordinates = coordinates;\n            if (this.divRef.current) {\n                (_b = (_a = this.props).onCapturePressStart) === null || _b === void 0 ? void 0 : _b.call(_a, coordinates, this.divRef.current);\n            }\n        };\n        this.handleCapturePressMove = (coordinates) => {\n            var _a, _b;\n            if (this.divRef.current && this.panStartingCoordinates) {\n                (_b = (_a = this.props).onCapturePressMove) === null || _b === void 0 ? void 0 : _b.call(_a, coordinates, this.divRef.current, this.panStartingCoordinates);\n            }\n        };\n        this.handleCapturePressEnd = (coordinates) => {\n            var _a, _b;\n            this.setState({ interaction: undefined });\n            this.panStartingCoordinates = undefined;\n            if (this.divRef.current) {\n                (_b = (_a = this.props).onCapturePressEnd) === null || _b === void 0 ? void 0 : _b.call(_a, coordinates, this.divRef.current);\n            }\n        };\n        this.handleCapturePressCancelled = () => {\n            var _a, _b;\n            this.setState({ interaction: undefined });\n            this.panStartingCoordinates = undefined;\n            if (this.divRef.current) {\n                (_b = (_a = this.props).onCapturePressCancelled) === null || _b === void 0 ? void 0 : _b.call(_a, this.divRef.current);\n            }\n        };\n        this.handleTapAbandoned = () => {\n            this.setState({ interaction: undefined });\n        };\n        this.handleLongTap = () => {\n            var _a, _b;\n            this.setState({ interaction: undefined });\n            (_b = (_a = this.props).onLongTap) === null || _b === void 0 ? void 0 : _b.call(_a);\n        };\n        this.handlePotentialLongTap = () => {\n            this.setState({ interaction: 'potential-long-tap' });\n        };\n        this.handlePotentialTap = () => {\n            this.setState({ interaction: 'potential-tap' });\n        };\n        this.handleTap = () => {\n            var _a, _b;\n            this.setState({ interaction: undefined });\n            (_b = (_a = this.props).onTap) === null || _b === void 0 ? void 0 : _b.call(_a);\n        };\n    }\n    componentDidMount() {\n        this.context.registerInteractable(this);\n    }\n    componentWillUnmount() {\n        this.context.unregisterInteractable(this);\n    }\n    getPressHandlingConfig() {\n        var _a;\n        if (this.props.disabled) {\n            return undefined;\n        }\n        return {\n            onPotentialTap: this.handlePotentialTap,\n            onTap: this.handleTap,\n            longTapThresholdMs: this.props.onLongTap\n                ? (_a = this.props.longTapThresholdMs) !== null && _a !== void 0 ? _a : DEFAULT_LONG_TAP_THRESHOLD_MS\n                : undefined,\n            onPotentialLongTap: this.handlePotentialLongTap,\n            onLongTap: this.handleLongTap,\n            onTapAbandoned: this.handleTapAbandoned,\n            capturePressThresholdMs: this.props.capturePressThresholdMs,\n            onCapturePressStart: this.handleCapturePressStart,\n            onCapturePressMove: this.handleCapturePressMove,\n            onCapturePressEnd: this.handleCapturePressEnd,\n            onCapturePressCancelled: this.handleCapturePressCancelled,\n        };\n    }\n    render() {\n        return (React.createElement(\"div\", Object.assign({}, { [Interactable_1.InteractableIdAttributeName]: this.id }, { id: this.props.id, ref: this.divRef, className: this.determineClassName(), style: this.determineStyle() }), typeof this.props.children === 'function' ? this.props.children(this.state) : this.props.children));\n    }\n    /**\n     * Called by the `Space` to change the hover state.\n     *\n     * This isn't intended to be called from outside the library.\n     */\n    setHovered(hovered) {\n        this.setState({ hovered });\n    }\n}\nexports.Pressable = Pressable;\nPressable.contextType = SpaceContext_1.SpaceContext;\n//# sourceMappingURL=Pressable.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Space = void 0;\nconst React = __importStar(require(\"react\"));\nconst ElementSizeChangePoller_1 = require(\"./ElementSizeChangePoller\");\nconst Interactable_1 = require(\"./Interactable\");\nconst NoPanArea_1 = require(\"./NoPanArea\");\nconst Pressable_1 = require(\"./Pressable\");\nconst PressInterpreter_1 = require(\"./PressInterpreter\");\nconst SpaceContext_1 = require(\"./SpaceContext\");\nconst utils_1 = require(\"./utils\");\nconst ViewPort_1 = require(\"./ViewPort\");\n/**\n * This component makes its children zoomable and pan-able.\n *\n * Please read the [Guide](../../Guide.md) for all the details on how to use\n * this.\n *\n * ## Props\n *\n * See `SpaceProps`.\n */\nclass Space extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.rootDivUniqueClassName = `react-zoomable-ui-${(0, utils_1.generateRandomId)()}`;\n        this.constantStyles = `\n.${this.rootDivUniqueClassName} {\n  position: absolute;\n  top: 0; bottom: 0; left: 0; right: 0;\n  cursor: default;\n}\n\n.${this.rootDivUniqueClassName} > .react-zoomable-ui-inner-div {\n  margin: 0; padding: 0; \n  transform-origin: 0% 0%;\n  min-height: 100%;\n  width: 100%;\n}\n`;\n        /**\n         * This should be called in some cases to tell the `Space` that its parent\n         * element has resized. See the [Guide](../../Guide.md) for more info.\n         */\n        this.updateSize = () => {\n            if (this.viewPort) {\n                this.viewPort.updateContainerSize();\n            }\n        };\n        this.createTransformStyle = () => {\n            if (this.viewPort) {\n                return {\n                    transform: `scale(${this.viewPort.zoomFactor}) translate(${-1 * this.viewPort.left}px,${-1 * this.viewPort.top}px)`,\n                };\n            }\n            return undefined;\n        };\n        this.destroyViewPort = () => {\n            var _a;\n            if (this.viewPort) {\n                this.viewPort.destroy();\n                this.viewPort = undefined;\n            }\n            if (this.outerDivRef) {\n                this.outerDivRef.removeEventListener('dragstart', this.handleDragStart);\n            }\n            (_a = this.elementSizeChangePoller) === null || _a === void 0 ? void 0 : _a.reset();\n        };\n        this.handleDragStart = (e) => {\n            // This is the only way I have found that actually suppresses the default\n            // handling of dragging on images, which interferes with our panning by\n            // having a \"ghost image\" follow the pointer, across all browsers.\n            // See this link for more info:\n            // https://stackoverflow.com/questions/3873595/how-to-disable-firefoxs-default-drag-and-drop-on-all-images-behavior-with-jquer\n            //\n            // This additionally prevents another weird-o case of double clicking to\n            // select text in Desktop Safari and then long clicking and dragging. This\n            // will enter some sorta drag state where all the text is being dragged.\n            // This is bad and it also conflicts with our <Pressable> components.\n            if (e.target) {\n                const interactableId = (0, Interactable_1.getInteractableIdMostApplicableToElement)(e.target);\n                const interactable = (interactableId && this.interactableRegistry.get(interactableId)) || undefined;\n                // Suppress the drag _unless_ it is within a no pan handling area, then\n                // let it happen.\n                if (interactable && interactable instanceof NoPanArea_1.NoPanArea) {\n                    // Intentionally do nothing\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n        };\n        this.handleDecideHowToHandlePress = (e, coordinates) => {\n            if (this.props.onDecideHowToHandlePress) {\n                const result = this.props.onDecideHowToHandlePress(e, coordinates);\n                if (result) {\n                    return result;\n                }\n            }\n            const interactableId = (0, Interactable_1.getInteractableIdMostApplicableToElement)(e.target);\n            const interactable = (interactableId && this.interactableRegistry.get(interactableId)) || undefined;\n            if (e.type === 'mousedown') {\n                const elementTagName = ((e.target && e.target.tagName) || '').toLowerCase();\n                if (elementTagName === 'a' || elementTagName === 'button') {\n                    // Prevent dragging on these elements A. the browsers may interpret the\n                    // drag end as a click on it and B. desktop Safari (possibly others) has\n                    // its own drag handling for links which conflicts with what we are\n                    // doing.\n                    return { ignorePressEntirely: true };\n                }\n            }\n            if (interactable && interactable instanceof NoPanArea_1.NoPanArea) {\n                return { ignorePressEntirely: true };\n            }\n            else if (interactable && interactable instanceof Pressable_1.Pressable) {\n                return interactable.getPressHandlingConfig();\n            }\n            return undefined;\n        };\n        this.handleHover = (e, coordinates) => {\n            const interactableId = (0, Interactable_1.getInteractableIdMostApplicableToElement)(e.target);\n            const interactable = (interactableId && this.interactableRegistry.get(interactableId)) || undefined;\n            if (interactable && interactable instanceof Pressable_1.Pressable) {\n                if (interactable !== this.currentHoveredPressable) {\n                    this.currentHoveredPressable = interactable;\n                    this.currentHoveredPressable.setHovered(true);\n                }\n            }\n            else if (this.currentHoveredPressable) {\n                this.currentHoveredPressable.setHovered(false);\n                this.currentHoveredPressable = undefined;\n            }\n            if (this.props.onHover) {\n                this.props.onHover(e, coordinates);\n            }\n        };\n        this.handleContextMenu = (e, coordinates) => {\n            if (this.props.onContextMenu) {\n                const result = this.props.onContextMenu(e, coordinates);\n                e.preventDefault();\n                if (result) {\n                    return;\n                }\n            }\n            const interactableId = (0, Interactable_1.getInteractableIdMostApplicableToElement)(e.target);\n            const interactable = (interactableId && this.interactableRegistry.get(interactableId)) || undefined;\n            if (interactable && interactable instanceof Pressable_1.Pressable && interactable.props.onContextMenu) {\n                interactable.props.onContextMenu(coordinates);\n                e.preventDefault();\n                return;\n            }\n            // We have to prevent default this in a few cases on Android because it can\n            // interfere w/ panning\n            if (utils_1.browserIsAndroid) {\n                if (interactable && interactable instanceof NoPanArea_1.NoPanArea) {\n                    // Don't do anything\n                }\n                else {\n                    e.preventDefault();\n                }\n                return;\n            }\n        };\n        this.handleViewPortUpdated = () => {\n            var _a, _b;\n            this.setState({ transformStyle: this.createTransformStyle() });\n            if (this.viewPort) {\n                (_b = (_a = this.props).onUpdated) === null || _b === void 0 ? void 0 : _b.call(_a, this.viewPort);\n            }\n        };\n        this.setOuterDivRefAndCreateViewPort = (ref) => {\n            var _a, _b;\n            this.destroyViewPort();\n            this.outerDivRef = ref;\n            if (this.outerDivRef) {\n                this.viewPort = new ViewPort_1.ViewPort(this.outerDivRef, Object.assign(Object.assign({ onHover: this.handleHover, onContextMenu: this.handleContextMenu, onUpdated: this.handleViewPortUpdated }, this.pressInterpreter.pressHandlers), { treatTwoFingerTrackPadGesturesLikeTouch: this.props.treatTwoFingerTrackPadGesturesLikeTouch }));\n                (_b = (_a = this.props).onCreate) === null || _b === void 0 ? void 0 : _b.call(_a, this.viewPort);\n                this.outerDivRef.addEventListener('dragstart', this.handleDragStart);\n                // Polling is optional because it is unnecessary if the only way the div's\n                // size will change is with the window itself\n                this.elementSizeChangePoller.update(this.outerDivRef, !!this.props.pollForElementResizing);\n                const contextValue = {\n                    rootDivUniqueClassName: this.rootDivUniqueClassName,\n                    registerInteractable: (i) => this.interactableRegistry.set(i.id, i),\n                    unregisterInteractable: (i) => this.interactableRegistry.delete(i.id),\n                    viewPort: this.viewPort,\n                };\n                this.setState({\n                    contextValue,\n                    transformStyle: this.createTransformStyle(),\n                });\n            }\n        };\n        this.interactableRegistry = new Map();\n        this.state = {};\n        this.pressInterpreter = new PressInterpreter_1.PressInterpreter(this.handleDecideHowToHandlePress);\n        // This won't actually start polling until we give it an element, and tell\n        // it to start polling...\n        this.elementSizeChangePoller = new ElementSizeChangePoller_1.ElementSizeChangePoller(this.updateSize);\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.pollForElementResizing !== prevProps.pollForElementResizing) {\n            this.elementSizeChangePoller.update(this.outerDivRef, !!this.props.pollForElementResizing);\n        }\n    }\n    componentWillUnmount() {\n        this.destroyViewPort();\n    }\n    render() {\n        let transformedDivStyle = this.state.transformStyle;\n        if (this.props.innerDivStyle) {\n            // Margin doesn't play well with the scale transforms, so we have to set\n            // it to 0 to be safe. Not sure what other styles may mess up the scale\n            // transform so at some point we probably should remove innerDivStyle and\n            // innerDivClassName as that will be safer.\n            transformedDivStyle = Object.assign(Object.assign(Object.assign({}, transformedDivStyle), this.props.innerDivStyle), { margin: 0 });\n        }\n        return (React.createElement(\"div\", { ref: this.setOuterDivRefAndCreateViewPort, id: this.props.id, className: `react-zoomable-ui-outer-div ${this.rootDivUniqueClassName} ${this.props.className || ''}`, style: this.props.style },\n            React.createElement(\"style\", null, this.constantStyles),\n            this.state.contextValue && (React.createElement(SpaceContext_1.SpaceContext.Provider, { value: this.state.contextValue },\n                React.createElement(\"div\", { className: `react-zoomable-ui-inner-div ${this.props.innerDivClassName || ''}`, style: transformedDivStyle }, this.props.children)))));\n    }\n}\nexports.Space = Space;\n//# sourceMappingURL=Space.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpaceContext = void 0;\nconst React = __importStar(require(\"react\"));\n/**\n * This React context can be used within a `Space` to get access\n * to the `ViewPort`.\n *\n * See `SpaceContextType` for the type of the data.\n */\nexports.SpaceContext = React.createContext(undefined);\n//# sourceMappingURL=SpaceContext.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ViewPort = void 0;\nconst hammerjs_1 = __importDefault(require(\"hammerjs\"));\nconst utils_1 = require(\"./utils\");\nconst ViewPortCamera_1 = require(\"./ViewPortCamera\");\n/**\n * The `ViewPort` represents a \"view\" into a virtual space, that is not\n * tied to the available screen space or HTML elements. Because of this, it is\n * infinite, but it also uses its own \"units\" (virtual space pixels).\n *\n * You can think of the view port as describing what rectangular portion of the\n * virtual space (from top left to bottom right) should be visible inside the\n * bounds of containing HTML element where the virtual space is being rendered.\n *\n * Please see the [ Guide ](../../Guide.md) for more details.\n */\nclass ViewPort {\n    constructor(containerDiv, options) {\n        var _a;\n        this.getPressCoordinatesFromEvent = (e) => {\n            let clientX;\n            let clientY;\n            if ((0, utils_1.isMouseEvent)(e)) {\n                clientX = e.clientX;\n                clientY = e.clientY;\n            }\n            else {\n                clientX = e.changedTouches[0].clientX;\n                clientY = e.changedTouches[0].clientY;\n            }\n            const clientBoundingRect = this.containerDiv.getBoundingClientRect();\n            const containerX = clientX - clientBoundingRect.left;\n            const containerY = clientY - clientBoundingRect.top;\n            const x = containerX / this.zoomFactor + this.left;\n            const y = containerY / this.zoomFactor + this.top;\n            return { x, y, clientX, clientY, containerX, containerY };\n        };\n        this.handleContextMenu = (e) => {\n            var _a, _b, _c, _d;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleContextMenu`);\n            }\n            if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.treatRightClickAsPan) {\n                e.preventDefault();\n            }\n            else {\n                (_d = (_c = this.options) === null || _c === void 0 ? void 0 : _c.onContextMenu) === null || _d === void 0 ? void 0 : _d.call(_c, e, this.getPressCoordinatesFromEvent(e));\n            }\n        };\n        this.handleGestureStartForDesktopSafari = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleGestureStartForDesktopSafari`);\n            }\n            e.preventDefault();\n            this.currentDesktopSafariGestureState = {\n                startingCenterX: e.clientX,\n                startingCenterY: e.clientY,\n                scale: e.scale,\n            };\n        };\n        this.handleGestureChangeForDesktopSafari = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleGestureChangeForDesktopSafari`);\n            }\n            e.preventDefault();\n            if (!this.currentDesktopSafariGestureState) {\n                return;\n            }\n            const clientBoundingRect = this.containerDiv.getBoundingClientRect();\n            const pointerContainerX = this.currentDesktopSafariGestureState.startingCenterX - clientBoundingRect.left;\n            const pointerContainerY = this.currentDesktopSafariGestureState.startingCenterY - clientBoundingRect.top;\n            // Divide by 2 so it feels less fast\n            const dZoom = (e.scale - this.currentDesktopSafariGestureState.scale) / 2;\n            this.currentDesktopSafariGestureState.scale = e.scale;\n            this.camera.moveByInClientSpace(0, 0, dZoom, pointerContainerX, pointerContainerY);\n        };\n        this.handleGestureEndForDesktopSafari = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleGestureEndForDesktopSafari`);\n            }\n            e.preventDefault();\n            this.currentDesktopSafariGestureState = undefined;\n        };\n        this.handleHammerPanStart = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleHammerPanStart`);\n            }\n            this.currentHammerGestureState = undefined;\n        };\n        this.handleHammerPanMove = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleHammerPanMove`);\n            }\n            if (this.currentHammerGestureState === undefined) {\n                this.currentHammerGestureState = {\n                    deltaX: 0,\n                    deltaY: 0,\n                    scale: undefined,\n                };\n            }\n            const dx = this.currentHammerGestureState.deltaX - e.deltaX;\n            const dy = this.currentHammerGestureState.deltaY - e.deltaY;\n            this.currentHammerGestureState.deltaX = e.deltaX;\n            this.currentHammerGestureState.deltaY = e.deltaY;\n            if (this.pressHandlingMode) {\n                return;\n            }\n            const clientBoundingRect = this.containerDiv.getBoundingClientRect();\n            const pointerContainerX = e.center.x - clientBoundingRect.left;\n            const pointerContainerY = e.center.y - clientBoundingRect.top;\n            this.camera.moveByInClientSpace(dx, dy, 0, pointerContainerX, pointerContainerY);\n        };\n        this.handleHammerPanEnd = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleHammerPanEnd (` + e.velocityX + ',' + e.velocityY + ')');\n            }\n            if (!this.pressHandlingMode) {\n                // Negative one because the direction of the pointer is the opposite of\n                // the direction we are moving the viewport. Multiplying by 20 makes it\n                // feel more normal.\n                this.camera.moveWithDecelerationInClientSpace(-1 * e.velocityX * 20, -1 * e.velocityY * 20);\n            }\n            this.currentHammerGestureState = undefined;\n        };\n        this.handleHammerPanCancel = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleHammerPanCancel`);\n            }\n            this.currentHammerGestureState = undefined;\n        };\n        this.handleHammerPinchStart = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleHammerPinchStart`);\n            }\n            this.currentHammerGestureState = undefined;\n        };\n        this.handleHammerPinchMove = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleHammerPinchMove`);\n            }\n            if (this.currentHammerGestureState === undefined) {\n                this.currentHammerGestureState = {\n                    deltaX: e.deltaX,\n                    deltaY: e.deltaY,\n                    scale: e.scale,\n                };\n            }\n            const dx = this.currentHammerGestureState.deltaX - e.deltaX;\n            const dy = this.currentHammerGestureState.deltaY - e.deltaY;\n            // Divide by 2 so it feels less fast\n            const dZoom = (e.scale - (this.currentHammerGestureState.scale || e.scale)) / 2;\n            this.currentHammerGestureState.deltaX = e.deltaX;\n            this.currentHammerGestureState.deltaY = e.deltaY;\n            this.currentHammerGestureState.scale = e.scale;\n            const clientBoundingRect = this.containerDiv.getBoundingClientRect();\n            const pointerContainerX = e.center.x - clientBoundingRect.left;\n            const pointerContainerY = e.center.y - clientBoundingRect.top;\n            this.camera.moveByInClientSpace(dx, dy, dZoom, pointerContainerX, pointerContainerY);\n        };\n        this.handleHammerPinchEnd = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleHammerPinchEnd`);\n            }\n            if (!this.pressHandlingMode) {\n                // Negative one because the direction of the pointer is the opposite of\n                // the direction we are moving the viewport. Multiplying by 20 makes it\n                // feel more normal.\n                this.camera.moveWithDecelerationInClientSpace(-1 * e.velocityX * 20, -1 * e.velocityY * 20);\n            }\n            this.currentHammerGestureState = undefined;\n        };\n        this.handleHammerPinchCancel = (e) => {\n            var _a;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleHammerPinchCancel`);\n            }\n            this.currentHammerGestureState = undefined;\n        };\n        this.handleMouseDown = (e) => {\n            var _a, _b, _c, _d;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleMouseDown`);\n            }\n            // e.buttons === 1 means the left/primary button is pressed and ONLY that\n            // e.buttons === 2\n            const isLeftOnly = e.buttons === 1;\n            const isRightOnly = e.buttons === 2;\n            const shouldHandleAsPan = isLeftOnly || (((_b = this.options) === null || _b === void 0 ? void 0 : _b.treatRightClickAsPan) && isRightOnly);\n            if (!shouldHandleAsPan) {\n                return;\n            }\n            if (isLeftOnly) {\n                this.pressHandlingMode = (_d = (_c = this.options) === null || _c === void 0 ? void 0 : _c.onPressStart) === null || _d === void 0 ? void 0 : _d.call(_c, e, this.getPressCoordinatesFromEvent(e));\n                if (this.pressHandlingMode === 'capture') {\n                    e.preventDefault();\n                }\n            }\n            else if (isRightOnly) {\n                e.preventDefault();\n                // Sadly hammer.js doesn't give us an option to treat right clicks as\n                // pans so we have to make this work ourselves.\n                this.pressHandlingMode = 'rightclickpan';\n                this.rightClickPanState = {\n                    lastClientX: e.clientX,\n                    lastClientY: e.clientY,\n                    velocityX: 0,\n                    velocityY: 0,\n                };\n            }\n        };\n        this.handleMouseMove = (e) => {\n            var _a, _b, _c, _d;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleMouseMove (pressHandlingMode: ${this.pressHandlingMode})`);\n            }\n            if (this.pressHandlingMode === 'capture') {\n                if (e.buttons !== 1) {\n                    // Intentionally don't do anything... maybe cancel here?\n                }\n                else {\n                    if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.onPressMove) {\n                        if (this.options.onPressMove(e, this.getPressCoordinatesFromEvent(e)) === 'release') {\n                            this.pressHandlingMode = undefined;\n                        }\n                    }\n                }\n            }\n            else if (this.pressHandlingMode === 'rightclickpan') {\n                if (e.buttons !== 2 || !this.rightClickPanState) {\n                    // Intentionally don't do anything... maybe reset this.pressHandlingMode?\n                }\n                else {\n                    const dx = this.rightClickPanState.lastClientX - e.clientX;\n                    const dy = this.rightClickPanState.lastClientY - e.clientY;\n                    this.rightClickPanState.lastClientX = e.clientX;\n                    this.rightClickPanState.lastClientY = e.clientY;\n                    this.rightClickPanState.velocityX = dx;\n                    this.rightClickPanState.velocityY = dy;\n                    const clientBoundingRect = this.containerDiv.getBoundingClientRect();\n                    const pointerContainerX = e.clientX - clientBoundingRect.left;\n                    const pointerContainerY = e.clientY - clientBoundingRect.top;\n                    this.camera.moveByInClientSpace(dx, dy, 0, pointerContainerX, pointerContainerY);\n                }\n            }\n            else if (e.buttons === 0) {\n                (_d = (_c = this.options) === null || _c === void 0 ? void 0 : _c.onHover) === null || _d === void 0 ? void 0 : _d.call(_c, e, this.getPressCoordinatesFromEvent(e));\n            }\n        };\n        this.handleMouseUp = (e) => {\n            var _a, _b, _c;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleMouseUp`);\n            }\n            if (this.pressHandlingMode === 'capture' && ((_b = this.options) === null || _b === void 0 ? void 0 : _b.onPressEnd)) {\n                (_c = this.options) === null || _c === void 0 ? void 0 : _c.onPressEnd(e, this.getPressCoordinatesFromEvent(e));\n            }\n            if (this.pressHandlingMode === 'rightclickpan' && this.rightClickPanState) {\n                const dx = this.rightClickPanState.velocityX;\n                const dy = this.rightClickPanState.velocityY;\n                this.camera.moveWithDecelerationInClientSpace(dx, dy);\n            }\n            this.pressHandlingMode = undefined;\n            this.rightClickPanState = undefined;\n        };\n        this.handleTouchStart = (e) => {\n            var _a, _b, _c, _d;\n            if (e.touches.length !== 1) {\n                if (this.pressHandlingMode) {\n                    this.pressHandlingMode = undefined;\n                    (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.onPressCancel) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n                    return;\n                }\n            }\n            this.pressHandlingMode = (_d = (_c = this.options) === null || _c === void 0 ? void 0 : _c.onPressStart) === null || _d === void 0 ? void 0 : _d.call(_c, e, this.getPressCoordinatesFromEvent(e));\n            if (this.pressHandlingMode === 'capture') {\n                e.preventDefault();\n            }\n        };\n        this.handleTouchMove = (e) => {\n            var _a, _b, _c;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleTouchMove`);\n            }\n            if (e.touches.length === 1) {\n                if (this.pressHandlingMode === 'capture' && ((_b = this.options) === null || _b === void 0 ? void 0 : _b.onPressMove)) {\n                    if (((_c = this.options) === null || _c === void 0 ? void 0 : _c.onPressMove(e, this.getPressCoordinatesFromEvent(e))) === 'release') {\n                        this.pressHandlingMode = undefined;\n                    }\n                }\n            }\n        };\n        this.handleTouchEnd = (e) => {\n            var _a, _b, _c;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleTouchEnd`);\n            }\n            if (e.touches.length === 0 && e.changedTouches.length === 1) {\n                if (this.pressHandlingMode === 'capture' && ((_b = this.options) === null || _b === void 0 ? void 0 : _b.onPressEnd)) {\n                    (_c = this.options) === null || _c === void 0 ? void 0 : _c.onPressEnd(e, this.getPressCoordinatesFromEvent(e));\n                }\n            }\n        };\n        this.handleWheel = (e) => {\n            var _a, _b;\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.debugEvents) {\n                console.log(`ViewPort:handleWheel`, e);\n            }\n            e.preventDefault();\n            let isPrimarilyZoom = true;\n            if ((_b = this.options) === null || _b === void 0 ? void 0 : _b.treatTwoFingerTrackPadGesturesLikeTouch) {\n                // For whatever reason, desktop browsers send pinch gestures with ctrlKey set to true.\n                isPrimarilyZoom = e.ctrlKey;\n            }\n            if (isPrimarilyZoom) {\n                let scale = e.ctrlKey ? 5 : 1; // This feels more right...\n                switch (e.deltaMode) {\n                    case 1: // DOM_DELTA_LINE\n                        scale = 7.15625; // Line height total guesstimate from `to-px` (looking up their const for 'ex')\n                        break;\n                    case 2: // DOM_DELTA_PAGE\n                        scale = window.innerHeight;\n                        break;\n                }\n                const clientBoundingRect = this.containerDiv.getBoundingClientRect();\n                const pointerContainerX = e.clientX - clientBoundingRect.left;\n                const pointerContainerY = e.clientY - clientBoundingRect.top;\n                const dy = e.deltaY * scale;\n                const dZoom = ((-1 * dy) / this.containerHeight) * this.zoomFactor;\n                // Vertical scroll is doing to be interpreted by us as changing z\n                this.camera.moveByInClientSpace(0, 0, dZoom, pointerContainerX, pointerContainerY);\n            }\n            else {\n                this.camera.moveByInClientSpace(e.deltaX / 2, e.deltaY / 2, 0);\n            }\n        };\n        this.containerDiv = containerDiv;\n        this.options = options;\n        // Default values\n        this.left = 0;\n        this.top = 0;\n        this.centerX = 0;\n        this.centerY = 0;\n        this.width = 0;\n        this.height = 0;\n        this.zoomFactor = 1;\n        this.containerWidth = 0;\n        this.containerHeight = 0;\n        this.pressHandlingMode = undefined;\n        // Bind methods JIC\n        // tslint:disable-next-line: unnecessary-bind\n        this.setBounds = this.setBounds.bind(this);\n        this.updateContainerSize = this.updateContainerSize.bind(this);\n        this.translateClientXYCoordinatesToVirtualSpace = this.translateClientXYCoordinatesToVirtualSpace.bind(this);\n        this.translateClientRectToVirtualSpace = this.translateClientRectToVirtualSpace.bind(this);\n        // Set the div's styles\n        this.containerDiv.style.overflow = 'hidden';\n        this.containerDiv.style.padding = '0';\n        // Setup other stuff\n        this.camera = new ViewPortCamera_1.ViewPortCamera(this, this.translateClientRectToVirtualSpace, (_a = this.options) === null || _a === void 0 ? void 0 : _a.onUpdated);\n        // Tell the camera about our div size this has to be after we change the style above...\n        this.updateContainerSize();\n        // Add event listeners\n        // We use hammer for handling pinches and panning, and our own listeners for\n        // everything else, including taps.\n        this.containerDiv.addEventListener('mousedown', this.handleMouseDown);\n        this.containerDiv.addEventListener('mousemove', this.handleMouseMove);\n        // Doing this on window to catch it if it goes outside the window\n        window.addEventListener('mouseup', this.handleMouseUp);\n        this.containerDiv.addEventListener('touchstart', this.handleTouchStart, { passive: false });\n        this.containerDiv.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n        this.containerDiv.addEventListener('touchend', this.handleTouchEnd);\n        this.containerDiv.addEventListener('contextmenu', this.handleContextMenu);\n        // There is no good way to detect whether an individual element is\n        // resized. We can only do that at the window level. There are some\n        // techniques for tracking element sizes, and we provide an OPTIONAL\n        // polling based technique. But since watching for window resizes WILL\n        // work for many use cases we do that here, and it shouldn't interfere\n        // with any more specific techniques.\n        window.addEventListener('resize', this.updateContainerSize);\n        this.containerDiv.addEventListener('wheel', this.handleWheel, { passive: false });\n        if (utils_1.browserIsSafariDesktop) {\n            this.containerDiv.addEventListener('gesturestart', this.handleGestureStartForDesktopSafari);\n            this.containerDiv.addEventListener('gesturechange', this.handleGestureChangeForDesktopSafari);\n            this.containerDiv.addEventListener('gestureend', this.handleGestureEndForDesktopSafari);\n        }\n        // Set up the pan-zoom library\n        // this.panZoomControl = panzoom(this.containerDiv, this.handlePanZoomEvent);\n        this.hammer = new hammerjs_1.default(this.containerDiv, {});\n        // Press and tap almost do what we want, but not quite. See README.md for\n        // more info.\n        this.hammer.remove('press');\n        this.hammer.remove('tap');\n        this.hammer.get('pinch').set({ enable: true });\n        this.hammer.get('pan').set({ threshold: 0, direction: hammerjs_1.default.DIRECTION_ALL });\n        this.hammer.on('panstart', this.handleHammerPanStart);\n        this.hammer.on('panmove', this.handleHammerPanMove);\n        this.hammer.on('panend', this.handleHammerPanEnd);\n        this.hammer.on('pancancel', this.handleHammerPanCancel);\n        this.hammer.on('pinchstart', this.handleHammerPinchStart);\n        this.hammer.on('pinchmove', this.handleHammerPinchMove);\n        this.hammer.on('pinchend', this.handleHammerPinchEnd);\n        this.hammer.on('pinchcancel', this.handleHammerPinchCancel);\n    }\n    /**\n     * Called this to detach all event listeners that the `ViewPort` sets up.\n     * After this is called no further updates will happen.\n     */\n    destroy() {\n        this.camera.destroy();\n        this.containerDiv.removeEventListener('mousedown', this.handleMouseDown);\n        this.containerDiv.removeEventListener('mousemove', this.handleMouseMove);\n        window.removeEventListener('mouseup', this.handleMouseUp);\n        this.containerDiv.removeEventListener('touchstart', this.handleTouchStart);\n        this.containerDiv.removeEventListener('touchmove', this.handleTouchMove);\n        this.containerDiv.removeEventListener('touchend', this.handleTouchEnd);\n        this.containerDiv.removeEventListener('contextmenu', this.handleContextMenu);\n        window.removeEventListener('resize', this.updateContainerSize);\n        this.containerDiv.removeEventListener('wheel', this.handleWheel);\n        if (utils_1.browserIsSafariDesktop) {\n            // We have to handle the pinch gesture manually on desktop Safari\n            this.containerDiv.removeEventListener('gesturestart', this.handleGestureStartForDesktopSafari);\n            this.containerDiv.removeEventListener('gesturechange', this.handleGestureChangeForDesktopSafari);\n            this.containerDiv.removeEventListener('gestureend', this.handleGestureEndForDesktopSafari);\n        }\n        this.hammer.destroy();\n    }\n    /**\n     * Constrain the virtual space so the user can not pan beyond, and the camera\n     * cannot show anything beyond, the provided min/max values for x, y, and the\n     * zoom factor.\n     */\n    setBounds(bounds) {\n        // The `camera` is really a `ViewPortCamera`, we just declare the field as\n        // `ViewPortCameraInterface` to hide the `setBounds` method on it.\n        this.camera.setBounds(bounds);\n    }\n    translateClientXYCoordinatesToVirtualSpace(clientX, clientY) {\n        const clientBoundingRect = this.containerDiv.getBoundingClientRect();\n        const containerX = clientX - clientBoundingRect.left;\n        const containerY = clientY - clientBoundingRect.top;\n        const x = containerX / this.zoomFactor + this.left;\n        const y = containerY / this.zoomFactor + this.top;\n        return { x, y };\n    }\n    translateClientRectToVirtualSpace(rectOrElement) {\n        if (!rectOrElement.getBoundingClientRect) {\n            const rect = rectOrElement;\n            const clientBoundingRect = this.containerDiv.getBoundingClientRect();\n            const containerX = rect.left - clientBoundingRect.left;\n            const containerY = rect.top - clientBoundingRect.top;\n            const left = containerX / this.zoomFactor + this.left;\n            const top = containerY / this.zoomFactor + this.top;\n            const height = rect.height / this.zoomFactor;\n            const width = rect.width / this.zoomFactor;\n            return {\n                left,\n                top,\n                height,\n                width,\n                right: left + width,\n                bottom: top + height,\n            };\n        }\n        else {\n            const element = rectOrElement;\n            return this.translateClientRectToVirtualSpace(element.getBoundingClientRect());\n        }\n    }\n    /**\n     * This should be used when the div is resized. By default resizes due to the\n     * window itself resizing will be automatically handled, but any other\n     * resizes won't be handled (since there isn't a good way to get notified\n     * when the div resizes.\n     *\n     * If you are getting access to the `ViewPort` via `Space` or\n     * `SpaceContext` you should not call this method directly and should\n     * instead call the `Space.updateSize` method.\n     */\n    updateContainerSize() {\n        const clientBoundingRect = this.containerDiv.getBoundingClientRect();\n        const { width, height } = clientBoundingRect;\n        this.camera.handleContainerSizeChanged(width, height);\n    }\n}\nexports.ViewPort = ViewPort;\n//# sourceMappingURL=ViewPort.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ViewPortCamera = void 0;\nconst ts_invariant_1 = require(\"ts-invariant\");\nconst utils_1 = require(\"./utils\");\nconst ViewPortMath_1 = require(\"./ViewPortMath\");\nconst DEFAULT_BOUNDS = [0.001, 100];\nvar StopAnimationKind;\n(function (StopAnimationKind) {\n    StopAnimationKind[\"FORCE\"] = \"FORCE\";\n    StopAnimationKind[\"INTERRUPT\"] = \"INTERRUPT\";\n})(StopAnimationKind || (StopAnimationKind = {}));\n/**\n * This class has methods to change and animate what portion of the virtual\n * space is visible in the `ViewPort`. You should not construct this directly,\n * rather get an instance from the `ViewPort`.\n */\nclass ViewPortCamera {\n    /**\n     * This is only intended to be constructed by the `ViewPort`. Get an instance\n     * via the `viewPort` property.\n     */\n    constructor(values, \n    // This is used solely for the `centerFitElementIntoView` method. The logic for the translation\n    // needs access to the `containerDiv` and so lives in the `ViewPort`, but for library uses it\n    // makes somewhat more sense to have `centerFitElementIntoView` on this class. Perhaps the two\n    // classes should be merged at some point (or translation logic should move to this class?).\n    getElementVirtualSpaceCoordinates, onUpdated) {\n        this.values = values;\n        this.getElementVirtualSpaceCoordinates = getElementVirtualSpaceCoordinates;\n        this.onUpdated = onUpdated;\n        this.copyValues = (values, to) => {\n            // Its faster to do it this way rather than use Object.assign, though it\n            // probably doesn't matter much.\n            to.centerX = values.centerX;\n            to.centerY = values.centerY;\n            to.containerHeight = values.containerHeight;\n            to.containerWidth = values.containerWidth;\n            to.height = values.height;\n            to.left = values.left;\n            to.width = values.width;\n            to.top = values.top;\n            to.zoomFactor = values.zoomFactor;\n        };\n        this.dealWithBoundsChanges = () => {\n            this.derivedBounds = Object.assign(Object.assign({}, this.derivedBounds), ViewPortMath_1.ViewPortMath.deriveActualZoomBounds(this.workingValues, this.derivedBounds, DEFAULT_BOUNDS));\n            ViewPortMath_1.ViewPortMath.updateBounds(this.workingValues, this.derivedBounds);\n            this.doImmediateUpdate();\n        };\n        this.handleAnimationFrame = (time) => {\n            var _a;\n            this.animationFrameId = undefined;\n            if (this.animation) {\n                if (this.animation.startingTimeMilliseconds === undefined) {\n                    this.animation.startingTimeMilliseconds = time - 1000 / 60; // Pretending like we are one frame into the animation\n                }\n                const completionPercent = (time - this.animation.startingTimeMilliseconds) / this.animation.durationMilliseconds;\n                this.advanceCurrentAnimation(completionPercent);\n                if (completionPercent < 1) {\n                    if (!this.animationFrameId) {\n                        this.animationFrameId = requestAnimationFrame(this.handleAnimationFrame);\n                    }\n                }\n                else {\n                    this.animation = undefined;\n                }\n            }\n            this.copyValues(this.workingValues, this.values);\n            (_a = this.onUpdated) === null || _a === void 0 ? void 0 : _a.call(this);\n        };\n        const { containerWidth, containerHeight, centerX, centerY, left, top, width, height, zoomFactor } = values;\n        this.workingValues = {\n            containerWidth,\n            containerHeight,\n            centerX,\n            centerY,\n            left,\n            top,\n            width,\n            height,\n            zoomFactor,\n        };\n        // Semi-sane default bounds...\n        this.derivedBounds = { zoom: DEFAULT_BOUNDS };\n    }\n    centerFitAreaIntoView(area, additionalBounds, animationOptions) {\n        if (!this.stopCurrentAnimation(StopAnimationKind.INTERRUPT)) {\n            return;\n        }\n        const updateTarget = !animationOptions ? this.workingValues : Object.assign({}, this.workingValues);\n        ViewPortMath_1.ViewPortMath.centerFitArea(updateTarget, this.derivedBounds, area, additionalBounds);\n        if (!animationOptions) {\n            this.doImmediateUpdate();\n        }\n        else {\n            this.scheduleAnimation(updateTarget, animationOptions);\n        }\n    }\n    centerFitElementIntoView(element, options, animationOptions) {\n        if (!this.stopCurrentAnimation(StopAnimationKind.INTERRUPT)) {\n            return;\n        }\n        const area = this.getElementVirtualSpaceCoordinates(element);\n        if (options === null || options === void 0 ? void 0 : options.elementExtraMarginForZoom) {\n            area.top -= options.elementExtraMarginForZoom;\n            area.left -= options.elementExtraMarginForZoom;\n            area.bottom += options.elementExtraMarginForZoom;\n            area.right += options.elementExtraMarginForZoom;\n            area.width += options.elementExtraMarginForZoom * 2;\n            area.height += options.elementExtraMarginForZoom * 2;\n        }\n        const updateTarget = !animationOptions ? this.workingValues : Object.assign({}, this.workingValues);\n        ViewPortMath_1.ViewPortMath.centerFitArea(updateTarget, this.derivedBounds, area, options === null || options === void 0 ? void 0 : options.additionalBounds);\n        // This has to be done after the centerFitArea so we know what the final zoomFactor is\n        if (options === null || options === void 0 ? void 0 : options.elementExtraMarginForZoomInClientSpace) {\n            const additionalMargin = options.elementExtraMarginForZoomInClientSpace / updateTarget.zoomFactor;\n            area.top -= additionalMargin;\n            area.left -= additionalMargin;\n            area.bottom += additionalMargin;\n            area.right += additionalMargin;\n            area.width += additionalMargin * 2;\n            area.height += additionalMargin * 2;\n            ViewPortMath_1.ViewPortMath.centerFitArea(updateTarget, this.derivedBounds, area, options === null || options === void 0 ? void 0 : options.additionalBounds);\n        }\n        if (!animationOptions) {\n            this.doImmediateUpdate();\n        }\n        else {\n            this.scheduleAnimation(updateTarget, animationOptions);\n        }\n    }\n    centerFitHorizontalAreaIntoView(left, width, additionalBounds, animationOptions) {\n        if (!this.stopCurrentAnimation(StopAnimationKind.INTERRUPT)) {\n            return;\n        }\n        const updateTarget = !animationOptions ? this.workingValues : Object.assign({}, this.workingValues);\n        ViewPortMath_1.ViewPortMath.centerFitHorizontalArea(updateTarget, this.derivedBounds, left, width, additionalBounds);\n        if (!animationOptions) {\n            this.doImmediateUpdate();\n        }\n        else {\n            this.scheduleAnimation(updateTarget, animationOptions);\n        }\n    }\n    destroy() {\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = undefined;\n        }\n    }\n    moveBy(dx, dy, dZoom, anchorContainerX, anchorContainerY, animationOptions) {\n        if (!this.stopCurrentAnimation(StopAnimationKind.INTERRUPT)) {\n            return;\n        }\n        const updateTarget = !animationOptions ? this.workingValues : Object.assign({}, this.workingValues);\n        ViewPortMath_1.ViewPortMath.updateBy(updateTarget, this.derivedBounds, dx, dy, dZoom, anchorContainerX, anchorContainerY);\n        if (!animationOptions) {\n            this.doImmediateUpdate();\n        }\n        else {\n            this.scheduleAnimation(updateTarget, animationOptions);\n        }\n    }\n    moveByInClientSpace(dx, dy, dZoom, anchorContainerX, anchorContainerY, animationOptions) {\n        this.moveBy(dx / this.workingValues.zoomFactor, dy / this.workingValues.zoomFactor, dZoom, anchorContainerX, anchorContainerY, animationOptions);\n    }\n    moveWithDeceleration(vx, vy, friction, preventInterruption) {\n        if (!this.stopCurrentAnimation(StopAnimationKind.INTERRUPT)) {\n            return;\n        }\n        const finalFriction = Math.min(Math.abs(friction), 0.99);\n        const updateTarget = Object.assign({}, this.workingValues);\n        // Figure out roughly how many animation frames we need, where we decrease\n        // the velocity by the friction on each frame, to get to 0 velocity. Also\n        // keep track of how far we go.\n        let currentVX = vx;\n        let currentVY = vy;\n        let dx = vx;\n        let dy = vy;\n        let animationFramesNeeded = 1; // Skip the first frame since its trivial\n        while (Math.abs(currentVX) > 0.2 || Math.abs(currentVY) > 0.2) {\n            currentVX *= finalFriction;\n            dx += currentVX;\n            currentVY *= finalFriction;\n            dy += currentVY;\n            animationFramesNeeded++;\n        }\n        ViewPortMath_1.ViewPortMath.updateBy(updateTarget, this.derivedBounds, dx, dy, 0);\n        const animationOptions = {\n            preventInterruption,\n            durationMilliseconds: (1000 / 60) * animationFramesNeeded,\n        };\n        this.scheduleAnimation(updateTarget, animationOptions);\n    }\n    moveWithDecelerationInClientSpace(vx, vy, friction = 0.84, preventInterruption) {\n        this.moveWithDeceleration(vx / this.workingValues.zoomFactor, vy / this.workingValues.zoomFactor, friction, preventInterruption);\n    }\n    /**\n     * This is not intended to be called by code outside of react-zoomable-ui itself.\n     */\n    handleContainerSizeChanged(width, height) {\n        if (width === this.workingValues.containerWidth && height === this.workingValues.containerHeight) {\n            return;\n        }\n        // We don't know how to deal with this when an animation is in progress so\n        // we either cancel it or run it to completion.\n        this.stopCurrentAnimation(StopAnimationKind.FORCE);\n        // This is intended to handle the case where we first get our container dimensions\n        const wasZeroWidthHeightCenter = this.workingValues.width === 0 &&\n            this.workingValues.height === 0 &&\n            this.workingValues.centerX === 0 &&\n            this.workingValues.centerY === 0;\n        this.workingValues.containerWidth = width;\n        this.workingValues.containerHeight = height;\n        this.workingValues.width = this.workingValues.containerWidth / this.workingValues.zoomFactor;\n        this.workingValues.height = this.workingValues.containerHeight / this.workingValues.zoomFactor;\n        if (wasZeroWidthHeightCenter) {\n            this.workingValues.centerX = this.workingValues.width / 2;\n            this.workingValues.centerY = this.workingValues.height / 2;\n        }\n        // The new container height and width may influence the actual z bounds\n        this.dealWithBoundsChanges();\n    }\n    recenter(x, y, newZoomFactor, animationOptions) {\n        if (!this.stopCurrentAnimation(StopAnimationKind.INTERRUPT)) {\n            return;\n        }\n        const updateTarget = !animationOptions ? this.workingValues : Object.assign({}, this.workingValues);\n        if (newZoomFactor) {\n            ViewPortMath_1.ViewPortMath.updateZoom(updateTarget, this.derivedBounds, newZoomFactor);\n        }\n        ViewPortMath_1.ViewPortMath.updateTopLeft(updateTarget, this.derivedBounds, x - updateTarget.width / 2, y - updateTarget.height / 2);\n        if (!animationOptions) {\n            this.doImmediateUpdate();\n        }\n        else {\n            this.scheduleAnimation(updateTarget, animationOptions);\n        }\n    }\n    /**\n     * This is not intended to be called by code outside of react-zoomable-ui\n     * itself. It is hidden in the `ViewPortCameraInterface` that is exported\n     * from this library.\n     */\n    setBounds(bounds) {\n        // We don't know how to deal with this when an animation is in progress so\n        // we either cancel it or run it to completion.\n        this.stopCurrentAnimation(StopAnimationKind.FORCE);\n        this.derivedBounds = Object.assign({}, bounds);\n        this.dealWithBoundsChanges();\n    }\n    setBoundsToContainer() {\n        // We don't know how to deal with this when an animation is in progress so\n        // we either cancel it or run it to completion.\n        this.stopCurrentAnimation(StopAnimationKind.FORCE);\n        this.derivedBounds = {\n            x: [0, this.workingValues.containerWidth],\n            y: [0, this.workingValues.containerHeight],\n            // Can't zoom out but you can zoom in\n            zoom: [1, undefined],\n        };\n        this.dealWithBoundsChanges();\n    }\n    updateTopLeft(x, y, newZoomFactor, animationOptions) {\n        if (!this.stopCurrentAnimation(StopAnimationKind.INTERRUPT)) {\n            return;\n        }\n        const updateTarget = !animationOptions ? this.workingValues : Object.assign({}, this.workingValues);\n        if (newZoomFactor) {\n            ViewPortMath_1.ViewPortMath.updateZoom(updateTarget, this.derivedBounds, newZoomFactor);\n        }\n        ViewPortMath_1.ViewPortMath.updateTopLeft(updateTarget, this.derivedBounds, x, y);\n        if (!animationOptions) {\n            this.doImmediateUpdate();\n        }\n        else {\n            this.scheduleAnimation(updateTarget, animationOptions);\n        }\n    }\n    advanceCurrentAnimation(percent) {\n        if (!this.animation) {\n            return;\n        }\n        const { targetValues: tv, startingValues: sv } = this.animation;\n        if (percent >= 1) {\n            this.copyValues(tv, this.workingValues);\n        }\n        else {\n            // The reason we use `updateBy` with deltas is that when changing the zoom\n            // factor, sometimes, like when it is already small, there is some weird\n            // effect the math has where the animation appears to go down and to the\n            // right quite a bit before coming back up and to the left. Totally\n            // bizarre. Not really sure why to be honest, but I think it is due to us\n            // not being able to adjust the anchor position when the zoom changes, and\n            // thus getting the wrong x and y positions.\n            // Anyways, doing small updateBys like this is easier and is similar to\n            // what happens when zooming in and out with the mouse wheel.\n            const xyModifiedPercent = (0, utils_1.easeOutQuartic)(percent);\n            const dx = (0, utils_1.transitionNumber)(sv.centerX, tv.centerX, xyModifiedPercent) - this.workingValues.centerX;\n            const dy = (0, utils_1.transitionNumber)(sv.centerY, tv.centerY, xyModifiedPercent) - this.workingValues.centerY;\n            // If we are animating the x or y camera position AND the zoom, using this\n            // parametricBlend looks a lot better than doing the easeOutQuartic above.\n            // (If we are just animating zoom then easeOutQuartic is fine though.)\n            const zModifiedPercent = (0, utils_1.parametricBlend)(percent * percent * percent);\n            const dz = (0, utils_1.transitionNumber)(sv.zoomFactor, tv.zoomFactor, zModifiedPercent) - this.workingValues.zoomFactor;\n            ViewPortMath_1.ViewPortMath.updateBy(this.workingValues, this.derivedBounds, dx, dy, dz);\n        }\n    }\n    doImmediateUpdate() {\n        var _a;\n        // If there was a pending animation it should have been committed before\n        // this was called (so that the working values could have been updated)\n        (0, ts_invariant_1.invariant)(!this.animation, 'Cannot do immediate update while an animation is in progress.');\n        // This probably shouldn't happen but JIC there is a pending callback lets cancel it\n        if (this.animationFrameId !== undefined) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = undefined;\n        }\n        // Apply value updates and broadcast the event\n        this.copyValues(this.workingValues, this.values);\n        (_a = this.onUpdated) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    scheduleAnimation(targetValues, animationOptions) {\n        (0, ts_invariant_1.invariant)(!this.animation, 'Cannot schedule animation while another animation is still in progress.');\n        this.animation = Object.assign({ startingValues: Object.assign({}, this.workingValues), targetValues, \n            // We don't have a good way to get the high-res time that will be passed\n            // to requestAnimationFrame (performance.now() is greater than the next\n            // time we get in requestAnimationFrame for some reason, sometimes). So we\n            // set this to null and deal with it in handleAnimationFrame.\n            startingTimeMilliseconds: undefined }, animationOptions);\n        if (!this.animationFrameId) {\n            this.animationFrameId = requestAnimationFrame(this.handleAnimationFrame);\n        }\n    }\n    stopCurrentAnimation(stopKind) {\n        if (this.animation) {\n            if (this.animation.preventInterruption) {\n                if (stopKind === StopAnimationKind.FORCE) {\n                    this.copyValues(this.animation.targetValues, this.workingValues);\n                }\n                else {\n                    return false;\n                }\n            }\n            this.animation = undefined;\n        }\n        return true;\n    }\n}\nexports.ViewPortCamera = ViewPortCamera;\n//# sourceMappingURL=ViewPortCamera.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ViewPortMath = void 0;\nconst utils_1 = require(\"./utils\");\nexports.ViewPortMath = {\n    deriveActualZoomBounds({ containerWidth, containerHeight }, bounds, defaultZoomBounds) {\n        var _a, _b, _c, _d;\n        let min;\n        let max;\n        if ((bounds === null || bounds === void 0 ? void 0 : bounds.x) && ((_a = bounds.x) === null || _a === void 0 ? void 0 : _a[0]) !== undefined && ((_b = bounds.x) === null || _b === void 0 ? void 0 : _b[1]) !== undefined) {\n            const space = bounds.x[1] - bounds.x[0];\n            min = containerWidth / space;\n        }\n        if ((bounds === null || bounds === void 0 ? void 0 : bounds.y) && ((_c = bounds.y) === null || _c === void 0 ? void 0 : _c[0]) !== undefined && ((_d = bounds.y) === null || _d === void 0 ? void 0 : _d[1]) !== undefined) {\n            const space = bounds.y[1] - bounds.y[0];\n            min = min ? Math.max(min, containerHeight / space) : containerHeight / space;\n        }\n        if (bounds === null || bounds === void 0 ? void 0 : bounds.zoom) {\n            if (bounds.zoom[0] !== undefined) {\n                min = min ? Math.max(min, bounds.zoom[0]) : bounds.zoom[0];\n            }\n            if (bounds.zoom[1] !== undefined) {\n                max = bounds.zoom[1];\n            }\n        }\n        if (min === undefined) {\n            if (max === undefined) {\n                return { zoom: defaultZoomBounds };\n            }\n            return { zoom: [defaultZoomBounds[0], max] };\n        }\n        else {\n            return { zoom: [min, max !== null && max !== void 0 ? max : defaultZoomBounds[1]] };\n        }\n    },\n    centerFitArea(values, bounds, area, additionalBounds) {\n        const { left, top, width, height } = area;\n        const cx = left + width / 2;\n        const cy = top + height / 2;\n        const zoomFactorBasedOnWidth = values.containerWidth / width;\n        const zoomFactorBasedOnHeight = values.containerHeight / height;\n        let newZoomFactor = Math.min(zoomFactorBasedOnWidth, zoomFactorBasedOnHeight);\n        newZoomFactor = (0, utils_1.clamp)(newZoomFactor, additionalBounds === null || additionalBounds === void 0 ? void 0 : additionalBounds.zoom);\n        newZoomFactor = (0, utils_1.clamp)(newZoomFactor, bounds.zoom);\n        exports.ViewPortMath.updateZoom(values, bounds, newZoomFactor);\n        exports.ViewPortMath.updateTopLeft(values, bounds, cx - values.width / 2, cy - values.height / 2);\n    },\n    centerFitHorizontalArea(values, bounds, left, width, additionalBounds) {\n        let newZoomFactor = values.containerWidth / width;\n        newZoomFactor = (0, utils_1.clamp)(newZoomFactor, additionalBounds === null || additionalBounds === void 0 ? void 0 : additionalBounds.zoom);\n        newZoomFactor = (0, utils_1.clamp)(newZoomFactor, bounds.zoom);\n        const top = values.top;\n        exports.ViewPortMath.updateZoom(values, bounds, newZoomFactor);\n        exports.ViewPortMath.updateTopLeft(values, bounds, left, top);\n    },\n    updateBounds(values, bounds) {\n        values.zoomFactor = (0, utils_1.clamp)(values.zoomFactor, bounds.zoom);\n        const oldVirtualSpaceVisibleSpaceWidth = values.width;\n        const oldVirtualSpaceVisibleSpaceHeight = values.height;\n        values.width = values.containerWidth / values.zoomFactor;\n        values.height = values.containerHeight / values.zoomFactor;\n        values.centerX = (0, utils_1.clampCenterOfLength)(values.centerX + (values.width - oldVirtualSpaceVisibleSpaceWidth) / 2, values.width, bounds === null || bounds === void 0 ? void 0 : bounds.x);\n        values.centerY = (0, utils_1.clampCenterOfLength)(values.centerY + (values.height - oldVirtualSpaceVisibleSpaceHeight) / 2, values.height, bounds === null || bounds === void 0 ? void 0 : bounds.y);\n        values.left = values.centerX - values.width / 2;\n        values.top = values.centerY - values.height / 2;\n    },\n    // Combine these\n    updateBy(values, bounds, dx, dy, dZoom, anchorContainerX, anchorContainerY) {\n        // The math in here could probably get cleaned up...\n        const oldVirtualSpaceVisibleSpaceWidth = values.containerWidth / values.zoomFactor;\n        const oldVirtualSpaceVisibleSpaceHeight = values.containerHeight / values.zoomFactor;\n        // Basic pan handling\n        const virtualSpaceNewLeft = values.left + dx;\n        const virtualSpaceNewTop = values.top + dy;\n        if (dZoom !== undefined && dZoom !== 0) {\n            exports.ViewPortMath.updateZoom(values, bounds, values.zoomFactor + dZoom);\n        }\n        // Zoom BUT keep the view coordinate under the mouse pointer CONSTANT\n        const virtualSpaceVisibleWidthDelta = values.width - oldVirtualSpaceVisibleSpaceWidth;\n        const virtualSpaceVisibleHeightDelta = values.height - oldVirtualSpaceVisibleSpaceHeight;\n        // The reason we use x and y here is to zoom in or out towards where the\n        // pointer is positioned\n        const xFocusPercent = anchorContainerX === undefined ? 0.5 : anchorContainerX / values.containerWidth;\n        const yFocusPercent = anchorContainerY === undefined ? 0.5 : anchorContainerY / values.containerHeight;\n        values.centerX = (0, utils_1.clampCenterOfLength)(virtualSpaceNewLeft - virtualSpaceVisibleWidthDelta * xFocusPercent + values.width / 2, values.width, bounds === null || bounds === void 0 ? void 0 : bounds.x);\n        values.centerY = (0, utils_1.clampCenterOfLength)(virtualSpaceNewTop - virtualSpaceVisibleHeightDelta * yFocusPercent + values.height / 2, values.height, bounds === null || bounds === void 0 ? void 0 : bounds.y);\n        values.left = values.centerX - values.width / 2;\n        values.top = values.centerY - values.height / 2;\n    },\n    updateTopLeft(values, bounds, x, y) {\n        values.centerX = (0, utils_1.clampCenterOfLength)(x + values.width / 2, values.width, bounds.x);\n        values.centerY = (0, utils_1.clampCenterOfLength)(y + values.height / 2, values.height, bounds.y);\n        values.left = values.centerX - values.width / 2;\n        values.top = values.centerY - values.height / 2;\n    },\n    updateZoom(values, bounds, zoomFactor) {\n        if (zoomFactor !== undefined) {\n            values.zoomFactor = (0, utils_1.clamp)(zoomFactor, bounds.zoom);\n            values.width = values.containerWidth / values.zoomFactor;\n            values.height = values.containerHeight / values.zoomFactor;\n            values.left = values.centerX - values.width / 2;\n            values.top = values.centerY - values.height / 2;\n        }\n    },\n};\n//# sourceMappingURL=ViewPortMath.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ViewPortCamera = exports.Pressable = void 0;\n__exportStar(require(\"./NoPanArea\"), exports);\nvar Pressable_1 = require(\"./Pressable\");\nObject.defineProperty(exports, \"Pressable\", { enumerable: true, get: function () { return Pressable_1.Pressable; } });\n__exportStar(require(\"./PressInterpreter\"), exports);\n__exportStar(require(\"./Space\"), exports);\n__exportStar(require(\"./SpaceContext\"), exports);\n__exportStar(require(\"./ViewPort\"), exports);\nvar ViewPortCamera_1 = require(\"./ViewPortCamera\");\nObject.defineProperty(exports, \"ViewPortCamera\", { enumerable: true, get: function () { return ViewPortCamera_1.ViewPortCamera; } });\n__exportStar(require(\"./suppressBrowserZooming\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.suppressBrowserZooming = void 0;\n/**\n * This is not used by the `ViewPort`, but if you have HTML elements around the\n * `ViewPort` you may want to suppress zooming or panning on the whole page. This\n * function will do that.\n *\n * @returns A callback which will stop the suppression.\n */\nfunction suppressBrowserZooming() {\n    const handleWheel = (e) => {\n        if (e.defaultPrevented) {\n            return;\n        }\n        // We just want to suppress pinch-gestures on desktop browsers. We have to\n        // look for whether the control key is pressed in this event... for whatever\n        // reason, that can distinguish scrolling and pinching in this event.\n        if (e.ctrlKey) {\n            e.preventDefault();\n        }\n    };\n    const handleGestureStartForSafari = (e) => {\n        if (e.defaultPrevented) {\n            return;\n        }\n        e.preventDefault();\n    };\n    const handleGestureChangeForSafari = (e) => {\n        if (e.defaultPrevented) {\n            return;\n        }\n        e.preventDefault();\n    };\n    const handleTouchMove = (e) => {\n        if (e.defaultPrevented) {\n            return;\n        }\n        if (e.touches.length === 2) {\n            e.preventDefault();\n        }\n    };\n    document.addEventListener('wheel', handleWheel, { passive: false });\n    document.addEventListener('gesturestart', handleGestureStartForSafari);\n    document.addEventListener('gesturechange', handleGestureChangeForSafari);\n    document.addEventListener('touchmove', handleTouchMove, { passive: false });\n    return () => {\n        document.removeEventListener('wheel', handleWheel);\n        document.removeEventListener('gesturestart', handleGestureStartForSafari);\n        document.removeEventListener('gesturechange', handleGestureChangeForSafari);\n        document.removeEventListener('touchmove', handleTouchMove);\n    };\n}\nexports.suppressBrowserZooming = suppressBrowserZooming;\n//# sourceMappingURL=suppressBrowserZooming.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMouseEvent = exports.browserIsSafariDesktop = exports.browserIsSafari = exports.browserIsAndroid = exports.walkElementHierarchyUp = exports.transitionNumber = exports.rectContainsPoint = exports.parametricBlend = exports.easeOutQuartic = exports.clampCenterOfLength = exports.clamp = exports.generateRandomId = void 0;\nlet idSuffix = 0;\n/**\n * This id should be safe to use as a class name. So don't use any special\n * characters that CSS might get confused by.\n */\nconst generateRandomId = () => Math.random().toString(36).slice(2) + '_' + ++idSuffix;\nexports.generateRandomId = generateRandomId;\nfunction clamp(value, bounds) {\n    if (bounds) {\n        const [min, max] = bounds;\n        if (min !== undefined && value < min) {\n            return min;\n        }\n        if (max !== undefined && value > max) {\n            return max;\n        }\n    }\n    return value;\n}\nexports.clamp = clamp;\nfunction clampCenterOfLength(centerValue, \n// Length of space that the center value is in.\nlength, bounds) {\n    if (bounds) {\n        const [min, max] = bounds;\n        if (min !== undefined && max !== undefined && centerValue - length / 2 < min && centerValue + length / 2 > max) {\n            // Return center of space\n            return min + (max - min) / 2;\n        }\n        if (min !== undefined && centerValue - length / 2 < min) {\n            return min + length / 2;\n        }\n        if (max !== undefined && centerValue + length / 2 > max) {\n            return max - length / 2;\n        }\n    }\n    return centerValue;\n}\nexports.clampCenterOfLength = clampCenterOfLength;\nfunction easeOutQuartic(percent) {\n    const a = 1 - percent;\n    const b = 1 - a * a * a * a;\n    return b;\n}\nexports.easeOutQuartic = easeOutQuartic;\nfunction parametricBlend(percent) {\n    const a = percent * percent;\n    return a / (2.0 * (a - percent) + 1.0);\n}\nexports.parametricBlend = parametricBlend;\nfunction rectContainsPoint(clientRect, x, y) {\n    return clientRect.left < x && clientRect.right > x && clientRect.top < y && clientRect.bottom > y;\n}\nexports.rectContainsPoint = rectContainsPoint;\nfunction transitionNumber(start, end, percent) {\n    return start + (end - start) * percent;\n}\nexports.transitionNumber = transitionNumber;\nfunction* walkElementHierarchyUp(leafElement) {\n    let e = leafElement;\n    while (e) {\n        yield e;\n        e = e.parentElement;\n    }\n}\nexports.walkElementHierarchyUp = walkElementHierarchyUp;\nexports.browserIsAndroid = navigator.userAgent.match(/Android/);\nexports.browserIsSafari = navigator.vendor.match(/Apple/);\nexports.browserIsSafariDesktop = exports.browserIsSafari && typeof Touch === 'undefined';\nfunction isMouseEvent(e) {\n    return e.touches === undefined;\n}\nexports.isMouseEvent = isMouseEvent;\n//# sourceMappingURL=utils.js.map","import React, { Fragment, isValidElement, cloneElement } from 'react';\n\nconst urlRegex = /(https?:\\/\\/|www\\.)([-\\w.]+\\/[\\p{L}\\p{Emoji}\\p{Emoji_Component}!#$%&'\"()*+,./\\\\:;=_?@[\\]~-]*[^\\s'\",.;:\\b)\\]}?]|(([\\w-]+\\.)+[\\w-]+[\\w/-]))/u;\nconst UrlComponent = _ref => {\n  let {\n    match: url,\n    className\n  } = _ref;\n  return React.createElement(\"a\", {\n    className: className,\n    href: /^www\\./.exec(url) ? `http://${url}` : url,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, url);\n};\n\nconst twitterRegex = /\\B@([\\w_]+)/;\nconst TwitterComponent = _ref => {\n  let {\n    match,\n    className\n  } = _ref;\n  return React.createElement(\"a\", {\n    className: className,\n    href: \"https://twitter.com/\" + match.slice(1),\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, match);\n};\n\nconst jiraRegex = /[A-Z]+-\\d+/i;\nconst JiraComponent = _ref => {\n  let {\n    match,\n    domain,\n    className\n  } = _ref;\n  const [project, id] = match.split(\"-\");\n  return React.createElement(\"a\", {\n    className: className,\n    href: `${domain}/jira/software/projects/${project}/boards/${id}`,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, match);\n};\n\nconst emailRegex = /(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/;\nconst EmailComponent = _ref => {\n  let {\n    match,\n    className\n  } = _ref;\n  return React.createElement(\"a\", {\n    className: className,\n    href: \"mailto:\" + match,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, match);\n};\n\nlet key = 0;\nconst getKey = () => ++key;\n\nconst ctrlCharactersRegex = /[\\u0000-\\u001F\\u007F-\\u009F\\u2000-\\u200D\\uFEFF]/gim;\n/**\n * Make urls clickable.\n * @param text Text to parse\n * @param options {@link Options}\n */\n\nfunction linkIt(text, linkComponent, linkRegex) {\n  const elements = [];\n  let rest = text;\n\n  while (true) {\n    const match = linkRegex.exec(rest);\n    if (!match || match[0] === undefined) break;\n    const urlStartIndex = match.index;\n    const urlEndIndex = match.index + match[0].length;\n    const textBeforeMatch = rest.slice(0, urlStartIndex);\n    const url = rest.slice(urlStartIndex, urlEndIndex).replace(ctrlCharactersRegex, \"\");\n    rest = rest.slice(urlEndIndex);\n    textBeforeMatch && elements.push(textBeforeMatch);\n    elements.push(linkComponent(url, getKey()));\n  }\n\n  rest && elements.push(React.createElement(Fragment, {\n    key: getKey()\n  }, rest));\n\n  if (elements.length === 0) {\n    return text;\n  }\n\n  return elements;\n}\n\nfunction findText(children, component, regex) {\n  if (typeof children === \"string\") {\n    return linkIt(children, component, regex);\n  }\n\n  if (Array.isArray(children)) {\n    return children.map(c => findText(c, component, regex));\n  }\n\n  if (isValidElement(children) && children.props.children && children.type !== \"a\" && children.type !== \"button\") {\n    return cloneElement(children, { ...children.props,\n      key: getKey()\n    }, findText(children.props.children, component, regex));\n  }\n\n  return children;\n}\n/**\n * LinkIt component can wrapped around any React component to linkify any\n * urls\n * @example\n * ```\n * <LinkIt\n *   component={(match, key) => <a href={match} key={key}>{match}</a>}\n *   regex={regexToMatch}\n * >\n *  www.google.com<div>hi match_me</div>\n * </LinkIt>\n * ```\n */\n\n\nconst LinkIt = props => {\n  return React.createElement(Fragment, null, findText(props.children, props.component, props.regex));\n};\n/**\n * Link URLs\n */\n\nconst LinkItUrl = props => {\n  return React.createElement(Fragment, null, findText(props.children, (match, key) => React.createElement(UrlComponent, {\n    key: key,\n    match: match,\n    className: props.className\n  }), urlRegex));\n};\n/**\n * Link Twitter handles\n */\n\nconst LinkItTwitter = props => {\n  return React.createElement(Fragment, null, findText(props.children, (match, key) => React.createElement(TwitterComponent, {\n    key: key,\n    match: match,\n    className: props.className\n  }), twitterRegex));\n};\n/**\n * Link Jira tickets\n */\n\nconst LinkItJira = props => {\n  return React.createElement(Fragment, null, findText(props.children, (match, key) => React.createElement(JiraComponent, {\n    key: key,\n    match: match,\n    domain: props.domain,\n    className: props.className\n  }), jiraRegex));\n};\n/**\n * Link Emails\n */\n\nconst LinkItEmail = props => {\n  return React.createElement(Fragment, null, findText(props.children, (match, key) => React.createElement(EmailComponent, {\n    key: key,\n    match: match,\n    className: props.className\n  }), emailRegex));\n};\n\nexport { EmailComponent, JiraComponent, LinkIt, LinkItEmail, LinkItJira, LinkItTwitter, LinkItUrl, TwitterComponent, UrlComponent, emailRegex, jiraRegex, linkIt, twitterRegex, urlRegex };\n","import { __extends } from \"tslib\";\nvar genericMessage = \"Invariant Violation\";\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\n    obj.__proto__ = proto;\n    return obj;\n} : _a;\nvar InvariantError = /** @class */ (function (_super) {\n    __extends(InvariantError, _super);\n    function InvariantError(message) {\n        if (message === void 0) { message = genericMessage; }\n        var _this = _super.call(this, typeof message === \"number\"\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\n            : message) || this;\n        _this.framesToPop = 1;\n        _this.name = genericMessage;\n        setPrototypeOf(_this, InvariantError.prototype);\n        return _this;\n    }\n    return InvariantError;\n}(Error));\nexport { InvariantError };\nexport function invariant(condition, message) {\n    if (!condition) {\n        throw new InvariantError(message);\n    }\n}\nvar verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"];\nvar verbosityLevel = verbosityLevels.indexOf(\"log\");\nfunction wrapConsoleMethod(name) {\n    return function () {\n        if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n            // Default to console.log if this host environment happens not to provide\n            // all the console.* methods we need.\n            var method = console[name] || console.log;\n            return method.apply(console, arguments);\n        }\n    };\n}\n(function (invariant) {\n    invariant.debug = wrapConsoleMethod(\"debug\");\n    invariant.log = wrapConsoleMethod(\"log\");\n    invariant.warn = wrapConsoleMethod(\"warn\");\n    invariant.error = wrapConsoleMethod(\"error\");\n})(invariant || (invariant = {}));\nexport function setVerbosity(level) {\n    var old = verbosityLevels[verbosityLevel];\n    verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n    return old;\n}\nexport default invariant;\n//# sourceMappingURL=invariant.js.map","import { useRef as s, useCallback as v, useEffect as g } from \"react\";\nvar l = /* @__PURE__ */ ((e) => (e.Mouse = \"mouse\", e.Touch = \"touch\", e.Pointer = \"pointer\", e))(l || {}), d = /* @__PURE__ */ ((e) => (e.CancelledByMovement = \"cancelled-by-movement\", e.CancelledByRelease = \"cancelled-by-release\", e.CancelledOutsideElement = \"cancelled-outside-element\", e))(d || {});\nconst A = () => typeof window == \"object\" ? window?.PointerEvent ?? null : null, z = () => typeof window == \"object\" ? window?.TouchEvent ?? null : null;\nfunction U(e) {\n  const { nativeEvent: t } = e;\n  if (!t)\n    return !1;\n  const u = z();\n  return u && t instanceof u || \"touches\" in t;\n}\nfunction X(e) {\n  const t = A();\n  return e.nativeEvent instanceof MouseEvent && !(t && e.nativeEvent instanceof t);\n}\nfunction Y(e) {\n  const { nativeEvent: t } = e;\n  if (!t)\n    return !1;\n  const u = A();\n  return u && t instanceof u || \"pointerId\" in t;\n}\nfunction R(e) {\n  return X(e) || U(e) || Y(e);\n}\nfunction j(e) {\n  return U(e) ? {\n    x: e.touches[0].pageX,\n    y: e.touches[0].pageY\n  } : X(e) || Y(e) ? {\n    x: e.pageX,\n    y: e.pageY\n  } : null;\n}\nfunction G(e) {\n  return {\n    target: e.target,\n    currentTarget: e.currentTarget,\n    nativeEvent: e,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    persist: () => {\n    }\n  };\n}\nfunction J(e, {\n  threshold: t = 400,\n  captureEvent: u = !1,\n  detect: y = l.Pointer,\n  cancelOnMovement: w = !1,\n  cancelOutsideElement: h = !0,\n  filterEvents: p,\n  onStart: M,\n  onMove: C,\n  onFinish: L,\n  onCancel: b\n} = {}) {\n  const P = s(!1), c = s(!1), I = s(), a = s(), T = s(e), f = s(null), E = v(\n    (n) => (r) => {\n      c.current || R(r) && (p !== void 0 && !p(r) || (u && r.persist(), M?.(r, { context: n }), f.current = j(r), c.current = !0, I.current = r.currentTarget, a.current = setTimeout(() => {\n        T.current && (T.current(r, { context: n }), P.current = !0);\n      }, t)));\n    },\n    [u, p, M, t]\n  ), i = v(\n    (n) => (r, o) => {\n      R(r) && c.current && (f.current = null, u && r.persist(), P.current ? L?.(r, { context: n }) : c.current && b?.(r, { context: n, reason: o ?? d.CancelledByRelease }), P.current = !1, c.current = !1, a.current !== void 0 && clearTimeout(a.current));\n    },\n    [u, L, b]\n  ), m = v(\n    (n) => (r) => {\n      if (C?.(r, { context: n }), w && f.current) {\n        const o = j(r);\n        if (o) {\n          const B = w === !0 ? 25 : w, D = {\n            x: Math.abs(o.x - f.current.x),\n            y: Math.abs(o.y - f.current.y)\n          };\n          (D.x > B || D.y > B) && i(n)(r, d.CancelledByMovement);\n        }\n      }\n    },\n    [i, w, C]\n  ), q = v(\n    (n) => {\n      if (e === null)\n        return {};\n      switch (y) {\n        case l.Mouse: {\n          const r = {\n            onMouseDown: E(n),\n            onMouseMove: m(n),\n            onMouseUp: i(n)\n          };\n          return h && (r.onMouseLeave = (o) => {\n            i(n)(o, d.CancelledOutsideElement);\n          }), r;\n        }\n        case l.Touch:\n          return {\n            onTouchStart: E(n),\n            onTouchMove: m(n),\n            onTouchEnd: i(n)\n          };\n        case l.Pointer: {\n          const r = {\n            onPointerDown: E(n),\n            onPointerMove: m(n),\n            onPointerUp: i(n)\n          };\n          return h && (r.onPointerLeave = (o) => i(n)(o, d.CancelledOutsideElement)), r;\n        }\n      }\n    },\n    [e, i, h, y, m, E]\n  );\n  return g(() => {\n    if (!window)\n      return;\n    function n(r) {\n      const o = G(r);\n      i()(o);\n    }\n    return window.addEventListener(\"mouseup\", n), window.addEventListener(\"touchend\", n), window.addEventListener(\"pointerup\", n), () => {\n      window.removeEventListener(\"mouseup\", n), window.removeEventListener(\"touchend\", n), window.removeEventListener(\"pointerup\", n);\n    };\n  }, [i]), g(\n    () => () => {\n      a.current !== void 0 && clearTimeout(a.current);\n    },\n    []\n  ), g(() => {\n    T.current = e;\n  }, [e]), q;\n}\nexport {\n  d as LongPressCallbackReason,\n  l as LongPressEventType,\n  J as useLongPress\n};\n"],"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","useStyles","create_styles","k","theme","radius","size","overlayColor","colorScheme","colors","dark","gray","root","fn","focusStyles","width","rem","h","height","WebkitTapHighlightColor","border","borderRadius","appearance","WebkitAppearance","padding","position","overflow","overlay","cover","children","display","justifyContent","alignItems","shadowOverlay","boxShadow","zIndex","alphaOverlay","backgroundImage","white","backgroundSize","backgroundPosition","ColorSwatch_defProp","ColorSwatch_getOwnPropSymbols","ColorSwatch_hasOwnProp","ColorSwatch_propIsEnum","ColorSwatch_defNormalProp","ColorSwatch_spreadValues","__objRest","source","exclude","target","indexOf","defaultProps","withShadow","_ColorSwatch","react","forwardRef","props","ref","_a","MantineProvider","N4","color","className","classNames","styles","unstyled","variant","others","classes","cx","ColorSwatch_styles","name","createElement","Box","x","style","backgroundColor","displayName","ColorSwatch","create_polymorphic_component","F","element","weight","inline","fontStyles","fontFamily","headings","fontWeight","sizes","fontSize","lineHeight","margin","Title_defProp","Title_getOwnPropSymbols","Title_hasOwnProp","Title_propIsEnum","Title_defNormalProp","Title_spreadValues","order","Title","Title_styles","includes","Text","component","__WEBPACK_AMD_DEFINE_RESULT__","window","document","exportName","undefined","assign","VENDOR_PREFIXES","TEST_ELEMENT","round","Math","abs","now","Date","setTimeoutContext","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","iterator","i","forEach","length","deprecate","method","message","deprecationMessage","e","stack","replace","log","console","warn","apply","arguments","output","index","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","create","constructor","_super","boolOrFn","val","args","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","push","prefixed","property","prefix","camelProp","toUpperCase","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","session","pointers","pointersLength","firstInput","firstMultiple","offsetCenter","center","offset","prevDelta","prevInput","overallVelocity","start","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","simpleCloneInputData","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offsetDelta","deltaX","y","deltaY","offsetDirection","getDirection","getVelocity","overallVelocityX","overallVelocityY","scale","end","rotation","maxPointers","computeIntervalInputData","velocity","velocityX","velocityY","direction","last","lastInterval","v","srcEvent","emit","recognize","clientX","clientY","p1","p2","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","toLowerCase","storeIndex","pointerId","INPUT_END","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isTouch","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","getTouchActionProps","touchMap","cssSupports","CSS","supports","TouchAction","set","Recognizer","val1","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","val2","recognizers","preset","Manager","inputClass","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","cssProps","compute","actions","update","getTouchAction","cleanTouchActions","hasPanX","hasPanY","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","STATE_RECOGNIZED","process","STATE_BEGAN","attrTest","optionPointers","isRecognized","isValid","threshold","DIRECTION_HORIZONTAL","DIRECTION_LEFT","DIRECTION_UP","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","INPUT_START","INPUT_MOVE","INPUT_CANCEL","STATE_POSSIBLE","STATE_CHANGED","STATE_ENDED","STATE_CANCELLED","STATE_FAILED","DIRECTION_NONE","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_ALL","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","exports","__webpack_require__","module","ElementSizeChangePoller","onSizeChanged","timerId","oldSize","getBoundingClientRect","setInterval","clearInterval","polling","getInteractableIdMostApplicableToElement","InteractableIdAttributeName","utils_1","outerContainerClassName","walkElementHierarchyUp","classList","contains","getAttribute","__createBinding","o","m","k2","desc","getOwnPropertyDescriptor","__esModule","__setModuleDefault","__importStar","mod","result","NoPanArea","React","Interactable_1","SpaceContext_1","PureComponent","generateRandomId","divRef","createRef","uniqueClassName","determineClassName","constantStyles","rootDivUniqueClassName","componentDidMount","registerInteractable","componentWillUnmount","unregisterInteractable","render","Fragment","contextType","SpaceContext","__importDefault","PressInterpreter","ts_invariant_1","onDecideHowToHandlePress","handleCapturePressThresholdMet","_b","capturePressTimerId","currentPressCapturedForHandler","default","currentPressLastCoordinates","currentConfig","onCapturePressStart","currentPressLongPressThresholdMet","longPressTimerId","handleLongPressThresholdMet","onPotentialLongTap","handlePressStart","coordinates","currentPressStartingCoordinates","ignorePressEntirely","capturePressThresholdMs","onTap","onPotentialTap","longTapThresholdMs","handlePressMove","_c","_d","_e","oldCoordinates","onCapturePressMove","clientXDelta","clientYDelta","containerXDelta","containerX","containerYDelta","containerY","xDelta","yDelta","maxDeltaAllowed","potentialTapBounds","onTapAbandoned","handlePressEnd","_f","onCapturePressEnd","onLongTap","handlePressCancel","onCapturePressCancelled","pressHandlers","onPressStart","onPressMove","onPressEnd","onPressCancel","Pressable","interaction","hovered","disabled","disabledClassName","potentialTapClassName","potentialLongTapClassName","capturePressClassName","hoverClassName","determineStyle","disabledStyle","potentialTapStyle","potentialLongTapStyle","capturePressStyle","hoverStyle","handleCapturePressStart","setState","panStartingCoordinates","current","handleCapturePressMove","handleCapturePressEnd","handleCapturePressCancelled","handleTapAbandoned","handleLongTap","handlePotentialLongTap","handlePotentialTap","handleTap","getPressHandlingConfig","setHovered","Space","ElementSizeChangePoller_1","NoPanArea_1","Pressable_1","PressInterpreter_1","ViewPort_1","updateSize","viewPort","updateContainerSize","createTransformStyle","transform","zoomFactor","left","top","destroyViewPort","outerDivRef","handleDragStart","elementSizeChangePoller","interactableId","interactable","interactableRegistry","handleDecideHowToHandlePress","elementTagName","tagName","handleHover","currentHoveredPressable","onHover","handleContextMenu","onContextMenu","browserIsAndroid","handleViewPortUpdated","transformStyle","onUpdated","setOuterDivRefAndCreateViewPort","ViewPort","pressInterpreter","treatTwoFingerTrackPadGesturesLikeTouch","onCreate","pollForElementResizing","contextValue","delete","Map","componentDidUpdate","prevProps","transformedDivStyle","innerDivStyle","Provider","innerDivClassName","createContext","hammerjs_1","ViewPortCamera_1","containerDiv","getPressCoordinatesFromEvent","isMouseEvent","clientBoundingRect","debugEvents","treatRightClickAsPan","handleGestureStartForDesktopSafari","currentDesktopSafariGestureState","startingCenterX","startingCenterY","handleGestureChangeForDesktopSafari","pointerContainerX","pointerContainerY","dZoom","camera","moveByInClientSpace","handleGestureEndForDesktopSafari","handleHammerPanStart","currentHammerGestureState","handleHammerPanMove","pressHandlingMode","handleHammerPanEnd","moveWithDecelerationInClientSpace","handleHammerPanCancel","handleHammerPinchStart","handleHammerPinchMove","handleHammerPinchEnd","handleHammerPinchCancel","handleMouseDown","isLeftOnly","buttons","isRightOnly","shouldHandleAsPan","rightClickPanState","lastClientX","lastClientY","handleMouseMove","handleMouseUp","handleTouchStart","handleTouchMove","handleTouchEnd","handleWheel","isPrimarilyZoom","ctrlKey","deltaMode","innerHeight","containerHeight","centerX","centerY","containerWidth","setBounds","bind","translateClientXYCoordinatesToVirtualSpace","translateClientRectToVirtualSpace","ViewPortCamera","passive","browserIsSafariDesktop","hammer","bounds","rectOrElement","rect","right","bottom","handleContainerSizeChanged","StopAnimationKind","ViewPortMath_1","DEFAULT_BOUNDS","getElementVirtualSpaceCoordinates","copyValues","to","dealWithBoundsChanges","derivedBounds","ViewPortMath","deriveActualZoomBounds","workingValues","updateBounds","doImmediateUpdate","handleAnimationFrame","animationFrameId","animation","startingTimeMilliseconds","completionPercent","durationMilliseconds","advanceCurrentAnimation","requestAnimationFrame","zoom","centerFitAreaIntoView","area","additionalBounds","animationOptions","stopCurrentAnimation","INTERRUPT","updateTarget","centerFitArea","scheduleAnimation","centerFitElementIntoView","elementExtraMarginForZoom","elementExtraMarginForZoomInClientSpace","additionalMargin","centerFitHorizontalAreaIntoView","centerFitHorizontalArea","cancelAnimationFrame","moveBy","anchorContainerX","anchorContainerY","updateBy","moveWithDeceleration","vx","vy","friction","preventInterruption","finalFriction","min","currentVX","currentVY","animationFramesNeeded","FORCE","wasZeroWidthHeightCenter","recenter","newZoomFactor","updateZoom","updateTopLeft","setBoundsToContainer","percent","targetValues","tv","startingValues","sv","xyModifiedPercent","easeOutQuartic","transitionNumber","zModifiedPercent","parametricBlend","dz","invariant","stopKind","defaultZoomBounds","max","space","zoomFactorBasedOnWidth","zoomFactorBasedOnHeight","clamp","cy","oldVirtualSpaceVisibleSpaceWidth","oldVirtualSpaceVisibleSpaceHeight","clampCenterOfLength","virtualSpaceNewLeft","virtualSpaceNewTop","virtualSpaceVisibleWidthDelta","virtualSpaceVisibleHeightDelta","xFocusPercent","yFocusPercent","__exportStar","p","suppressBrowserZooming","defaultPrevented","handleGestureStartForSafari","handleGestureChangeForSafari","browserIsSafari","rectContainsPoint","idSuffix","random","toString","centerValue","clientRect","leafElement","parentElement","match","vendor","Touch","urlRegex","UrlComponent","_ref","url","react__WEBPACK_IMPORTED_MODULE_0__","href","exec","rel","getKey","ctrlCharactersRegex","LinkItUrl","findText","regex","linkIt","text","linkComponent","linkRegex","elements","rest","urlStartIndex","urlEndIndex","textBeforeMatch","map","c","isValidElement","cloneElement","genericMessage","setPrototypeOf","proto","__proto__","InvariantError","_this","framesToPop","tslib__WEBPACK_IMPORTED_MODULE_0__","ZT","Error","condition","verbosityLevels","verbosityLevel","wrapConsoleMethod","setVerbosity","level","old","debug","error","__webpack_exports__","l","Mouse","Pointer","d","CancelledByMovement","CancelledByRelease","CancelledOutsideElement","A","z","TouchEvent","U","nativeEvent","u","X","MouseEvent","Y","R","j","pageX","pageY","J","captureEvent","detect","cancelOnMovement","w","cancelOutsideElement","filterEvents","onStart","M","onMove","C","onFinish","L","onCancel","P","useRef","I","T","f","E","useCallback","r","persist","n","currentTarget","reason","B","D","q","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","onPointerDown","onPointerMove","onPointerUp","onPointerLeave","useEffect"],"sourceRoot":""}