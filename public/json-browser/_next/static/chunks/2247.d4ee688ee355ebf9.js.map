{"version":3,"file":"static/chunks/2247.d4ee688ee355ebf9.js","mappings":"seAOO,IAAMA,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAAOC,EAAAA,EAASA,EAAAA,UAAAA,CAAAA,mCAG5B,OAAC,CAAEC,MAAAA,CAAK,CAAE,CAAAC,SAAKD,EAAME,oBAAoB,GAQnDC,EAAaC,IAAQ,IAAMC,QAAAC,GAAA,EAAAC,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,OAA0C,wCACzEI,IAAK,KAGDC,EAAaR,IAAQ,IAAMC,QAAAC,GAAA,EAAAC,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,OAA0C,wCACzEI,IAAK,IA6BPE,CAAAA,EAAA,QA1BwB,KACtB,IAAMC,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,EAASC,GAASA,EAAMF,UAAU,EAC/CG,EAAmBF,CAAAA,EAAAA,EAAAA,CAAAA,EAASC,GAASA,EAAMC,gBAAgB,EAC3DC,EAAWC,EAAAA,OAAa,CAAC,IAAMC,OAAOC,UAAU,EAAI,IAAK,EAAE,EAMjE,OAJAF,EAAAA,SAAe,CAAC,KACVD,GAAUD,EAAiB,GACjC,EAAG,CAACC,EAAUD,EAAiB,EAG7B,GAAAK,EAAAC,IAAA,EAAC1B,EAAAA,CAAa2B,mBAAoB,GAAOC,SAAUP,YACjD,GAAAI,EAAAI,GAAA,EAAC3B,EAAAA,EAASA,CAAC4B,IAAI,EACbC,cAAeV,EAAW,OAAS,IACnCW,QAASf,EAAa,EAAI,IAC1BgB,QAASZ,EAAWa,IAAW,IAC/BC,QAAS,CAAClB,WAEV,GAAAQ,EAAAI,GAAA,EAACvB,EAAAA,CAAAA,KAEH,GAAAmB,EAAAI,GAAA,EAAC3B,EAAAA,EAASA,CAAC4B,IAAI,EAACE,QAAS,EAAGC,QAASZ,GAAY,CAACJ,EAAa,EAAIiB,aACjE,GAAAT,EAAAI,GAAA,EAACd,EAAAA,CAAAA,OAIT","sources":["webpack://_N_E/./src/containers/Editor/Panes.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React from \"react\";\nimport dynamic from \"next/dynamic\";\nimport styled from \"styled-components\";\nimport { Allotment } from \"allotment\";\nimport \"allotment/dist/style.css\";\nimport useGraph from \"src/store/useGraph\";\n\nexport const StyledEditor = styled(Allotment)`\n  position: relative !important;\n  display: flex;\n  background: ${({ theme }) => theme.BACKGROUND_SECONDARY};\n  height: calc(100vh - 63px);\n\n  @media only screen and (max-width: 320px) {\n    height: 100vh;\n  }\n`;\n\nconst JsonEditor = dynamic(() => import(\"src/containers/Editor/JsonEditor\"), {\n  ssr: false,\n});\n\nconst LiveEditor = dynamic(() => import(\"src/containers/Editor/LiveEditor\"), {\n  ssr: false,\n});\n\nconst Panes: React.FC = () => {\n  const fullscreen = useGraph(state => state.fullscreen);\n  const toggleFullscreen = useGraph(state => state.toggleFullscreen);\n  const isMobile = React.useMemo(() => window.innerWidth <= 768, []);\n\n  React.useEffect(() => {\n    if (isMobile) toggleFullscreen(true);\n  }, [isMobile, toggleFullscreen]);\n\n  return (\n    <StyledEditor proportionalLayout={false} vertical={isMobile}>\n      <Allotment.Pane\n        preferredSize={isMobile ? \"100%\" : 450}\n        minSize={fullscreen ? 0 : 300}\n        maxSize={isMobile ? Infinity : 800}\n        visible={!fullscreen}\n      >\n        <JsonEditor />\n      </Allotment.Pane>\n      <Allotment.Pane minSize={0} maxSize={isMobile && !fullscreen ? 0 : Infinity}>\n        <LiveEditor />\n      </Allotment.Pane>\n    </StyledEditor>\n  );\n};\n\nexport default Panes;\n"],"names":["StyledEditor","styled","Allotment","theme","param","BACKGROUND_SECONDARY","JsonEditor","dynamic","Promise","all","__webpack_require__","e","then","bind","ssr","LiveEditor","__webpack_exports__","fullscreen","useGraph","state","toggleFullscreen","isMobile","React","window","innerWidth","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","proportionalLayout","vertical","jsx","Pane","preferredSize","minSize","maxSize","Infinity","visible"],"sourceRoot":""}