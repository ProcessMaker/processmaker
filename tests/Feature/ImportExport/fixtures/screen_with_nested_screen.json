[{
    "name": "Test",
    "items": [{
        "label": "Checkbox",
        "config": {
            "icon": "fas fa-check-square",
            "name": "load_script",
            "label": "load_script",
            "helper": null,
            "toggle": false,
            "disabled": false,
            "validation": [],
            "initiallyChecked": false
        },
        "component": "FormCheckbox",
        "inspector": [{
            "type": "FormInput",
            "field": "name",
            "config": {
                "name": "Variable Name",
                "label": "Variable Name",
                "helper": "A variable name is a symbolic name to reference information.",
                "validation": "regex:/^([a-zA-Z]([a-zA-Z0-9_]?)+\\.?)+(?<!\\.)$/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
            }
        }, {
            "type": "FormInput",
            "field": "label",
            "config": {
                "label": "Label",
                "helper": "The label describes the field's name"
            }
        }, {
            "type": "FormInput",
            "field": "helper",
            "config": {
                "label": "Helper Text",
                "helper": "Help text is meant to provide additional guidance on the field's value"
            }
        }, {
            "type": "ValidationSelect",
            "field": "validation",
            "config": {
                "label": "Validation Rules",
                "helper": "The validation rules needed for this field"
            }
        }, {
            "type": "FormCheckbox",
            "field": "initiallyChecked",
            "config": {
                "label": "Checked by default",
                "helper": "Should the checkbox be checked by default"
            }
        }, {
            "type": "ColorSelect",
            "field": "color",
            "config": {
                "label": "Text Color",
                "helper": "Set the element's text color",
                "options": [{
                    "value": "text-primary",
                    "content": "primary"
                }, {
                    "value": "text-secondary",
                    "content": "secondary"
                }, {
                    "value": "text-success",
                    "content": "success"
                }, {
                    "value": "text-danger",
                    "content": "danger"
                }, {
                    "value": "text-warning",
                    "content": "warning"
                }, {
                    "value": "text-info",
                    "content": "info"
                }, {
                    "value": "text-light",
                    "content": "light"
                }, {
                    "value": "text-dark",
                    "content": "dark"
                }]
            }
        }, {
            "type": "ColorSelect",
            "field": "bgcolor",
            "config": {
                "label": "Background Color",
                "helper": "Set the element's background color",
                "options": [{
                    "value": "alert alert-primary",
                    "content": "primary"
                }, {
                    "value": "alert alert-secondary",
                    "content": "secondary"
                }, {
                    "value": "alert alert-success",
                    "content": "success"
                }, {
                    "value": "alert alert-danger",
                    "content": "danger"
                }, {
                    "value": "alert alert-warning",
                    "content": "warning"
                }, {
                    "value": "alert alert-info",
                    "content": "info"
                }, {
                    "value": "alert alert-light",
                    "content": "light"
                }, {
                    "value": "alert alert-dark",
                    "content": "dark"
                }]
            }
        }, {
            "type": "FormCheckbox",
            "field": "toggle",
            "config": {
                "label": "Toggle Style",
                "helper": null
            }
        }, {
            "type": "FormCheckbox",
            "field": "disabled",
            "config": {
                "label": "Read Only",
                "helper": null
            }
        }, {
            "type": "FormInput",
            "field": "conditionalHide",
            "config": {
                "label": "Visibility Rule",
                "helper": "This control is hidden until this expression is true"
            }
        }, {
            "type": "FormInput",
            "field": "customFormatter",
            "config": {
                "label": "Custom Format String",
                "helper": "Use the Mask Pattern format <br> Date ##/##/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                "validation": null
            }
        }, {
            "type": "FormInput",
            "field": "customCssSelector",
            "config": {
                "label": "CSS Selector Name",
                "helper": "Use this in your custom css rules",
                "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
            }
        }, {
            "type": "FormInput",
            "field": "ariaLabel",
            "config": {
                "label": "Aria Label",
                "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
            }
        }, {
            "type": "FormInput",
            "field": "tabindex",
            "config": {
                "label": "Tab Order",
                "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                "validation": "regex: [0-9]*"
            }
        }],
        "editor-control": "FormCheckbox",
        "editor-component": "FormCheckbox"
    }, {
        "label": "Checkbox",
        "config": {
            "icon": "fas fa-check-square",
            "name": "load_ds",
            "label": "load_ds",
            "helper": null,
            "toggle": false,
            "disabled": false,
            "validation": [],
            "initiallyChecked": false
        },
        "component": "FormCheckbox",
        "inspector": [{
            "type": "FormInput",
            "field": "name",
            "config": {
                "name": "Variable Name",
                "label": "Variable Name",
                "helper": "A variable name is a symbolic name to reference information.",
                "validation": "regex:/^([a-zA-Z]([a-zA-Z0-9_]?)+\\.?)+(?<!\\.)$/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
            }
        }, {
            "type": "FormInput",
            "field": "label",
            "config": {
                "label": "Label",
                "helper": "The label describes the field's name"
            }
        }, {
            "type": "FormInput",
            "field": "helper",
            "config": {
                "label": "Helper Text",
                "helper": "Help text is meant to provide additional guidance on the field's value"
            }
        }, {
            "type": "ValidationSelect",
            "field": "validation",
            "config": {
                "label": "Validation Rules",
                "helper": "The validation rules needed for this field"
            }
        }, {
            "type": "FormCheckbox",
            "field": "initiallyChecked",
            "config": {
                "label": "Checked by default",
                "helper": "Should the checkbox be checked by default"
            }
        }, {
            "type": "ColorSelect",
            "field": "color",
            "config": {
                "label": "Text Color",
                "helper": "Set the element's text color",
                "options": [{
                    "value": "text-primary",
                    "content": "primary"
                }, {
                    "value": "text-secondary",
                    "content": "secondary"
                }, {
                    "value": "text-success",
                    "content": "success"
                }, {
                    "value": "text-danger",
                    "content": "danger"
                }, {
                    "value": "text-warning",
                    "content": "warning"
                }, {
                    "value": "text-info",
                    "content": "info"
                }, {
                    "value": "text-light",
                    "content": "light"
                }, {
                    "value": "text-dark",
                    "content": "dark"
                }]
            }
        }, {
            "type": "ColorSelect",
            "field": "bgcolor",
            "config": {
                "label": "Background Color",
                "helper": "Set the element's background color",
                "options": [{
                    "value": "alert alert-primary",
                    "content": "primary"
                }, {
                    "value": "alert alert-secondary",
                    "content": "secondary"
                }, {
                    "value": "alert alert-success",
                    "content": "success"
                }, {
                    "value": "alert alert-danger",
                    "content": "danger"
                }, {
                    "value": "alert alert-warning",
                    "content": "warning"
                }, {
                    "value": "alert alert-info",
                    "content": "info"
                }, {
                    "value": "alert alert-light",
                    "content": "light"
                }, {
                    "value": "alert alert-dark",
                    "content": "dark"
                }]
            }
        }, {
            "type": "FormCheckbox",
            "field": "toggle",
            "config": {
                "label": "Toggle Style",
                "helper": null
            }
        }, {
            "type": "FormCheckbox",
            "field": "disabled",
            "config": {
                "label": "Read Only",
                "helper": null
            }
        }, {
            "type": "FormInput",
            "field": "conditionalHide",
            "config": {
                "label": "Visibility Rule",
                "helper": "This control is hidden until this expression is true"
            }
        }, {
            "type": "FormInput",
            "field": "customFormatter",
            "config": {
                "label": "Custom Format String",
                "helper": "Use the Mask Pattern format <br> Date ##/##/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                "validation": null
            }
        }, {
            "type": "FormInput",
            "field": "customCssSelector",
            "config": {
                "label": "CSS Selector Name",
                "helper": "Use this in your custom css rules",
                "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
            }
        }, {
            "type": "FormInput",
            "field": "ariaLabel",
            "config": {
                "label": "Aria Label",
                "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
            }
        }, {
            "type": "FormInput",
            "field": "tabindex",
            "config": {
                "label": "Tab Order",
                "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                "validation": "regex: [0-9]*"
            }
        }],
        "editor-control": "FormCheckbox",
        "editor-component": "FormCheckbox"
    }, {
        "label": "Nested Screen",
        "config": {
            "icon": "fas fa-file-invoice",
            "name": "Nested Screen",
            "label": "Nested Screen",
            "value": null,
            "screen": 3,
            "variant": "primary"
        },
        "component": "FormNestedScreen",
        "inspector": [{
            "type": "ScreenSelector",
            "field": "screen",
            "config": {
                "name": "SelectScreen",
                "label": "Screen",
                "helper": "Select a screen",
                "validate-nested": false
            }
        }, {
            "type": "FormInput",
            "field": "conditionalHide",
            "config": {
                "label": "Visibility Rule",
                "helper": "This control is hidden until this expression is true"
            }
        }, {
            "type": "FormInput",
            "field": "customFormatter",
            "config": {
                "label": "Custom Format String",
                "helper": "Use the Mask Pattern format <br> Date ##/##/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                "validation": null
            }
        }, {
            "type": "FormInput",
            "field": "customCssSelector",
            "config": {
                "label": "CSS Selector Name",
                "helper": "Use this in your custom css rules",
                "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
            }
        }, {
            "type": "FormInput",
            "field": "ariaLabel",
            "config": {
                "label": "Aria Label",
                "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
            }
        }, {
            "type": "FormInput",
            "field": "tabindex",
            "config": {
                "label": "Tab Order",
                "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                "validation": "regex: [0-9]*"
            }
        }],
        "editor-control": "FormNestedScreen",
        "editor-component": "FormNestedScreen"
    }, {
        "label": "Submit Button",
        "config": {
            "icon": "fas fa-share-square",
            "name": null,
            "event": "submit",
            "label": "New Submit",
            "tooltip": [],
            "variant": "primary",
            "fieldValue": null,
            "defaultSubmit": true
        },
        "component": "FormButton",
        "inspector": [{
            "type": "FormInput",
            "field": "label",
            "config": {
                "label": "Label",
                "helper": "The label describes the button's text"
            }
        }, {
            "type": "FormInput",
            "field": "name",
            "config": {
                "name": "Variable Name",
                "label": "Variable Name",
                "helper": "A variable name is a symbolic name to reference information.",
                "validation": "regex:/^(?:[A-Za-z])(?:[0-9A-Z_.a-z])*(?<![.])$/|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
            }
        }, {
            "type": "FormMultiselect",
            "field": "event",
            "config": {
                "label": "Type",
                "helper": "Choose whether the button should submit the form",
                "options": [{
                    "value": "submit",
                    "content": "Submit Button"
                }, {
                    "value": "script",
                    "content": "Regular Button"
                }]
            }
        }, {
            "type": {
                "props": ["label", "value", "helper"],
                "watch": {
                    "value": {
                        "immediate": true
                    }
                },
                "methods": [],
                "computed": [],
                "_compiled": true,
                "inheritAttrs": false,
                "staticRenderFns": []
            },
            "field": "tooltip",
            "config": {
                "label": "Tooltip"
            }
        }, {
            "type": "FormInput",
            "field": "fieldValue",
            "config": {
                "label": "Value",
                "helper": "The value being submitted"
            }
        }, {
            "type": "FormMultiselect",
            "field": "variant",
            "config": {
                "label": "Button Variant Style",
                "helper": "The variant determines the appearance of the button",
                "options": [{
                    "value": "primary",
                    "content": "Primary"
                }, {
                    "value": "secondary",
                    "content": "Secondary"
                }, {
                    "value": "success",
                    "content": "Success"
                }, {
                    "value": "danger",
                    "content": "Danger"
                }, {
                    "value": "warning",
                    "content": "Warning"
                }, {
                    "value": "info",
                    "content": "Info"
                }, {
                    "value": "light",
                    "content": "Light"
                }, {
                    "value": "dark",
                    "content": "Dark"
                }, {
                    "value": "link",
                    "content": "Link"
                }]
            }
        }, {
            "type": "FormInput",
            "field": "conditionalHide",
            "config": {
                "label": "Visibility Rule",
                "helper": "This control is hidden until this expression is true"
            }
        }, {
            "type": "FormInput",
            "field": "customFormatter",
            "config": {
                "label": "Custom Format String",
                "helper": "Use the Mask Pattern format <br> Date ##/##/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                "validation": null
            }
        }, {
            "type": "FormInput",
            "field": "customCssSelector",
            "config": {
                "label": "CSS Selector Name",
                "helper": "Use this in your custom css rules",
                "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
            }
        }, {
            "type": "FormInput",
            "field": "ariaLabel",
            "config": {
                "label": "Aria Label",
                "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
            }
        }, {
            "type": "FormInput",
            "field": "tabindex",
            "config": {
                "label": "Tab Order",
                "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                "validation": "regex: [0-9]*"
            }
        }],
        "editor-control": "FormSubmit",
        "editor-component": "FormButton"
    }]
}]