{
    "type": "process_package",
    "version": "1",
    "process": {
        "id": 45,
        "process_category_id": "2",
        "user_id": 1,
        "description": "Different Task Assignments",
        "name": "Different Task Assignments",
        "cancel_screen_id": null,
        "request_detail_screen_id": null,
        "status": "ACTIVE",
        "is_valid": 1,
        "package_key": null,
        "pause_timer_start": 0,
        "deleted_at": null,
        "created_at": "2021-08-19T16:35:08+00:00",
        "updated_at": "2021-12-07T13:08:42+00:00",
        "start_events": [
            {
                "id": "node_1",
                "name": "Start Event",
                "config": "{\"web_entry\":null}",
                "ownerProcessId": "ProcessId",
                "eventDefinitions": [],
                "ownerProcessName": "ProcessName",
                "allowInterstitial": "true",
                "interstitialScreenRef": "68"
            }
        ],
        "warnings": null,
        "self_service_tasks": {
            "node_7": {
                "users": [
                    ""
                ],
                "groups": [
                    ""
                ]
            }
        },
        "signal_events": [],
        "conditional_events": [],
        "properties": {
            "manager_id": null,
            "manager_can_cancel_request": false
        },
        "has_timer_start_events": false,
        "notifications": {
            "requester": {
                "started": false,
                "canceled": false,
                "completed": false
            },
            "assignee": {
                "started": false,
                "canceled": false,
                "completed": false
            },
            "participants": {
                "started": false,
                "canceled": false,
                "completed": false
            },
            "manager": {
                "started": false,
                "canceled": false,
                "completed": false
            }
        },
        "task_notifications": {},
        "bpmn": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:pm=\"http://processmaker.com/BPMN/2.0/Schema.xsd\" xmlns:tns=\"http://sourceforge.net/bpmn/definitions/_1530553328908\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"http://bpmn.io/schema/bpmn\" exporter=\"ProcessMaker Modeler\" exporterVersion=\"1.0\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://bpmn.sourceforge.net/schemas/BPMN20.xsd\">\n  <bpmn:process id=\"ProcessId\" name=\"ProcessName\" isExecutable=\"true\">\n    <bpmn:startEvent id=\"node_1\" name=\"Start Event\" pm:allowInterstitial=\"true\" pm:interstitialScreenRef=\"68\" pm:config=\"{&quot;web_entry&quot;:null}\">\n      <bpmn:outgoing>node_6</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"node_2\" name=\"FormByUserGroup\" pm:screenRef=\"13\" pm:allowInterstitial=\"true\" pm:interstitialScreenRef=\"68\" pm:assignmentLock=\"false\" pm:allowReassignment=\"false\" pm:config=\"{&quot;reactions&quot;:false,&quot;voting&quot;:false,&quot;edit_comments&quot;:false,&quot;remove_comments&quot;:false,&quot;web_entry&quot;:null,&quot;email_notifications&quot;:{&quot;notifications&quot;:[]}}\">\n      <bpmn:incoming>node_6</bpmn:incoming>\n      <bpmn:outgoing>node_16</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:task id=\"node_3\" name=\"FormTaskByUserID\" pm:screenRef=\"13\" pm:allowInterstitial=\"false\" pm:assignment=\"user_by_id\" pm:assignedUsers=\"{{ 1 }}\" pm:assignmentLock=\"false\" pm:allowReassignment=\"false\" pm:config=\"{&quot;reactions&quot;:false,&quot;voting&quot;:false,&quot;edit_comments&quot;:false,&quot;remove_comments&quot;:false,&quot;web_entry&quot;:null,&quot;email_notifications&quot;:{&quot;notifications&quot;:[]}}\">\n      <bpmn:incoming>node_20</bpmn:incoming>\n      <bpmn:outgoing>node_22</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:endEvent id=\"node_4\" name=\"End Event\">\n      <bpmn:incoming>node_26</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"node_6\" name=\"\" sourceRef=\"node_1\" targetRef=\"node_2\"/>\n    <bpmn:task id=\"node_5\" name=\"FormTaskByRequestStarter\" pm:screenRef=\"13\" pm:allowInterstitial=\"false\" pm:assignment=\"requester\" pm:assignmentLock=\"false\" pm:allowReassignment=\"false\">\n      <bpmn:incoming>node_18</bpmn:incoming>\n      <bpmn:outgoing>node_20</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:task id=\"node_7\" name=\"FormTaskBySelfService\" pm:screenRef=\"13\" pm:allowInterstitial=\"false\" pm:assignment=\"self_service\" pm:assignmentLock=\"false\" pm:allowReassignment=\"false\">\n      <bpmn:incoming>node_22</bpmn:incoming>\n      <bpmn:outgoing>node_24</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:task id=\"node_13\" name=\"FormTaskByProcessManager\" pm:screenRef=\"13\" pm:allowInterstitial=\"false\" pm:assignment=\"process_manager\" pm:assignmentLock=\"false\" pm:allowReassignment=\"false\" pm:assignmentRules=\"[]\">\n      <bpmn:incoming>node_24</bpmn:incoming>\n      <bpmn:outgoing>node_26</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:task id=\"node_14\" name=\"FormTaskPreviousTaskAssignee\" pm:screenRef=\"13\" pm:allowInterstitial=\"false\" pm:assignment=\"previous_task_assignee\" pm:assignmentLock=\"false\" pm:allowReassignment=\"false\">\n      <bpmn:incoming>node_16</bpmn:incoming>\n      <bpmn:outgoing>node_18</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:sequenceFlow id=\"node_16\" sourceRef=\"node_2\" targetRef=\"node_14\"/>\n    <bpmn:sequenceFlow id=\"node_18\" sourceRef=\"node_14\" targetRef=\"node_5\"/>\n    <bpmn:sequenceFlow id=\"node_20\" sourceRef=\"node_5\" targetRef=\"node_3\"/>\n    <bpmn:sequenceFlow id=\"node_22\" sourceRef=\"node_3\" targetRef=\"node_7\"/>\n    <bpmn:sequenceFlow id=\"node_24\" sourceRef=\"node_7\" targetRef=\"node_13\"/>\n    <bpmn:sequenceFlow id=\"node_26\" sourceRef=\"node_13\" targetRef=\"node_4\"/>\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagramId\">\n    <bpmndi:BPMNPlane id=\"BPMNPlaneId\" bpmnElement=\"ProcessId\">\n      <bpmndi:BPMNShape id=\"node_1_di\" bpmnElement=\"node_1\">\n        <dc:Bounds x=\"110\" y=\"230\" width=\"36\" height=\"36\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"node_2_di\" bpmnElement=\"node_2\">\n        <dc:Bounds x=\"190\" y=\"210\" width=\"116\" height=\"76\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"node_3_di\" bpmnElement=\"node_3\">\n        <dc:Bounds x=\"630\" y=\"210\" width=\"116\" height=\"76\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"node_4_di\" bpmnElement=\"node_4\">\n        <dc:Bounds x=\"1080\" y=\"230\" width=\"36\" height=\"36\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"node_6_di\" bpmnElement=\"node_6\">\n        <di:waypoint x=\"128\" y=\"248\"/>\n        <di:waypoint x=\"248\" y=\"248\"/>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNShape id=\"node_5_di\" bpmnElement=\"node_5\">\n        <dc:Bounds x=\"480\" y=\"210\" width=\"116\" height=\"76\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"node_7_di\" bpmnElement=\"node_7\">\n        <dc:Bounds x=\"770\" y=\"210\" width=\"116\" height=\"76\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"node_13_di\" bpmnElement=\"node_13\">\n        <dc:Bounds x=\"920\" y=\"210\" width=\"116\" height=\"76\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"node_14_di\" bpmnElement=\"node_14\">\n        <dc:Bounds x=\"330\" y=\"200\" width=\"116\" height=\"96\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"node_16_di\" bpmnElement=\"node_16\">\n        <di:waypoint x=\"248\" y=\"248\"/>\n        <di:waypoint x=\"388\" y=\"248\"/>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"node_18_di\" bpmnElement=\"node_18\">\n        <di:waypoint x=\"388\" y=\"248\"/>\n        <di:waypoint x=\"538\" y=\"248\"/>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"node_20_di\" bpmnElement=\"node_20\">\n        <di:waypoint x=\"538\" y=\"248\"/>\n        <di:waypoint x=\"688\" y=\"248\"/>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"node_22_di\" bpmnElement=\"node_22\">\n        <di:waypoint x=\"688\" y=\"248\"/>\n        <di:waypoint x=\"828\" y=\"248\"/>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"node_24_di\" bpmnElement=\"node_24\">\n        <di:waypoint x=\"828\" y=\"248\"/>\n        <di:waypoint x=\"978\" y=\"248\"/>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"node_26_di\" bpmnElement=\"node_26\">\n        <di:waypoint x=\"978\" y=\"248\"/>\n        <di:waypoint x=\"1098\" y=\"248\"/>\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>\n",
        "anonymousUserId": 1
    },
    "process_categories": [
        {
            "id": 2,
            "name": "Uncategorized",
            "status": "ACTIVE",
            "is_system": 0,
            "created_at": "2021-11-29T19:21:45+00:00",
            "updated_at": "2021-11-29T19:21:45+00:00",
            "pivot": {
                "assignable_id": 45,
                "category_id": 2,
                "category_type": "ProcessMaker\\Models\\ProcessCategory"
            }
        }
    ],
    "screens": [
        {
            "id": 13,
            "screen_category_id": "1",
            "title": "1Season 4",
            "description": "1Season",
            "type": "FORM",
            "config": [
                {
                    "name": "1Season",
                    "items": [
                        {
                            "label": "Line Input",
                            "config": {
                                "icon": "far fa-square",
                                "name": "season",
                                "type": "text",
                                "label": "_season",
                                "helper": null,
                                "readonly": false,
                                "dataFormat": "string",
                                "validation": [],
                                "placeholder": null
                            },
                            "component": "FormInput",
                            "inspector": [
                                {
                                    "type": "FormInput",
                                    "field": "name",
                                    "config": {
                                        "name": "Variable Name",
                                        "label": "Variable Name",
                                        "helper": "A variable name is a symbolic name to reference information.",
                                        "validation": "regex:/^(?:[A-Za-z])(?:[0-9A-Z_.a-z])*[^.]$/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Label",
                                        "helper": "The label describes the field's name"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "dataFormat",
                                    "config": {
                                        "name": "Data Type",
                                        "label": "Data Type",
                                        "helper": "The data type specifies what kind of data is stored in the variable.",
                                        "options": [
                                            {
                                                "value": "string",
                                                "content": "Text"
                                            },
                                            {
                                                "value": "int",
                                                "content": "Integer"
                                            },
                                            {
                                                "value": "currency",
                                                "content": "Currency"
                                            },
                                            {
                                                "value": "percentage",
                                                "content": "Percentage"
                                            },
                                            {
                                                "value": "float",
                                                "content": "Decimal"
                                            },
                                            {
                                                "value": "datetime",
                                                "content": "Datetime"
                                            },
                                            {
                                                "value": "date",
                                                "content": "Date"
                                            },
                                            {
                                                "value": "password",
                                                "content": "Password"
                                            }
                                        ],
                                        "validation": "required"
                                    }
                                },
                                {
                                    "type": {
                                        "extends": {
                                            "props": [
                                                "label",
                                                "error",
                                                "options",
                                                "helper",
                                                "name",
                                                "value",
                                                "selectedControl"
                                            ],
                                            "mixins": [
                                                {
                                                    "props": [
                                                        "validation",
                                                        "validationData",
                                                        "validationField",
                                                        "validationMessages"
                                                    ],
                                                    "watch": {
                                                        "validationData": {
                                                            "deep": true
                                                        }
                                                    },
                                                    "methods": []
                                                }
                                            ],
                                            "methods": [],
                                            "computed": [],
                                            "_compiled": true,
                                            "components": {
                                                "Multiselect": {
                                                    "name": "vue-multiselect",
                                                    "props": {
                                                        "name": {
                                                            "default": null
                                                        },
                                                        "limit": {
                                                            "default": 99999
                                                        },
                                                        "loading": {
                                                            "default": false
                                                        },
                                                        "disabled": {
                                                            "default": false
                                                        },
                                                        "tabindex": {
                                                            "default": 0
                                                        },
                                                        "limitText": [],
                                                        "maxHeight": {
                                                            "default": 300
                                                        },
                                                        "showLabels": {
                                                            "default": true
                                                        },
                                                        "selectLabel": {
                                                            "default": "Press enter to select"
                                                        },
                                                        "deselectLabel": {
                                                            "default": "Press enter to remove"
                                                        },
                                                        "openDirection": {
                                                            "default": null
                                                        },
                                                        "selectedLabel": {
                                                            "default": "Selected"
                                                        },
                                                        "showNoOptions": {
                                                            "default": true
                                                        },
                                                        "showNoResults": {
                                                            "default": true
                                                        },
                                                        "selectGroupLabel": {
                                                            "default": "Press enter to select group"
                                                        },
                                                        "deselectGroupLabel": {
                                                            "default": "Press enter to deselect group"
                                                        }
                                                    },
                                                    "mixins": [
                                                        {
                                                            "props": {
                                                                "id": {
                                                                    "default": null
                                                                },
                                                                "max": {
                                                                    "type": [
                                                                        null,
                                                                        null
                                                                    ],
                                                                    "default": false
                                                                },
                                                                "label": [],
                                                                "value": {
                                                                    "type": null
                                                                },
                                                                "options": {
                                                                    "required": true
                                                                },
                                                                "trackBy": [],
                                                                "multiple": {
                                                                    "default": false
                                                                },
                                                                "taggable": {
                                                                    "default": false
                                                                },
                                                                "blockKeys": [],
                                                                "allowEmpty": {
                                                                    "default": true
                                                                },
                                                                "groupLabel": [],
                                                                "resetAfter": {
                                                                    "default": false
                                                                },
                                                                "searchable": {
                                                                    "default": true
                                                                },
                                                                "customLabel": [],
                                                                "groupSelect": {
                                                                    "default": false
                                                                },
                                                                "groupValues": [],
                                                                "placeholder": {
                                                                    "default": "Select option"
                                                                },
                                                                "tagPosition": {
                                                                    "default": "top"
                                                                },
                                                                "hideSelected": {
                                                                    "default": false
                                                                },
                                                                "optionsLimit": {
                                                                    "default": 1000
                                                                },
                                                                "clearOnSelect": {
                                                                    "default": true
                                                                },
                                                                "closeOnSelect": {
                                                                    "default": true
                                                                },
                                                                "internalSearch": {
                                                                    "default": true
                                                                },
                                                                "preselectFirst": {
                                                                    "default": false
                                                                },
                                                                "preserveSearch": {
                                                                    "default": false
                                                                },
                                                                "tagPlaceholder": {
                                                                    "default": "Press enter to create a tag"
                                                                }
                                                            },
                                                            "watch": [],
                                                            "methods": [],
                                                            "computed": []
                                                        },
                                                        {
                                                            "props": {
                                                                "showPointer": {
                                                                    "default": true
                                                                },
                                                                "optionHeight": {
                                                                    "default": 40
                                                                }
                                                            },
                                                            "watch": [],
                                                            "methods": [],
                                                            "computed": []
                                                        }
                                                    ],
                                                    "computed": [],
                                                    "_compiled": true,
                                                    "beforeCreate": [
                                                        null
                                                    ],
                                                    "staticRenderFns": []
                                                }
                                            },
                                            "inheritAttrs": false,
                                            "staticRenderFns": []
                                        },
                                        "computed": [],
                                        "_compiled": true,
                                        "staticRenderFns": []
                                    },
                                    "field": "dataMask",
                                    "config": {
                                        "name": "Data Format",
                                        "label": "Data Format",
                                        "helper": "The data format for the selected type."
                                    }
                                },
                                {
                                    "type": "ValidationSelect",
                                    "field": "validation",
                                    "config": {
                                        "label": "Validation Rules",
                                        "helper": "The validation rules needed for this field"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "placeholder",
                                    "config": {
                                        "label": "Placeholder Text",
                                        "helper": "The placeholder is what is shown in the field when no value is provided yet"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "helper",
                                    "config": {
                                        "label": "Helper Text",
                                        "helper": "Help text is meant to provide additional guidance on the field's value"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "readonly",
                                    "config": {
                                        "label": "Read Only",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "color",
                                    "config": {
                                        "label": "Text Color",
                                        "helper": "Set the element's text color",
                                        "options": [
                                            {
                                                "value": "text-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "text-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "text-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "text-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "text-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "text-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "text-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "text-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "bgcolor",
                                    "config": {
                                        "label": "Background Color",
                                        "helper": "Set the element's background color",
                                        "options": [
                                            {
                                                "value": "alert alert-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "alert alert-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "alert alert-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "alert alert-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "alert alert-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "alert alert-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "alert alert-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "alert alert-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": {
                                        "props": [
                                            "value"
                                        ],
                                        "watch": {
                                            "value": {
                                                "immediate": true
                                            }
                                        },
                                        "methods": [],
                                        "_scopeId": "data-v-67152bf8",
                                        "computed": {
                                            "effectiveValue": []
                                        },
                                        "_compiled": true,
                                        "components": {
                                            "MonacoEditor": {
                                                "name": "MonacoEditor",
                                                "model": {
                                                    "event": "change"
                                                },
                                                "props": {
                                                    "theme": {
                                                        "default": "vs"
                                                    },
                                                    "amdRequire": []
                                                },
                                                "watch": {
                                                    "options": {
                                                        "deep": true
                                                    }
                                                },
                                                "methods": []
                                            }
                                        },
                                        "staticRenderFns": []
                                    },
                                    "field": "defaultValue",
                                    "config": {
                                        "label": "Default Value",
                                        "helper": "Takes precedence over value set in data."
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                }
                            ],
                            "editor-control": "FormInput",
                            "editor-component": "FormInput"
                        },
                        {
                            "label": "Submit Button",
                            "config": {
                                "icon": "fas fa-share-square",
                                "name": null,
                                "event": "submit",
                                "label": "New Submit",
                                "variant": "primary",
                                "fieldValue": null,
                                "defaultSubmit": true
                            },
                            "component": "FormButton",
                            "inspector": [
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Label",
                                        "helper": "The label describes the button's text"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "name",
                                    "config": {
                                        "name": "Variable Name",
                                        "label": "Variable Name",
                                        "helper": "A variable name is a symbolic name to reference information."
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "event",
                                    "config": {
                                        "label": "Type",
                                        "helper": "Choose whether the button should submit the form",
                                        "options": [
                                            {
                                                "value": "submit",
                                                "content": "Submit Button"
                                            },
                                            {
                                                "value": "script",
                                                "content": "Regular Button"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "fieldValue",
                                    "config": {
                                        "label": "Value",
                                        "helper": "The value being submitted"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "variant",
                                    "config": {
                                        "label": "Button Variant Style",
                                        "helper": "The variant determines the appearance of the button",
                                        "options": [
                                            {
                                                "value": "primary",
                                                "content": "Primary"
                                            },
                                            {
                                                "value": "secondary",
                                                "content": "Secondary"
                                            },
                                            {
                                                "value": "success",
                                                "content": "Success"
                                            },
                                            {
                                                "value": "danger",
                                                "content": "Danger"
                                            },
                                            {
                                                "value": "warning",
                                                "content": "Warning"
                                            },
                                            {
                                                "value": "info",
                                                "content": "Info"
                                            },
                                            {
                                                "value": "light",
                                                "content": "Light"
                                            },
                                            {
                                                "value": "dark",
                                                "content": "Dark"
                                            },
                                            {
                                                "value": "link",
                                                "content": "Link"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                }
                            ],
                            "editor-control": "FormSubmit",
                            "editor-component": "FormButton"
                        }
                    ]
                }
            ],
            "computed": [
                {
                    "id": 2,
                    "name": "season",
                    "type": "expression",
                    "formula": "_user.id",
                    "property": "season"
                }
            ],
            "custom_css": null,
            "created_at": "2020-06-18T19:21:08+00:00",
            "updated_at": "2021-12-06T18:34:55+00:00",
            "status": "ACTIVE",
            "key": null,
            "watchers": null,
            "categories": [
                {
                    "id": 1,
                    "name": "Uncategorized",
                    "status": "ACTIVE",
                    "is_system": 0,
                    "created_at": "2021-11-29T19:21:45+00:00",
                    "updated_at": "2021-11-29T19:21:45+00:00",
                    "pivot": {
                        "assignable_id": 13,
                        "category_id": 1,
                        "category_type": "ProcessMaker\\Models\\ScreenCategory"
                    }
                }
            ]
        },
        {
            "id": 68,
            "screen_category_id": "3",
            "title": "Loading Paos 2 3 23 25 28",
            "description": "test",
            "type": "DISPLAY",
            "config": [
                {
                    "name": "Loading Paos",
                    "items": [
                        {
                            "items": [
                                [],
                                [
                                    {
                                        "label": "Rich Text",
                                        "config": {
                                            "icon": "fas fa-pencil-ruler",
                                            "label": null,
                                            "content": "<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\n.loader {\n  border: 16px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 16px solid blue;\n  border-right: 16px solid green;\n  border-bottom: 16px solid red;\n  border-left: 16px solid pink;\n  width: 120px;\n  height: 120px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n}\n\n@-webkit-keyframes spin {\n  0% { -webkit-transform: rotate(0deg); }\n  100% { -webkit-transform: rotate(360deg); }\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n</style>\n</head>\n<body>\n\n<h2>Loading PAOS</h2>\n\n<div class=\"loader\"></div>\n\n</body>\n</html>",
                                            "interactive": true,
                                            "renderVarHtml": false,
                                            "customCssSelector": null
                                        },
                                        "component": "FormHtmlViewer",
                                        "inspector": [
                                            {
                                                "type": "FormTextArea",
                                                "field": "content",
                                                "config": {
                                                    "rows": 5,
                                                    "label": "Content",
                                                    "value": null,
                                                    "helper": "The HTML text to display"
                                                }
                                            },
                                            {
                                                "type": "FormCheckbox",
                                                "field": "renderVarHtml",
                                                "config": {
                                                    "label": "Render HTML from a Variable",
                                                    "value": null,
                                                    "helper": null
                                                }
                                            },
                                            {
                                                "type": "FormInput",
                                                "field": "conditionalHide",
                                                "config": {
                                                    "label": "Visibility Rule",
                                                    "helper": "This control is hidden until this expression is true"
                                                }
                                            },
                                            {
                                                "type": "FormInput",
                                                "field": "customCssSelector",
                                                "config": {
                                                    "label": "CSS Selector Name",
                                                    "helper": "Use this in your custom css rules",
                                                    "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                                }
                                            }
                                        ],
                                        "editor-control": "FormHtmlEditor",
                                        "editor-component": "FormHtmlEditor"
                                    }
                                ],
                                []
                            ],
                            "label": "Multicolumn / Table",
                            "config": {
                                "icon": "fas fa-table",
                                "label": null,
                                "options": [
                                    {
                                        "value": 1,
                                        "content": "4"
                                    },
                                    {
                                        "value": 2,
                                        "content": "4"
                                    },
                                    {
                                        "value": 3,
                                        "content": "4"
                                    }
                                ]
                            },
                            "component": "FormMultiColumn",
                            "container": true,
                            "inspector": [
                                {
                                    "type": "ContainerColumns",
                                    "field": "options",
                                    "config": {
                                        "label": "Column Width",
                                        "helper": null,
                                        "validation": "columns-adds-to-12"
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "color",
                                    "config": {
                                        "label": "Text Color",
                                        "helper": "Set the element's text color",
                                        "options": [
                                            {
                                                "value": "text-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "text-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "text-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "text-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "text-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "text-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "text-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "text-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "bgcolor",
                                    "config": {
                                        "label": "Background Color",
                                        "helper": "Set the element's background color",
                                        "options": [
                                            {
                                                "value": "alert alert-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "alert alert-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "alert alert-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "alert alert-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "alert alert-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "alert alert-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "alert alert-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "alert alert-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                }
                            ],
                            "editor-control": "MultiColumn",
                            "editor-component": "MultiColumn"
                        }
                    ]
                }
            ],
            "computed": [],
            "custom_css": ".loader {\n  border-top: 16px solid blue;\n  border-right: 16px solid green;\n  border-bottom: 16px solid red;\n  border-left: 16px solid pink;\n}",
            "created_at": "2021-02-08T14:02:54+00:00",
            "updated_at": "2021-12-07T12:04:37+00:00",
            "status": "ACTIVE",
            "key": null,
            "watchers": null,
            "categories": [
                {
                    "id": 3,
                    "name": "catScreenPao",
                    "status": "ACTIVE",
                    "is_system": 0,
                    "created_at": "2021-02-02T16:09:50+00:00",
                    "updated_at": "2021-12-06T18:34:55+00:00",
                    "pivot": {
                        "assignable_id": 68,
                        "category_id": 3,
                        "category_type": "ProcessMaker\\Models\\ScreenCategory"
                    }
                }
            ]
        }
    ],
    "screen_categories": [],
    "scripts": [],
    "environment_variables": []
}