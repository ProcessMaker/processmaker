#!/usr/bin/env php
<?php

use Illuminate\Support\Env;

define('LARAVEL_START', microtime(true));
/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/
require __DIR__.'/vendor/autoload.php';
$app = require_once __DIR__.'/bootstrap/app.php';
/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/
$consoleOutput = new Symfony\Component\Console\Output\ConsoleOutput;
$consoleOutput->setVerbosity(100);
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$input = new Symfony\Component\Console\Input\ArgvInput;

// Shortcut for tenant:artisan by using the TENANT environment variable
$tenant = Env::get('TENANT', null);
$tokens = $input->getRawTokens();
$isTenantAware = isset($tokens[0]) && $tokens[0] === 'tenants:artisan';
if ($tenant && !$isTenantAware) {
    $command = join(' ', $tokens);
    $newTokens = ['artisan', 'tenants:artisan', $command, "--tenant={$tenant}"];
    $input = new Symfony\Component\Console\Input\ArgvInput($newTokens);
}

$status = $kernel->handle(
    $input,
    $consoleOutput
);
/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/
$kernel->terminate($input, $status);
exit($status);