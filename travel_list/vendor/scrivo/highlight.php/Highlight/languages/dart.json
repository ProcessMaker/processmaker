{
    "keywords": {
        "keyword": "abstract as assert async await break case catch class const continue covariant default deferred do dynamic else enum export extends extension external factory false final finally for Function get hide if implements import in inferface is library mixin new null on operator part rethrow return set show static super switch sync this throw true try typedef var void while with yield",
        "built_in": "Comparable DateTime Duration Function Iterable Iterator List Map Match Null Object Pattern RegExp Set Stopwatch String StringBuffer StringSink Symbol Type Uri bool double dynamic int num print Element ElementList document querySelector querySelectorAll window"
    },
    "contains": [
        {
            "className": "string",
            "variants": [
                {
                    "begin": "r'''",
                    "end": "'''"
                },
                {
                    "begin": "r\"\"\"",
                    "end": "\"\"\""
                },
                {
                    "begin": "r'",
                    "end": "'",
                    "illegal": "\\n"
                },
                {
                    "begin": "r\"",
                    "end": "\"",
                    "illegal": "\\n"
                },
                {
                    "begin": "'''",
                    "end": "'''",
                    "contains": [
                        {
                            "begin": "\\\\[\\s\\S]",
                            "relevance": 0
                        },
                        {
                            "className": "subst",
                            "variants": [
                                {
                                    "begin": "\\$[A-Za-z0-9_]+"
                                }
                            ]
                        },
                        {
                            "className": "subst",
                            "variants": [
                                {
                                    "begin": "\\${",
                                    "end": "}"
                                }
                            ],
                            "keywords": "true false null this is new super",
                            "contains": [
                                {
                                    "className": "number",
                                    "begin": "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",
                                    "relevance": 0
                                },
                                {
                                    "$ref": "#contains.0"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "\"\"\"",
                    "end": "\"\"\"",
                    "contains": [
                        {
                            "$ref": "#contains.0.variants.4.contains.0"
                        },
                        {
                            "$ref": "#contains.0.variants.4.contains.1"
                        },
                        {
                            "$ref": "#contains.0.variants.4.contains.2"
                        }
                    ]
                },
                {
                    "begin": "'",
                    "end": "'",
                    "illegal": "\\n",
                    "contains": [
                        {
                            "$ref": "#contains.0.variants.4.contains.0"
                        },
                        {
                            "$ref": "#contains.0.variants.4.contains.1"
                        },
                        {
                            "$ref": "#contains.0.variants.4.contains.2"
                        }
                    ]
                },
                {
                    "begin": "\"",
                    "end": "\"",
                    "illegal": "\\n",
                    "contains": [
                        {
                            "$ref": "#contains.0.variants.4.contains.0"
                        },
                        {
                            "$ref": "#contains.0.variants.4.contains.1"
                        },
                        {
                            "$ref": "#contains.0.variants.4.contains.2"
                        }
                    ]
                }
            ]
        },
        {
            "className": "comment",
            "begin": "\/\\*\\*",
            "end": "\\*\/",
            "contains": [
                {
                    "begin": "\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b"
                },
                {
                    "className": "doctag",
                    "begin": "(?:TODO|FIXME|NOTE|BUG|XXX):",
                    "relevance": 0
                }
            ],
            "subLanguage": "markdown"
        },
        {
            "className": "comment",
            "begin": "\/\/\/+\\s*",
            "end": "$",
            "contains": [
                {
                    "subLanguage": "markdown",
                    "begin": ".",
                    "end": "$"
                },
                {
                    "$ref": "#contains.1.contains.0"
                },
                {
                    "className": "doctag",
                    "begin": "(?:TODO|FIXME|NOTE|BUG|XXX):",
                    "relevance": 0
                }
            ]
        },
        {
            "className": "comment",
            "begin": "\/\/",
            "end": "$",
            "contains": [
                {
                    "$ref": "#contains.1.contains.0"
                },
                {
                    "className": "doctag",
                    "begin": "(?:TODO|FIXME|NOTE|BUG|XXX):",
                    "relevance": 0
                }
            ]
        },
        {
            "className": "comment",
            "begin": "\/\\*",
            "end": "\\*\/",
            "contains": [
                {
                    "$ref": "#contains.1.contains.0"
                },
                {
                    "className": "doctag",
                    "begin": "(?:TODO|FIXME|NOTE|BUG|XXX):",
                    "relevance": 0
                }
            ]
        },
        {
            "className": "class",
            "beginKeywords": "class interface",
            "end": "{",
            "excludeEnd": true,
            "contains": [
                {
                    "beginKeywords": "extends implements"
                },
                {
                    "className": "title",
                    "begin": "[a-zA-Z_]\\w*",
                    "relevance": 0
                }
            ]
        },
        {
            "$ref": "#contains.0.variants.4.contains.2.contains.0"
        },
        {
            "className": "meta",
            "begin": "@[A-Za-z]+"
        },
        {
            "begin": "=>"
        }
    ]
}
